

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 08 17:45:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18LF46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,keep,inline
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1
   117                           	psect	text100,global,reloc=2,class=CODE,delta=1
   118                           	psect	text101,global,reloc=2,class=CODE,delta=1
   119                           	psect	text102,global,reloc=2,class=CODE,delta=1
   120                           	psect	text103,global,reloc=2,class=CODE,delta=1
   121                           	psect	text104,global,reloc=2,class=CODE,delta=1
   122                           	psect	text105,global,reloc=2,class=CODE,delta=1
   123                           	psect	text106,global,reloc=2,class=CODE,delta=1
   124                           	psect	text107,global,reloc=2,class=CODE,delta=1
   125                           	psect	text108,global,reloc=2,class=CODE,delta=1
   126                           	psect	text109,global,reloc=2,class=CODE,delta=1
   127                           	psect	text110,global,reloc=2,class=CODE,delta=1
   128                           	psect	text111,global,reloc=2,class=CODE,delta=1
   129                           	psect	text112,global,reloc=2,class=CODE,delta=1
   130                           	psect	text113,global,reloc=2,class=CODE,delta=1
   131                           	psect	text114,global,reloc=2,class=CODE,delta=1
   132                           	psect	text115,global,reloc=2,class=CODE,delta=1
   133                           	psect	text116,global,reloc=2,class=CODE,delta=1
   134                           	psect	text117,global,reloc=2,class=CODE,delta=1
   135                           	psect	text118,global,reloc=2,class=CODE,delta=1
   136                           	psect	text119,global,reloc=2,class=CODE,delta=1
   137                           	psect	text120,global,reloc=2,class=CODE,delta=1
   138                           	psect	text121,global,reloc=2,class=CODE,delta=1
   139                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   140                           	psect	text122,global,reloc=2,class=CODE,delta=1
   141                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   142                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   143  0000                     
   144                           ; Version 2.05
   145                           ; Generated 20/12/2018 GMT
   146                           ; 
   147                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   148                           ; All rights reserved.
   149                           ; 
   150                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   151                           ; 
   152                           ; Redistribution and use in source and binary forms, with or without modification, are
   153                           ; permitted provided that the following conditions are met:
   154                           ; 
   155                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   156                           ;        conditions and the following disclaimer.
   157                           ; 
   158                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   159                           ;        of conditions and the following disclaimer in the documentation and/or other
   160                           ;        materials provided with the distribution.
   161                           ; 
   162                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   163                           ;        software without specific prior written permission.
   164                           ; 
   165                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   166                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   167                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   168                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   169                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   170                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   171                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   172                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   173                           ; 
   174                           ; 
   175                           ; Code-generator required, PIC18LF46K40 Definitions
   176                           ; 
   177                           ; SFR Addresses
   178  0000                     
   179 ;; Function _spi2_close is unused but had its address taken
   180  0000                     
   181 ;; Function _spi2_exchangeBlock is unused but had its address taken
   182  0000                     
   183 ;; Function _spi2_writeBlock is unused but had its address taken
   184  0000                     
   185 ;; Function _spi2_readBlock is unused but had its address taken
   186  0000                     
   187 ;; Function _spi2_writeByte is unused but had its address taken
   188  0000                     
   189 ;; Function _spi2_readByte is unused but had its address taken
   190  0000                     
   191 ;; Function _spi2_setSpiISR is unused but had its address taken
   192  0000                     
   193                           	psect	idataCOMRAM
   194  002AE0                     __pidataCOMRAM:
   195                           	opt callstack 0
   196                           
   197                           ;initializer for _RGB_B_State
   198  002AE0  0003               	dw	3
   199                           
   200                           ;initializer for _RGB_G_State
   201  002AE2  0003               	dw	3
   202                           
   203                           ;initializer for _RGB_R_State
   204  002AE4  0003               	dw	3
   205                           
   206                           ;initializer for _B_State
   207  002AE6  0003               	dw	3
   208                           
   209                           ;initializer for _G_State
   210  002AE8  0003               	dw	3
   211                           
   212                           ;initializer for _R_State
   213  002AEA  0003               	dw	3
   214                           
   215                           	psect	smallconst
   216  000F00                     __psmallconst:
   217                           	opt callstack 0
   218  000F00  00                 	db	0
   219  000F01                     _spiMaster:
   220                           	opt callstack 0
   221  000F01  00                 	db	0
   222  000F02  00                 	db	0
   223  000F03  2A                 	db	low _MASTER_open
   224  000F04  2C                 	db	high _MASTER_open
   225  000F05  1E                 	db	low _spi2_exchangeByte
   226  000F06  2A                 	db	high _spi2_exchangeByte
   227  000F07  00                 	db	0
   228  000F08  00                 	db	0
   229  000F09  00                 	db	0
   230  000F0A  00                 	db	0
   231  000F0B  00                 	db	0
   232  000F0C  00                 	db	0
   233  000F0D  00                 	db	0
   234  000F0E  00                 	db	0
   235  000F0F  00                 	db	0
   236  000F10  00                 	db	0
   237  000F11  00                 	db	0
   238  000F12  00                 	db	0
   239  000F13  EE                 	db	low _spi2_isr
   240  000F14  2B                 	db	high _spi2_isr
   241  000F15                     __end_of_spiMaster:
   242                           	opt callstack 0
   243  000F15                     _spi2_configuration:
   244                           	opt callstack 0
   245  000F15  0A                 	db	10
   246  000F16  40                 	db	64
   247  000F17  3B                 	db	59
   248  000F18  00                 	db	0
   249  000F19  0A                 	db	10
   250  000F1A  40                 	db	64
   251  000F1B  3B                 	db	59
   252  000F1C  00                 	db	0
   253  000F1D                     __end_of_spi2_configuration:
   254                           	opt callstack 0
   255  000F1D  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           	psect	nvCOMRAM
   258  00004B                     __pnvCOMRAM:
   259                           	opt callstack 0
   260  00004B                     _eusart1TxBufferRemaining:
   261                           	opt callstack 0
   262  00004B                     	ds	1
   263                           
   264                           	psect	nvBANK0
   265  0000D8                     __pnvBANK0:
   266                           	opt callstack 0
   267  0000D8                     _TMR4_InterruptHandler:
   268                           	opt callstack 0
   269  0000D8                     	ds	2
   270  0000DA                     _EUSART1_ErrorHandler:
   271                           	opt callstack 0
   272  0000DA                     	ds	2
   273  0000DC                     _EUSART1_OverrunErrorHandler:
   274                           	opt callstack 0
   275  0000DC                     	ds	2
   276  0000DE                     _EUSART1_FramingErrorHandler:
   277                           	opt callstack 0
   278  0000DE                     	ds	2
   279  0000E0                     _IOCCF7_InterruptHandler:
   280                           	opt callstack 0
   281  0000E0                     	ds	2
   282  0000E2                     _IOCCF6_InterruptHandler:
   283                           	opt callstack 0
   284  0000E2                     	ds	2
   285  0000E4                     _IOCCF5_InterruptHandler:
   286                           	opt callstack 0
   287  0000E4                     	ds	2
   288  0000E6                     _IOCCF4_InterruptHandler:
   289                           	opt callstack 0
   290  0000E6                     	ds	2
   291  0000E8                     _IOCCF3_InterruptHandler:
   292                           	opt callstack 0
   293  0000E8                     	ds	2
   294  0000EA                     _IOCBF5_InterruptHandler:
   295                           	opt callstack 0
   296  0000EA                     	ds	2
   297  0000EC                     _IOCAF4_InterruptHandler:
   298                           	opt callstack 0
   299  0000EC                     	ds	2
   300  0000EE                     _IOCAF3_InterruptHandler:
   301                           	opt callstack 0
   302  0000EE                     	ds	2
   303  0000F0                     _IOCAF1_InterruptHandler:
   304                           	opt callstack 0
   305  0000F0                     	ds	2
   306  0000F2                     _IOCAF0_InterruptHandler:
   307                           	opt callstack 0
   308  0000F2                     	ds	2
   309  0000F4                     _EUSART1_RxDefaultInterruptHandler:
   310                           	opt callstack 0
   311  0000F4                     	ds	2
   312  0000F6                     _EUSART1_TxDefaultInterruptHandler:
   313                           	opt callstack 0
   314  0000F6                     	ds	2
   315  0000F8                     _INT2_InterruptHandler:
   316                           	opt callstack 0
   317  0000F8                     	ds	2
   318  0000FA                     _INT1_InterruptHandler:
   319                           	opt callstack 0
   320  0000FA                     	ds	2
   321  0000FC                     _INT0_InterruptHandler:
   322                           	opt callstack 0
   323  0000FC                     	ds	2
   324  0000FE                     _TMR2_InterruptHandler:
   325                           	opt callstack 0
   326  0000FE                     	ds	2
   327  0000                     _RB3PPS	set	3826
   328  0000                     _SSP1DATPPS	set	3768
   329  0000                     _RB2PPS	set	3825
   330  0000                     _SSP1CLKPPS	set	3767
   331  0000                     _SSP2BUF	set	3730
   332  0000                     _SSP2ADD	set	3731
   333  0000                     _SSP2CON2	set	3735
   334  0000                     _SSP2CON1	set	3734
   335  0000                     _SSP2STAT	set	3733
   336  0000                     _SSP2CON1bits	set	3734
   337  0000                     _SSP2CLKPPS	set	3727
   338  0000                     _INT1PPS	set	3746
   339  0000                     _INT2PPS	set	3747
   340  0000                     _RD0PPS	set	3839
   341  0000                     _RB4PPS	set	3827
   342  0000                     _INT0PPS	set	3745
   343  0000                     _RB1PPS	set	3824
   344  0000                     _SSP2DATPPS	set	3728
   345  0000                     _RX1PPS	set	3765
   346  0000                     _PMD5	set	3814
   347  0000                     _PMD4	set	3813
   348  0000                     _PMD3	set	3812
   349  0000                     _PMD2	set	3811
   350  0000                     _PMD1	set	3810
   351  0000                     _PMD0	set	3809
   352  0000                     _OSCTUNE	set	3805
   353  0000                     _OSCFRQ	set	3806
   354  0000                     _OSCEN	set	3804
   355  0000                     _OSCCON3	set	3802
   356  0000                     _OSCCON1	set	3800
   357  0000                     _PIR3bits	set	3789
   358  0000                     _PIE3bits	set	3781
   359  0000                     _PIE0bits	set	3778
   360  0000                     _PIR0bits	set	3786
   361  0000                     _PIE4bits	set	3782
   362  0000                     _PIR4bits	set	3790
   363  0000                     _ANSELBbits	set	3865
   364  0000                     _CLKRCON	set	3902
   365  0000                     _CLKRCLK	set	3903
   366  0000                     _FVRCONbits	set	3889
   367  0000                     _FVRCON	set	3889
   368  0000                     _DAC1CON1	set	3892
   369  0000                     _DAC1CON0	set	3891
   370  0000                     _RD2PPS	set	3841
   371  0000                     _IOCCPbits	set	3868
   372  0000                     _IOCCNbits	set	3867
   373  0000                     _IOCCFbits	set	3866
   374  0000                     _IOCBPbits	set	3860
   375  0000                     _IOCBNbits	set	3859
   376  0000                     _IOCBFbits	set	3858
   377  0000                     _IOCAPbits	set	3852
   378  0000                     _IOCANbits	set	3851
   379  0000                     _IOCAFbits	set	3850
   380  0000                     _SLRCONE	set	3883
   381  0000                     _SLRCOND	set	3875
   382  0000                     _SLRCONC	set	3870
   383  0000                     _SLRCONB	set	3862
   384  0000                     _SLRCONA	set	3854
   385  0000                     _ODCOND	set	3876
   386  0000                     _ODCONC	set	3871
   387  0000                     _ODCONB	set	3863
   388  0000                     _ODCONA	set	3855
   389  0000                     _ODCONE	set	3884
   390  0000                     _WPUC	set	3872
   391  0000                     _WPUA	set	3856
   392  0000                     _WPUB	set	3864
   393  0000                     _WPUE	set	3885
   394  0000                     _WPUD	set	3877
   395  0000                     _ANSELA	set	3857
   396  0000                     _ANSELE	set	3886
   397  0000                     _ANSELB	set	3865
   398  0000                     _ANSELC	set	3873
   399  0000                     _ANSELD	set	3878
   400  0000                     _SSP1STATbits	set	3989
   401  0000                     _SSP1CON1bits	set	3990
   402  0000                     _SSP1BUF	set	3986
   403  0000                     _SSP1CON2bits	set	3991
   404  0000                     _SSP1CON3bits	set	3992
   405  0000                     _SSP1MSK	set	3988
   406  0000                     _SSP1ADD	set	3987
   407  0000                     _SSP1CON3	set	3992
   408  0000                     _SSP1CON2	set	3991
   409  0000                     _SSP1CON1	set	3990
   410  0000                     _SSP1STAT	set	3989
   411  0000                     _TRISBbits	set	3977
   412  0000                     _LATEbits	set	3975
   413  0000                     _LATCbits	set	3973
   414  0000                     _LATDbits	set	3974
   415  0000                     _PORTCbits	set	3983
   416  0000                     _TRISDbits	set	3979
   417  0000                     _PR4	set	4022
   418  0000                     _TMR4	set	4021
   419  0000                     _T4CONbits	set	4023
   420  0000                     _T4RSTbits	set	4026
   421  0000                     _T4HLTbits	set	4024
   422  0000                     _T4CON	set	4023
   423  0000                     _T4TMR	set	4021
   424  0000                     _T4PR	set	4022
   425  0000                     _T4RST	set	4026
   426  0000                     _T4HLT	set	4024
   427  0000                     _T4CLKCON	set	4025
   428  0000                     _RC1REG	set	3993
   429  0000                     _RC1STAbits	set	3997
   430  0000                     _TX1REG	set	3994
   431  0000                     _TX1STAbits	set	3998
   432  0000                     _SP1BRGH	set	3996
   433  0000                     _SP1BRGL	set	3995
   434  0000                     _TX1STA	set	3998
   435  0000                     _RC1STA	set	3997
   436  0000                     _BAUD1CON	set	3999
   437  0000                     _TRISD	set	3979
   438  0000                     _TRISC	set	3978
   439  0000                     _TRISB	set	3977
   440  0000                     _TRISA	set	3976
   441  0000                     _TRISE	set	3980
   442  0000                     _LATC	set	3973
   443  0000                     _LATB	set	3972
   444  0000                     _LATA	set	3971
   445  0000                     _LATD	set	3974
   446  0000                     _LATE	set	3975
   447  0000                     _INTCONbits	set	4082
   448  0000                     _PR2	set	4028
   449  0000                     _TMR2	set	4027
   450  0000                     _T2CONbits	set	4029
   451  0000                     _T2RSTbits	set	4032
   452  0000                     _T2HLTbits	set	4030
   453  0000                     _T2CON	set	4029
   454  0000                     _T2TMR	set	4027
   455  0000                     _T2PR	set	4028
   456  0000                     _T2RST	set	4032
   457  0000                     _T2HLT	set	4030
   458  0000                     _T2CLKCON	set	4031
   459                           
   460                           ; #config settings
   461  0000                     
   462                           	psect	cinit
   463  00238A                     __pcinit:
   464                           	opt callstack 0
   465  00238A                     start_initialization:
   466                           	opt callstack 0
   467  00238A                     __initialization:
   468                           	opt callstack 0
   469                           
   470                           ; Initialize objects allocated to COMRAM (12 bytes)
   471                           ; load TBLPTR registers with __pidataCOMRAM
   472  00238A  0EE0               	movlw	low __pidataCOMRAM
   473  00238C  6EF6               	movwf	tblptrl,c
   474  00238E  0E2A               	movlw	high __pidataCOMRAM
   475  002390  6EF7               	movwf	tblptrh,c
   476  002392  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   477  002394  6EF8               	movwf	tblptru,c
   478  002396  EE00  F03F         	lfsr	0,__pdataCOMRAM
   479  00239A  EE10 F00C          	lfsr	1,12
   480  00239E                     copy_data0:
   481  00239E  0009               	tblrd		*+
   482  0023A0  CFF5 FFEE          	movff	tablat,postinc0
   483  0023A4  50E5               	movf	postdec1,w,c
   484  0023A6  50E1               	movf	fsr1l,w,c
   485  0023A8  E1FA               	bnz	copy_data0
   486                           
   487                           ; Clear objects allocated to BANK1 (128 bytes)
   488  0023AA  EE01  F000         	lfsr	0,__pbssBANK1
   489  0023AE  0E80               	movlw	128
   490  0023B0                     clear_0:
   491  0023B0  6AEE               	clrf	postinc0,c
   492  0023B2  06E8               	decf	wreg,f,c
   493  0023B4  E1FD               	bnz	clear_0
   494                           
   495                           ; Clear objects allocated to BANK0 (120 bytes)
   496  0023B6  EE00  F060         	lfsr	0,__pbssBANK0
   497  0023BA  0E78               	movlw	120
   498  0023BC                     clear_1:
   499  0023BC  6AEE               	clrf	postinc0,c
   500  0023BE  06E8               	decf	wreg,f,c
   501  0023C0  E1FD               	bnz	clear_1
   502                           
   503                           ; Clear objects allocated to COMRAM (40 bytes)
   504  0023C2  EE00  F001         	lfsr	0,__pbssCOMRAM
   505  0023C6  0E28               	movlw	40
   506  0023C8                     clear_2:
   507  0023C8  6AEE               	clrf	postinc0,c
   508  0023CA  06E8               	decf	wreg,f,c
   509  0023CC  E1FD               	bnz	clear_2
   510  0023CE                     end_of_initialization:
   511                           	opt callstack 0
   512  0023CE                     __end_of__initialization:
   513                           	opt callstack 0
   514  0023CE  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   515  0023D0  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   516  0023D2  0100               	movlb	0
   517  0023D4  EF17  F00C         	goto	_main	;jump to C main() function
   518                           
   519                           	psect	bssCOMRAM
   520  000001                     __pbssCOMRAM:
   521                           	opt callstack 0
   522  000001                     TMR4_ISR@CountCallBack:
   523                           	opt callstack 0
   524  000001                     	ds	2
   525  000003                     _RGB_B_BlinkCount:
   526                           	opt callstack 0
   527  000003                     	ds	2
   528  000005                     _RGB_B_Counter:
   529                           	opt callstack 0
   530  000005                     	ds	2
   531  000007                     _RGB_G_BlinkCount:
   532                           	opt callstack 0
   533  000007                     	ds	2
   534  000009                     _RGB_G_Counter:
   535                           	opt callstack 0
   536  000009                     	ds	2
   537  00000B                     _RGB_R_BlinkCount:
   538                           	opt callstack 0
   539  00000B                     	ds	2
   540  00000D                     _RGB_R_Counter:
   541                           	opt callstack 0
   542  00000D                     	ds	2
   543  00000F                     _B_BlinkCount:
   544                           	opt callstack 0
   545  00000F                     	ds	2
   546  000011                     _B_Counter:
   547                           	opt callstack 0
   548  000011                     	ds	2
   549  000013                     _G_BlinkCount:
   550                           	opt callstack 0
   551  000013                     	ds	2
   552  000015                     _G_Counter:
   553                           	opt callstack 0
   554  000015                     	ds	2
   555  000017                     _R_BlinkCount:
   556                           	opt callstack 0
   557  000017                     	ds	2
   558  000019                     _R_Counter:
   559                           	opt callstack 0
   560  000019                     	ds	2
   561  00001B                     _R_Enabled:
   562                           	opt callstack 0
   563  00001B                     	ds	2
   564  00001D                     _R_OffTime:
   565                           	opt callstack 0
   566  00001D                     	ds	2
   567  00001F                     _R_OnTime:
   568                           	opt callstack 0
   569  00001F                     	ds	2
   570  000021                     _SentI2CCmd:
   571                           	opt callstack 0
   572  000021                     	ds	1
   573  000022                     _EXT_TARGET_RF_RX:
   574                           	opt callstack 0
   575  000022                     	ds	1
   576  000023                     _eusart1RxLastError:
   577                           	opt callstack 0
   578  000023                     	ds	1
   579  000024                     _eusart1RxCount:
   580                           	opt callstack 0
   581  000024                     	ds	1
   582  000025                     _eusart1RxTail:
   583                           	opt callstack 0
   584  000025                     	ds	1
   585  000026                     _eusart1RxHead:
   586                           	opt callstack 0
   587  000026                     	ds	1
   588  000027                     _eusart1TxTail:
   589                           	opt callstack 0
   590  000027                     	ds	1
   591  000028                     _eusart1TxHead:
   592                           	opt callstack 0
   593  000028                     	ds	1
   594                           
   595                           	psect	dataCOMRAM
   596  00003F                     __pdataCOMRAM:
   597                           	opt callstack 0
   598  00003F                     _RGB_B_State:
   599                           	opt callstack 0
   600  00003F                     	ds	2
   601  000041                     _RGB_G_State:
   602                           	opt callstack 0
   603  000041                     	ds	2
   604  000043                     _RGB_R_State:
   605                           	opt callstack 0
   606  000043                     	ds	2
   607  000045                     _B_State:
   608                           	opt callstack 0
   609  000045                     	ds	2
   610  000047                     _G_State:
   611                           	opt callstack 0
   612  000047                     	ds	2
   613  000049                     _R_State:
   614                           	opt callstack 0
   615  000049                     	ds	2
   616                           
   617                           	psect	bssBANK0
   618  000060                     __pbssBANK0:
   619                           	opt callstack 0
   620  000060                     _eusart1RxStatusBuffer:
   621                           	opt callstack 0
   622  000060                     	ds	64
   623  0000A0                     _spi2_interruptHandler:
   624                           	opt callstack 0
   625  0000A0                     	ds	2
   626  0000A2                     _RGB_B_BlinkCounter:
   627                           	opt callstack 0
   628  0000A2                     	ds	2
   629  0000A4                     _RGB_B_StartAfter:
   630                           	opt callstack 0
   631  0000A4                     	ds	2
   632  0000A6                     _RGB_B_Enabled:
   633                           	opt callstack 0
   634  0000A6                     	ds	2
   635  0000A8                     _RGB_B_OffTime:
   636                           	opt callstack 0
   637  0000A8                     	ds	2
   638  0000AA                     _RGB_B_OnTime:
   639                           	opt callstack 0
   640  0000AA                     	ds	2
   641  0000AC                     _RGB_G_BlinkCounter:
   642                           	opt callstack 0
   643  0000AC                     	ds	2
   644  0000AE                     _RGB_G_StartAfter:
   645                           	opt callstack 0
   646  0000AE                     	ds	2
   647  0000B0                     _RGB_G_Enabled:
   648                           	opt callstack 0
   649  0000B0                     	ds	2
   650  0000B2                     _RGB_G_OffTime:
   651                           	opt callstack 0
   652  0000B2                     	ds	2
   653  0000B4                     _RGB_G_OnTime:
   654                           	opt callstack 0
   655  0000B4                     	ds	2
   656  0000B6                     _RGB_R_BlinkCounter:
   657                           	opt callstack 0
   658  0000B6                     	ds	2
   659  0000B8                     _RGB_R_StartAfter:
   660                           	opt callstack 0
   661  0000B8                     	ds	2
   662  0000BA                     _RGB_R_Enabled:
   663                           	opt callstack 0
   664  0000BA                     	ds	2
   665  0000BC                     _RGB_R_OffTime:
   666                           	opt callstack 0
   667  0000BC                     	ds	2
   668  0000BE                     _RGB_R_OnTime:
   669                           	opt callstack 0
   670  0000BE                     	ds	2
   671  0000C0                     _B_BlinkCounter:
   672                           	opt callstack 0
   673  0000C0                     	ds	2
   674  0000C2                     _B_StartAfter:
   675                           	opt callstack 0
   676  0000C2                     	ds	2
   677  0000C4                     _B_Enabled:
   678                           	opt callstack 0
   679  0000C4                     	ds	2
   680  0000C6                     _B_OffTime:
   681                           	opt callstack 0
   682  0000C6                     	ds	2
   683  0000C8                     _B_OnTime:
   684                           	opt callstack 0
   685  0000C8                     	ds	2
   686  0000CA                     _G_BlinkCounter:
   687                           	opt callstack 0
   688  0000CA                     	ds	2
   689  0000CC                     _G_StartAfter:
   690                           	opt callstack 0
   691  0000CC                     	ds	2
   692  0000CE                     _G_Enabled:
   693                           	opt callstack 0
   694  0000CE                     	ds	2
   695  0000D0                     _G_OffTime:
   696                           	opt callstack 0
   697  0000D0                     	ds	2
   698  0000D2                     _G_OnTime:
   699                           	opt callstack 0
   700  0000D2                     	ds	2
   701  0000D4                     _R_BlinkCounter:
   702                           	opt callstack 0
   703  0000D4                     	ds	2
   704  0000D6                     _R_StartAfter:
   705                           	opt callstack 0
   706  0000D6                     	ds	2
   707                           
   708                           	psect	bssBANK1
   709  000100                     __pbssBANK1:
   710                           	opt callstack 0
   711  000100                     _eusart1RxBuffer:
   712                           	opt callstack 0
   713  000100                     	ds	64
   714  000140                     _eusart1TxBuffer:
   715                           	opt callstack 0
   716  000140                     	ds	64
   717                           
   718                           	psect	cstackBANK1
   719  000180                     __pcstackBANK1:
   720                           	opt callstack 0
   721  000180                     ??_spi2_open:
   722  000180                     EUSART1_Read@readValue:
   723                           	opt callstack 0
   724  000180                     EUSART1_Write@txData:
   725                           	opt callstack 0
   726  000180                     spi2_exchangeByte@b:
   727                           	opt callstack 0
   728  000180                     GetTarget@Address:
   729                           	opt callstack 0
   730  000180                     MRF89XA_GetAddress@Read:
   731                           	opt callstack 0
   732  000180                     TMR2_SetInterruptHandler@InterruptHandler:
   733                           	opt callstack 0
   734  000180                     INT0_SetInterruptHandler@InterruptHandler:
   735                           	opt callstack 0
   736  000180                     INT1_SetInterruptHandler@InterruptHandler:
   737                           	opt callstack 0
   738  000180                     INT2_SetInterruptHandler@InterruptHandler:
   739                           	opt callstack 0
   740  000180                     IOCAF0_SetInterruptHandler@InterruptHandler:
   741                           	opt callstack 0
   742  000180                     IOCAF1_SetInterruptHandler@InterruptHandler:
   743                           	opt callstack 0
   744  000180                     IOCAF3_SetInterruptHandler@InterruptHandler:
   745                           	opt callstack 0
   746  000180                     IOCAF4_SetInterruptHandler@InterruptHandler:
   747                           	opt callstack 0
   748  000180                     IOCBF5_SetInterruptHandler@InterruptHandler:
   749                           	opt callstack 0
   750  000180                     IOCCF3_SetInterruptHandler@InterruptHandler:
   751                           	opt callstack 0
   752  000180                     IOCCF4_SetInterruptHandler@InterruptHandler:
   753                           	opt callstack 0
   754  000180                     IOCCF5_SetInterruptHandler@InterruptHandler:
   755                           	opt callstack 0
   756  000180                     IOCCF6_SetInterruptHandler@InterruptHandler:
   757                           	opt callstack 0
   758  000180                     IOCCF7_SetInterruptHandler@InterruptHandler:
   759                           	opt callstack 0
   760  000180                     EUSART1_SetFramingErrorHandler@interruptHandler:
   761                           	opt callstack 0
   762  000180                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   763                           	opt callstack 0
   764  000180                     EUSART1_SetErrorHandler@interruptHandler:
   765                           	opt callstack 0
   766  000180                     EUSART1_SetTxInterruptHandler@interruptHandler:
   767                           	opt callstack 0
   768  000180                     EUSART1_SetRxInterruptHandler@interruptHandler:
   769                           	opt callstack 0
   770  000180                     TMR4_SetInterruptHandler@InterruptHandler:
   771                           	opt callstack 0
   772  000180                     SetLed@ledIndex:
   773                           	opt callstack 0
   774  000180                     SetLedBlink@ledIndex:
   775                           	opt callstack 0
   776  000180                     Delay_Xms@delay:
   777                           	opt callstack 0
   778  000180                     Delay_Xus@delay:
   779                           	opt callstack 0
   780                           
   781                           ; 4 bytes @ 0x0
   782  000180                     	ds	1
   783  000181                     spi2_open@spiUniqueConfiguration:
   784                           	opt callstack 0
   785  000181                     GetTarget@ret:
   786                           	opt callstack 0
   787  000181                     MRF89XA_ExchangeByte@byte:
   788                           	opt callstack 0
   789  000181                     MRF89XA_GetAddress@Address:
   790                           	opt callstack 0
   791                           
   792                           ; 1 bytes @ 0x1
   793  000181                     	ds	1
   794  000182                     spi_master_open@config:
   795                           	opt callstack 0
   796  000182                     MRF89XA_GetAddress@ret:
   797                           	opt callstack 0
   798  000182                     SetLed@Mode:
   799                           	opt callstack 0
   800  000182                     SetLedBlink@OnTime:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x2
   804  000182                     	ds	2
   805  000184                     ??_Delay_Xms:
   806  000184                     ??_Delay_Xus:
   807  000184                     SetLed@mode2:
   808                           	opt callstack 0
   809  000184                     SetLedBlink@OffTime:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0x4
   813  000184                     	ds	1
   814  000185                     Delay_Xms@i:
   815                           	opt callstack 0
   816  000185                     Delay_Xus@i:
   817                           	opt callstack 0
   818                           
   819                           ; 4 bytes @ 0x5
   820  000185                     	ds	1
   821  000186                     SetLedBlink@StartAfter:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x6
   825  000186                     	ds	2
   826  000188                     SetLedBlink@BlinkCount:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x8
   830  000188                     	ds	1
   831  000189                     MRF89XA_SendConfig@Data:
   832                           	opt callstack 0
   833                           
   834                           ; 1 bytes @ 0x9
   835  000189                     	ds	1
   836  00018A                     MRF89XA_SendConfig@Address:
   837                           	opt callstack 0
   838                           
   839                           ; 1 bytes @ 0xA
   840  00018A                     	ds	1
   841  00018B                     MRF89XA_SendConfig@ret:
   842                           	opt callstack 0
   843                           
   844                           ; 1 bytes @ 0xB
   845  00018B                     	ds	1
   846  00018C                     MRF89XA_WriteConfig@Data:
   847                           	opt callstack 0
   848                           
   849                           ; 1 bytes @ 0xC
   850  00018C                     	ds	1
   851  00018D                     MRF89XA_WriteConfig@Address:
   852                           	opt callstack 0
   853                           
   854                           ; 1 bytes @ 0xD
   855  00018D                     	ds	1
   856  00018E                     MRF89XA_SetMode@mask:
   857                           	opt callstack 0
   858  00018E                     MRF89XA_SetModulation@Modulation:
   859                           	opt callstack 0
   860                           
   861                           ; 1 bytes @ 0xE
   862  00018E                     	ds	1
   863  00018F                     MRF89XA_SetMode@Mode:
   864                           	opt callstack 0
   865  00018F                     MRF89XA_SetModulation@mask:
   866                           	opt callstack 0
   867                           
   868                           ; 1 bytes @ 0xF
   869  00018F                     	ds	1
   870  000190                     MRF89XA_Initialize@Mode:
   871                           	opt callstack 0
   872                           
   873                           ; 1 bytes @ 0x10
   874  000190                     	ds	1
   875  000191                     MRF89XA_Initialize@Modulation:
   876                           	opt callstack 0
   877                           
   878                           ; 1 bytes @ 0x11
   879  000191                     	ds	1
   880  000192                     MRF89XA_Initialize@Address:
   881                           	opt callstack 0
   882                           
   883                           ; 1 bytes @ 0x12
   884  000192                     	ds	1
   885                           
   886                           	psect	cstackBANK0
   887  000000                     __pcstackBANK0:
   888                           	opt callstack 0
   889  000000                     
   890                           ; 1 bytes @ 0x0
   891                           
   892                           	psect	cstackCOMRAM
   893  000029                     __pcstackCOMRAM:
   894                           	opt callstack 0
   895  000029                     ??_I2C_Master_Send_ACK:
   896  000029                     i2spi2_exchangeByte@b:
   897                           	opt callstack 0
   898  000029                     i2MRF89XA_GetAddress@Read:
   899                           	opt callstack 0
   900  000029                     ToggleLed@ledIndex:
   901                           	opt callstack 0
   902  000029                     i2SetLed@ledIndex:
   903                           	opt callstack 0
   904  000029                     i2SetLedBlink@ledIndex:
   905                           	opt callstack 0
   906  000029                     i2Delay_Xms@delay:
   907                           	opt callstack 0
   908  000029                     i2Delay_Xus@delay:
   909                           	opt callstack 0
   910                           
   911                           ; 4 bytes @ 0x0
   912  000029                     	ds	1
   913  00002A                     I2C_Master_Send_ACK@Ack:
   914                           	opt callstack 0
   915  00002A                     i2MRF89XA_ExchangeByte@byte:
   916                           	opt callstack 0
   917  00002A                     i2MRF89XA_GetAddress@Address:
   918                           	opt callstack 0
   919                           
   920                           ; 1 bytes @ 0x1
   921  00002A                     	ds	1
   922  00002B                     ??_ToggleLed:
   923  00002B                     i2MRF89XA_GetAddress@ret:
   924                           	opt callstack 0
   925  00002B                     i2SetLed@Mode:
   926                           	opt callstack 0
   927  00002B                     i2SetLedBlink@OnTime:
   928                           	opt callstack 0
   929                           
   930                           ; 2 bytes @ 0x2
   931  00002B                     	ds	2
   932  00002D                     ??i2_Delay_Xms:
   933  00002D                     ??i2_Delay_Xus:
   934  00002D                     i2SetLed@mode2:
   935                           	opt callstack 0
   936  00002D                     i2SetLedBlink@OffTime:
   937                           	opt callstack 0
   938                           
   939                           ; 2 bytes @ 0x4
   940  00002D                     	ds	1
   941  00002E                     i2Delay_Xms@i:
   942                           	opt callstack 0
   943  00002E                     i2Delay_Xus@i:
   944                           	opt callstack 0
   945                           
   946                           ; 4 bytes @ 0x5
   947  00002E                     	ds	1
   948  00002F                     i2SetLedBlink@StartAfter:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x6
   952  00002F                     	ds	2
   953  000031                     i2SetLedBlink@BlinkCount:
   954                           	opt callstack 0
   955                           
   956                           ; 2 bytes @ 0x8
   957  000031                     	ds	1
   958  000032                     i2MRF89XA_SendConfig@Data:
   959                           	opt callstack 0
   960                           
   961                           ; 1 bytes @ 0x9
   962  000032                     	ds	1
   963  000033                     I2C_Master_Write@data:
   964                           	opt callstack 0
   965  000033                     i2MRF89XA_SendConfig@Address:
   966                           	opt callstack 0
   967                           
   968                           ; 1 bytes @ 0xA
   969  000033                     	ds	1
   970  000034                     I2C_SendCommand@CMD:
   971                           	opt callstack 0
   972  000034                     i2MRF89XA_SendConfig@ret:
   973                           	opt callstack 0
   974                           
   975                           ; 1 bytes @ 0xB
   976  000034                     	ds	1
   977  000035                     I2C_SendCommand@result:
   978                           	opt callstack 0
   979  000035                     MRF89XA_ReadConfig@Address:
   980                           	opt callstack 0
   981                           
   982                           ; 1 bytes @ 0xC
   983  000035                     	ds	1
   984  000036                     I2C_SendCommand@Target:
   985                           	opt callstack 0
   986  000036                     MRF89XA_IsTxDone@reg:
   987                           	opt callstack 0
   988                           
   989                           ; 1 bytes @ 0xD
   990  000036                     	ds	1
   991  000037                     MRF89XA_ReadAllConfigs@cond:
   992                           	opt callstack 0
   993  000037                     MRF89XA_SendData@Data:
   994                           	opt callstack 0
   995                           
   996                           ; 1 bytes @ 0xE
   997  000037                     	ds	1
   998  000038                     MRF89XA_ReadAllConfigs@counter:
   999                           	opt callstack 0
  1000  000038                     MRF89XA_SendData@TargetAddress:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 1 bytes @ 0xF
  1004  000038                     	ds	1
  1005  000039                     ext_rf_runcmd@dx:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x10
  1009  000039                     	ds	1
  1010  00003A                     INT0_Custom_ISR@index:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x11
  1014  00003A                     	ds	1
  1015  00003B                     ??_INTERRUPT_InterruptManager:
  1016                           
  1017                           ; 1 bytes @ 0x12
  1018  00003B                     	ds	4
  1019                           
  1020 ;;
  1021 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1022 ;;
  1023 ;; *************** function _main *****************
  1024 ;; Defined at:
  1025 ;;		line 81 in file "main.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels required when called:   17
  1045 ;; This function calls:
  1046 ;;		_Delay_Xms
  1047 ;;		_INT0_SetInterruptHandler
  1048 ;;		_MRF89XA_Initialize
  1049 ;;		_RunLoop
  1050 ;;		_SYSTEM_Initialize
  1051 ;;		_SetLedBlink
  1052 ;;		_TMR2_SetInterruptHandler
  1053 ;;		_ext_rf_initialize
  1054 ;; This function is called by:
  1055 ;;		Startup code after reset
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text0
  1060  00182E                     __ptext0:
  1061                           	opt callstack 0
  1062  00182E                     _main:
  1063                           	opt callstack 14
  1064                           
  1065                           ;main.c: 84: SYSTEM_Initialize();
  1066                           
  1067                           ;incstack = 0
  1068  00182E  EC48  F011         	call	_SYSTEM_Initialize	;wreg free
  1069  001832  9085               	bcf	3973,0,c	;volatile
  1070  001834  8285               	bsf	3973,1,c	;volatile
  1071                           
  1072                           ;main.c: 91: ext_rf_initialize();
  1073  001836  EC8E  F015         	call	_ext_rf_initialize	;wreg free
  1074                           
  1075                           ;main.c: 98: SetLedBlink(RGB_R,20,40,0,1);
  1076  00183A  0E00               	movlw	0
  1077  00183C  0101               	movlb	1	; () banked
  1078  00183E  6F81               	movwf	(SetLedBlink@ledIndex+1)& (0+255),b
  1079  001840  0E03               	movlw	3
  1080  001842  6F80               	movwf	SetLedBlink@ledIndex& (0+255),b
  1081  001844  0E00               	movlw	0
  1082  001846  6F83               	movwf	(SetLedBlink@OnTime+1)& (0+255),b
  1083  001848  0E14               	movlw	20
  1084  00184A  6F82               	movwf	SetLedBlink@OnTime& (0+255),b
  1085  00184C  0E00               	movlw	0
  1086  00184E  6F85               	movwf	(SetLedBlink@OffTime+1)& (0+255),b
  1087  001850  0E28               	movlw	40
  1088  001852  6F84               	movwf	SetLedBlink@OffTime& (0+255),b
  1089  001854  0E00               	movlw	0
  1090  001856  6F87               	movwf	(SetLedBlink@StartAfter+1)& (0+255),b
  1091  001858  0E00               	movlw	0
  1092  00185A  6F86               	movwf	SetLedBlink@StartAfter& (0+255),b
  1093  00185C  0E00               	movlw	0
  1094  00185E  6F89               	movwf	(SetLedBlink@BlinkCount+1)& (0+255),b
  1095  001860  0E01               	movlw	1
  1096  001862  6F88               	movwf	SetLedBlink@BlinkCount& (0+255),b
  1097  001864  EC48  F00A         	call	_SetLedBlink	;wreg free
  1098                           
  1099                           ;main.c: 99: SetLedBlink(RGB_G,20,40,20,1);
  1100  001868  0E00               	movlw	0
  1101  00186A  0101               	movlb	1	; () banked
  1102  00186C  6F81               	movwf	(SetLedBlink@ledIndex+1)& (0+255),b
  1103  00186E  0E04               	movlw	4
  1104  001870  6F80               	movwf	SetLedBlink@ledIndex& (0+255),b
  1105  001872  0E00               	movlw	0
  1106  001874  6F83               	movwf	(SetLedBlink@OnTime+1)& (0+255),b
  1107  001876  0E14               	movlw	20
  1108  001878  6F82               	movwf	SetLedBlink@OnTime& (0+255),b
  1109  00187A  0E00               	movlw	0
  1110  00187C  6F85               	movwf	(SetLedBlink@OffTime+1)& (0+255),b
  1111  00187E  0E28               	movlw	40
  1112  001880  6F84               	movwf	SetLedBlink@OffTime& (0+255),b
  1113  001882  0E00               	movlw	0
  1114  001884  6F87               	movwf	(SetLedBlink@StartAfter+1)& (0+255),b
  1115  001886  0E14               	movlw	20
  1116  001888  6F86               	movwf	SetLedBlink@StartAfter& (0+255),b
  1117  00188A  0E00               	movlw	0
  1118  00188C  6F89               	movwf	(SetLedBlink@BlinkCount+1)& (0+255),b
  1119  00188E  0E01               	movlw	1
  1120  001890  6F88               	movwf	SetLedBlink@BlinkCount& (0+255),b
  1121  001892  EC48  F00A         	call	_SetLedBlink	;wreg free
  1122                           
  1123                           ;main.c: 100: SetLedBlink(RGB_B,20,40,40,1);
  1124  001896  0E00               	movlw	0
  1125  001898  0101               	movlb	1	; () banked
  1126  00189A  6F81               	movwf	(SetLedBlink@ledIndex+1)& (0+255),b
  1127  00189C  0E05               	movlw	5
  1128  00189E  6F80               	movwf	SetLedBlink@ledIndex& (0+255),b
  1129  0018A0  0E00               	movlw	0
  1130  0018A2  6F83               	movwf	(SetLedBlink@OnTime+1)& (0+255),b
  1131  0018A4  0E14               	movlw	20
  1132  0018A6  6F82               	movwf	SetLedBlink@OnTime& (0+255),b
  1133  0018A8  0E00               	movlw	0
  1134  0018AA  6F85               	movwf	(SetLedBlink@OffTime+1)& (0+255),b
  1135  0018AC  0E28               	movlw	40
  1136  0018AE  6F84               	movwf	SetLedBlink@OffTime& (0+255),b
  1137  0018B0  0E00               	movlw	0
  1138  0018B2  6F87               	movwf	(SetLedBlink@StartAfter+1)& (0+255),b
  1139  0018B4  0E28               	movlw	40
  1140  0018B6  6F86               	movwf	SetLedBlink@StartAfter& (0+255),b
  1141  0018B8  0E00               	movlw	0
  1142  0018BA  6F89               	movwf	(SetLedBlink@BlinkCount+1)& (0+255),b
  1143  0018BC  0E01               	movlw	1
  1144  0018BE  6F88               	movwf	SetLedBlink@BlinkCount& (0+255),b
  1145  0018C0  EC48  F00A         	call	_SetLedBlink	;wreg free
  1146                           
  1147                           ;main.c: 101: SetLedBlink(R,20,40,0,1);
  1148  0018C4  0E00               	movlw	0
  1149  0018C6  0101               	movlb	1	; () banked
  1150  0018C8  6F81               	movwf	(SetLedBlink@ledIndex+1)& (0+255),b
  1151  0018CA  0E00               	movlw	0
  1152  0018CC  6F80               	movwf	SetLedBlink@ledIndex& (0+255),b
  1153  0018CE  0E00               	movlw	0
  1154  0018D0  6F83               	movwf	(SetLedBlink@OnTime+1)& (0+255),b
  1155  0018D2  0E14               	movlw	20
  1156  0018D4  6F82               	movwf	SetLedBlink@OnTime& (0+255),b
  1157  0018D6  0E00               	movlw	0
  1158  0018D8  6F85               	movwf	(SetLedBlink@OffTime+1)& (0+255),b
  1159  0018DA  0E28               	movlw	40
  1160  0018DC  6F84               	movwf	SetLedBlink@OffTime& (0+255),b
  1161  0018DE  0E00               	movlw	0
  1162  0018E0  6F87               	movwf	(SetLedBlink@StartAfter+1)& (0+255),b
  1163  0018E2  0E00               	movlw	0
  1164  0018E4  6F86               	movwf	SetLedBlink@StartAfter& (0+255),b
  1165  0018E6  0E00               	movlw	0
  1166  0018E8  6F89               	movwf	(SetLedBlink@BlinkCount+1)& (0+255),b
  1167  0018EA  0E01               	movlw	1
  1168  0018EC  6F88               	movwf	SetLedBlink@BlinkCount& (0+255),b
  1169  0018EE  EC48  F00A         	call	_SetLedBlink	;wreg free
  1170                           
  1171                           ;main.c: 102: SetLedBlink(G,20,40,20,1);
  1172  0018F2  0E00               	movlw	0
  1173  0018F4  0101               	movlb	1	; () banked
  1174  0018F6  6F81               	movwf	(SetLedBlink@ledIndex+1)& (0+255),b
  1175  0018F8  0E01               	movlw	1
  1176  0018FA  6F80               	movwf	SetLedBlink@ledIndex& (0+255),b
  1177  0018FC  0E00               	movlw	0
  1178  0018FE  6F83               	movwf	(SetLedBlink@OnTime+1)& (0+255),b
  1179  001900  0E14               	movlw	20
  1180  001902  6F82               	movwf	SetLedBlink@OnTime& (0+255),b
  1181  001904  0E00               	movlw	0
  1182  001906  6F85               	movwf	(SetLedBlink@OffTime+1)& (0+255),b
  1183  001908  0E28               	movlw	40
  1184  00190A  6F84               	movwf	SetLedBlink@OffTime& (0+255),b
  1185  00190C  0E00               	movlw	0
  1186  00190E  6F87               	movwf	(SetLedBlink@StartAfter+1)& (0+255),b
  1187  001910  0E14               	movlw	20
  1188  001912  6F86               	movwf	SetLedBlink@StartAfter& (0+255),b
  1189  001914  0E00               	movlw	0
  1190  001916  6F89               	movwf	(SetLedBlink@BlinkCount+1)& (0+255),b
  1191  001918  0E01               	movlw	1
  1192  00191A  6F88               	movwf	SetLedBlink@BlinkCount& (0+255),b
  1193  00191C  EC48  F00A         	call	_SetLedBlink	;wreg free
  1194                           
  1195                           ;main.c: 103: SetLedBlink(B,20,40,40,1);
  1196  001920  0E00               	movlw	0
  1197  001922  0101               	movlb	1	; () banked
  1198  001924  6F81               	movwf	(SetLedBlink@ledIndex+1)& (0+255),b
  1199  001926  0E02               	movlw	2
  1200  001928  6F80               	movwf	SetLedBlink@ledIndex& (0+255),b
  1201  00192A  0E00               	movlw	0
  1202  00192C  6F83               	movwf	(SetLedBlink@OnTime+1)& (0+255),b
  1203  00192E  0E14               	movlw	20
  1204  001930  6F82               	movwf	SetLedBlink@OnTime& (0+255),b
  1205  001932  0E00               	movlw	0
  1206  001934  6F85               	movwf	(SetLedBlink@OffTime+1)& (0+255),b
  1207  001936  0E28               	movlw	40
  1208  001938  6F84               	movwf	SetLedBlink@OffTime& (0+255),b
  1209  00193A  0E00               	movlw	0
  1210  00193C  6F87               	movwf	(SetLedBlink@StartAfter+1)& (0+255),b
  1211  00193E  0E28               	movlw	40
  1212  001940  6F86               	movwf	SetLedBlink@StartAfter& (0+255),b
  1213  001942  0E00               	movlw	0
  1214  001944  6F89               	movwf	(SetLedBlink@BlinkCount+1)& (0+255),b
  1215  001946  0E01               	movlw	1
  1216  001948  6F88               	movwf	SetLedBlink@BlinkCount& (0+255),b
  1217  00194A  EC48  F00A         	call	_SetLedBlink	;wreg free
  1218                           
  1219                           ;main.c: 106: (INTCONbits.GIE = 1);
  1220  00194E  8EF2               	bsf	4082,7,c	;volatile
  1221                           
  1222                           ;main.c: 108: (INTCONbits.PEIE = 1);
  1223  001950  8CF2               	bsf	4082,6,c	;volatile
  1224  001952  8085               	bsf	3973,0,c	;volatile
  1225  001954  9285               	bcf	3973,1,c	;volatile
  1226                           
  1227                           ;main.c: 115: Delay_Xms(600);
  1228  001956  0E58               	movlw	88
  1229  001958  0101               	movlb	1	; () banked
  1230  00195A  6F80               	movwf	Delay_Xms@delay& (0+255),b
  1231  00195C  0E02               	movlw	2
  1232  00195E  6F81               	movwf	(Delay_Xms@delay+1)& (0+255),b
  1233  001960  0E00               	movlw	0
  1234  001962  6F82               	movwf	(Delay_Xms@delay+2)& (0+255),b
  1235  001964  0E00               	movlw	0
  1236  001966  6F83               	movwf	(Delay_Xms@delay+3)& (0+255),b
  1237  001968  EC9C  F011         	call	_Delay_Xms	;wreg free
  1238                           
  1239                           ;main.c: 118: SetLedBlink(G,5,95,0,-1);
  1240  00196C  0E00               	movlw	0
  1241  00196E  0101               	movlb	1	; () banked
  1242  001970  6F81               	movwf	(SetLedBlink@ledIndex+1)& (0+255),b
  1243  001972  0E01               	movlw	1
  1244  001974  6F80               	movwf	SetLedBlink@ledIndex& (0+255),b
  1245  001976  0E00               	movlw	0
  1246  001978  6F83               	movwf	(SetLedBlink@OnTime+1)& (0+255),b
  1247  00197A  0E05               	movlw	5
  1248  00197C  6F82               	movwf	SetLedBlink@OnTime& (0+255),b
  1249  00197E  0E00               	movlw	0
  1250  001980  6F85               	movwf	(SetLedBlink@OffTime+1)& (0+255),b
  1251  001982  0E5F               	movlw	95
  1252  001984  6F84               	movwf	SetLedBlink@OffTime& (0+255),b
  1253  001986  0E00               	movlw	0
  1254  001988  6F87               	movwf	(SetLedBlink@StartAfter+1)& (0+255),b
  1255  00198A  0E00               	movlw	0
  1256  00198C  6F86               	movwf	SetLedBlink@StartAfter& (0+255),b
  1257  00198E  0EFF               	movlw	255
  1258  001990  6F89               	movwf	(SetLedBlink@BlinkCount+1)& (0+255),b
  1259  001992  6988               	setf	SetLedBlink@BlinkCount& (0+255),b
  1260  001994  EC48  F00A         	call	_SetLedBlink	;wreg free
  1261                           
  1262                           ;main.c: 121: MRF89XA_Initialize(0x40, MRF89XA_MODE_TX, MRF89XA_MODULATION_OOK);
  1263  001998  0E01               	movlw	1
  1264  00199A  0101               	movlb	1	; () banked
  1265  00199C  6F90               	movwf	MRF89XA_Initialize@Mode& (0+255),b
  1266  00199E  0E05               	movlw	5
  1267  0019A0  6F91               	movwf	MRF89XA_Initialize@Modulation& (0+255),b
  1268  0019A2  0E40               	movlw	64
  1269  0019A4  ECB1  F00D         	call	_MRF89XA_Initialize
  1270                           
  1271                           ;main.c: 123: Delay_Xms(5);
  1272  0019A8  0E05               	movlw	5
  1273  0019AA  0101               	movlb	1	; () banked
  1274  0019AC  6F80               	movwf	Delay_Xms@delay& (0+255),b
  1275  0019AE  0E00               	movlw	0
  1276  0019B0  6F81               	movwf	(Delay_Xms@delay+1)& (0+255),b
  1277  0019B2  0E00               	movlw	0
  1278  0019B4  6F82               	movwf	(Delay_Xms@delay+2)& (0+255),b
  1279  0019B6  0E00               	movlw	0
  1280  0019B8  6F83               	movwf	(Delay_Xms@delay+3)& (0+255),b
  1281  0019BA  EC9C  F011         	call	_Delay_Xms	;wreg free
  1282                           
  1283                           ;main.c: 126: TMR2_SetInterruptHandler(TMR2_Custom_ISR);
  1284  0019BE  0E1E               	movlw	low _TMR2_Custom_ISR
  1285  0019C0  0101               	movlb	1	; () banked
  1286  0019C2  6F80               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  1287  0019C4  0E0F               	movlw	high _TMR2_Custom_ISR
  1288  0019C6  6F81               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1289  0019C8  EC98  F015         	call	_TMR2_SetInterruptHandler	;wreg free
  1290                           
  1291                           ;main.c: 127: INT0_SetInterruptHandler(INT0_Custom_ISR);
  1292  0019CC  0E50               	movlw	low _INT0_Custom_ISR
  1293  0019CE  0101               	movlb	1	; () banked
  1294  0019D0  6F80               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  1295  0019D2  0E2A               	movlw	high _INT0_Custom_ISR
  1296  0019D4  6F81               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1297  0019D6  ECD9  F015         	call	_INT0_SetInterruptHandler	;wreg free
  1298  0019DA                     l6626:
  1299                           
  1300                           ;main.c: 130: {;main.c: 131: RunLoop();
  1301  0019DA  ECF1  F010         	call	_RunLoop	;wreg free
  1302                           
  1303                           ;main.c: 132: Delay_Xms(100);
  1304  0019DE  0E64               	movlw	100
  1305  0019E0  0101               	movlb	1	; () banked
  1306  0019E2  6F80               	movwf	Delay_Xms@delay& (0+255),b
  1307  0019E4  0E00               	movlw	0
  1308  0019E6  6F81               	movwf	(Delay_Xms@delay+1)& (0+255),b
  1309  0019E8  0E00               	movlw	0
  1310  0019EA  6F82               	movwf	(Delay_Xms@delay+2)& (0+255),b
  1311  0019EC  0E00               	movlw	0
  1312  0019EE  6F83               	movwf	(Delay_Xms@delay+3)& (0+255),b
  1313  0019F0  EC9C  F011         	call	_Delay_Xms	;wreg free
  1314  0019F4  D7F2               	goto	l6626
  1315  0019F6                     __end_of_main:
  1316                           	opt callstack 0
  1317                           
  1318 ;; *************** function _ext_rf_initialize *****************
  1319 ;; Defined at:
  1320 ;;		line 15 in file "ext_rf_receiver.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1338 ;;Total ram usage:        0 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:   12
  1341 ;; This function calls:
  1342 ;;		_GetTarget
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text1
  1349  002B1C                     __ptext1:
  1350                           	opt callstack 0
  1351  002B1C                     _ext_rf_initialize:
  1352                           	opt callstack 18
  1353                           
  1354                           ;ext_rf_receiver.c: 16: EXT_TARGET_RF_RX = GetTarget(0x70);
  1355                           
  1356                           ;incstack = 0
  1357  002B1C  0E70               	movlw	112
  1358  002B1E  EC40  F015         	call	_GetTarget
  1359  002B22  6E22               	movwf	_EXT_TARGET_RF_RX,c
  1360  002B24  0012               	return		;funcret
  1361  002B26                     __end_of_ext_rf_initialize:
  1362                           	opt callstack 0
  1363                           
  1364 ;; *************** function _GetTarget *****************
  1365 ;; Defined at:
  1366 ;;		line 447 in file "iic.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  Address         1    wreg     unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  Address         1    0[BANK1 ] unsigned char 
  1371 ;;  ret             1    1[BANK1 ] unsigned char 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      unsigned char 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1382 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1384 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1385 ;;Total ram usage:        2 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:   11
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_ext_rf_initialize
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text2
  1396  002A80                     __ptext2:
  1397                           	opt callstack 0
  1398  002A80                     _GetTarget:
  1399                           	opt callstack 18
  1400                           
  1401                           ;incstack = 0
  1402                           ;GetTarget@Address stored from wreg
  1403  002A80  0101               	movlb	1	; () banked
  1404  002A82  6F80               	movwf	GetTarget@Address& (0+255),b
  1405                           
  1406                           ;iic.c: 448: unsigned char ret = Address << 1;
  1407  002A84  0101               	movlb	1	; () banked
  1408  002A86  5180               	movf	GetTarget@Address& (0+255),w,b
  1409  002A88  2580               	addwf	GetTarget@Address& (0+255),w,b
  1410  002A8A  6F81               	movwf	GetTarget@ret& (0+255),b
  1411                           
  1412                           ;iic.c: 449: ret = ret & 0b11111110;
  1413  002A8C  5181               	movf	GetTarget@ret& (0+255),w,b
  1414  002A8E  0BFE               	andlw	254
  1415  002A90  6F81               	movwf	GetTarget@ret& (0+255),b
  1416                           
  1417                           ; BSR set to: 1
  1418                           ;iic.c: 450: return ret;
  1419  002A92  5181               	movf	GetTarget@ret& (0+255),w,b
  1420                           
  1421                           ; BSR set to: 1
  1422  002A94  0012               	return		;funcret
  1423  002A96                     __end_of_GetTarget:
  1424                           	opt callstack 0
  1425                           
  1426 ;; *************** function _SYSTEM_Initialize *****************
  1427 ;; Defined at:
  1428 ;;		line 51 in file "mcc_generated_files/mcc.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:   14
  1449 ;; This function calls:
  1450 ;;		_CLKREF_Initialize
  1451 ;;		_DAC1_Initialize
  1452 ;;		_EUSART1_Initialize
  1453 ;;		_EXT_INT_Initialize
  1454 ;;		_FVR_Initialize
  1455 ;;		_I2C_Master_Init
  1456 ;;		_INTERRUPT_Initialize
  1457 ;;		_OSCILLATOR_Initialize
  1458 ;;		_PIN_MANAGER_Initialize
  1459 ;;		_PMD_Initialize
  1460 ;;		_SetLed
  1461 ;;		_TMR2_Initialize
  1462 ;;		_TMR4_Initialize
  1463 ;;		_spi_master_open
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text3
  1470  002290                     __ptext3:
  1471                           	opt callstack 0
  1472  002290                     _SYSTEM_Initialize:
  1473                           	opt callstack 16
  1474                           
  1475                           ;mcc.c: 53: INTERRUPT_Initialize();
  1476                           
  1477                           ; BSR set to: 1
  1478                           ;incstack = 0
  1479  002290  EC26  F016         	call	_INTERRUPT_Initialize	;wreg free
  1480                           
  1481                           ;mcc.c: 54: PMD_Initialize();
  1482  002294  ECE6  F014         	call	_PMD_Initialize	;wreg free
  1483                           
  1484                           ;mcc.c: 55: PIN_MANAGER_Initialize();
  1485  002298  ECFB  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  1486                           
  1487                           ;mcc.c: 56: OSCILLATOR_Initialize();
  1488  00229C  EC1C  F015         	call	_OSCILLATOR_Initialize	;wreg free
  1489                           
  1490                           ;mcc.c: 57: FVR_Initialize();
  1491  0022A0  EC19  F016         	call	_FVR_Initialize	;wreg free
  1492                           
  1493                           ;mcc.c: 58: TMR4_Initialize();
  1494  0022A4  EC2B  F013         	call	_TMR4_Initialize	;wreg free
  1495                           
  1496                           ;mcc.c: 59: DAC1_Initialize();
  1497  0022A8  EC76  F015         	call	_DAC1_Initialize	;wreg free
  1498                           
  1499                           ;mcc.c: 60: TMR2_Initialize();
  1500  0022AC  EC42  F013         	call	_TMR2_Initialize	;wreg free
  1501                           
  1502                           ;mcc.c: 61: EXT_INT_Initialize();
  1503  0022B0  EC11  F012         	call	_EXT_INT_Initialize	;wreg free
  1504                           
  1505                           ;mcc.c: 62: EUSART1_Initialize();
  1506  0022B4  EC41  F010         	call	_EUSART1_Initialize	;wreg free
  1507                           
  1508                           ;mcc.c: 63: CLKREF_Initialize();
  1509  0022B8  EC7C  F015         	call	_CLKREF_Initialize	;wreg free
  1510                           
  1511                           ;mcc.c: 64: I2C_Master_Init();
  1512  0022BC  ECBA  F012         	call	_I2C_Master_Init	;wreg free
  1513                           
  1514                           ;mcc.c: 65: if(spi_master_open(MASTER) == 0) {
  1515  0022C0  0E00               	movlw	0
  1516  0022C2  ECD8  F014         	call	_spi_master_open
  1517  0022C6  0900               	iorlw	0
  1518  0022C8  A4D8               	btfss	status,2,c
  1519  0022CA  0012               	return	
  1520                           
  1521                           ;mcc.c: 66: SetLed(R,ON);
  1522  0022CC  0E00               	movlw	0
  1523  0022CE  0101               	movlb	1	; () banked
  1524  0022D0  6F81               	movwf	(SetLed@ledIndex+1)& (0+255),b
  1525  0022D2  0E00               	movlw	0
  1526  0022D4  6F80               	movwf	SetLed@ledIndex& (0+255),b
  1527  0022D6  0E00               	movlw	0
  1528  0022D8  6F83               	movwf	(SetLed@Mode+1)& (0+255),b
  1529  0022DA  0E01               	movlw	1
  1530  0022DC  6F82               	movwf	SetLed@Mode& (0+255),b
  1531  0022DE  EC5E  F00F         	call	_SetLed	;wreg free
  1532  0022E2  0012               	return		;funcret
  1533  0022E4                     __end_of_SYSTEM_Initialize:
  1534                           	opt callstack 0
  1535                           
  1536 ;; *************** function _spi_master_open *****************
  1537 ;; Defined at:
  1538 ;;		line 40 in file "mcc_generated_files/drivers/spi_master.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  config          1    wreg     enum E122
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  config          1    2[BANK1 ] enum E122
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      unsigned char 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1553 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1556 ;;Total ram usage:        1 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:   13
  1559 ;; This function calls:
  1560 ;;		_MASTER_open
  1561 ;; This function is called by:
  1562 ;;		_SYSTEM_Initialize
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text4
  1567  0029B0                     __ptext4:
  1568                           	opt callstack 0
  1569  0029B0                     _spi_master_open:
  1570                           	opt callstack 16
  1571                           
  1572                           ;incstack = 0
  1573                           ;spi_master_open@config stored from wreg
  1574  0029B0  0101               	movlb	1	; () banked
  1575  0029B2  6F82               	movwf	spi_master_open@config& (0+255),b
  1576                           
  1577                           ;spi_master.c: 41: switch(config){
  1578  0029B4  D005               	goto	l6144
  1579  0029B6                     l6134:
  1580                           
  1581                           ; BSR set to: 1
  1582                           ;spi_master.c: 43: return MASTER_open();
  1583  0029B6  EC15  F016         	call	_MASTER_open	;wreg free
  1584  0029BA  0012               	return	
  1585  0029BC                     l6138:
  1586                           
  1587                           ; BSR set to: 1
  1588                           ;spi_master.c: 45: return 0;
  1589  0029BC  0E00               	movlw	0
  1590  0029BE  0012               	return	
  1591  0029C0                     l6144:
  1592  0029C0  0101               	movlb	1	; () banked
  1593  0029C2  5182               	movf	spi_master_open@config& (0+255),w,b
  1594                           
  1595                           ; Switch size 1, requested type "simple"
  1596                           ; Number of cases is 1, Range of values is 0 to 0
  1597                           ; switch strategies available:
  1598                           ; Name         Instructions Cycles
  1599                           ; simple_byte            4     3 (average)
  1600                           ;	Chosen strategy is simple_byte
  1601  0029C4  0A00               	xorlw	0	; case 0
  1602  0029C6  B4D8               	btfsc	status,2,c
  1603  0029C8  D7F6               	goto	l6134
  1604  0029CA  D7F8               	goto	l6138
  1605  0029CC                     __end_of_spi_master_open:
  1606                           	opt callstack 0
  1607                           
  1608 ;; *************** function _MASTER_open *****************
  1609 ;; Defined at:
  1610 ;;		line 35 in file "mcc_generated_files/drivers/spi_master.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      unsigned char 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:   12
  1631 ;; This function calls:
  1632 ;;		_spi2_open
  1633 ;; This function is called by:
  1634 ;;		_spi_master_open
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text5
  1639  002C2A                     __ptext5:
  1640                           	opt callstack 0
  1641  002C2A                     _MASTER_open:
  1642                           	opt callstack 16
  1643                           
  1644                           ;spi_master.c: 36: return spi2_open(MASTER_CONFIG);
  1645                           
  1646                           ;incstack = 0
  1647  002C2A  0E00               	movlw	0
  1648  002C2C  ECA7  F00E         	call	_spi2_open
  1649  002C30  0012               	return		;funcret
  1650  002C32                     __end_of_MASTER_open:
  1651                           	opt callstack 0
  1652                           
  1653 ;; *************** function _spi2_open *****************
  1654 ;; Defined at:
  1655 ;;		line 46 in file "mcc_generated_files/spi2_driver.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  spiUniqueCon    1    wreg     enum E9954
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  spiUniqueCon    1    1[BANK1 ] enum E9954
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      unsigned char 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1670 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1673 ;;Total ram usage:        2 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:   11
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_MASTER_open
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text6
  1684  001D4E                     __ptext6:
  1685                           	opt callstack 0
  1686  001D4E                     _spi2_open:
  1687                           	opt callstack 16
  1688                           
  1689                           ;incstack = 0
  1690                           ;spi2_open@spiUniqueConfiguration stored from wreg
  1691  001D4E  0101               	movlb	1	; () banked
  1692  001D50  6F81               	movwf	spi2_open@spiUniqueConfiguration& (0+255),b
  1693                           
  1694                           ;spi2_driver.c: 48: if(!SSP2CON1bits.SSPEN)
  1695  001D52  010E               	movlb	14	; () banked
  1696  001D54  BB96               	btfsc	150,5,b	;volatile
  1697  001D56  D05A               	goto	l6056
  1698                           
  1699                           ; BSR set to: 14
  1700                           ;spi2_driver.c: 49: {;spi2_driver.c: 51: SSP2CLKPPS = 24;
  1701  001D58  0E18               	movlw	24
  1702  001D5A  6F8F               	movwf	143,b	;volatile
  1703                           
  1704                           ;spi2_driver.c: 52: SSP2DATPPS = 25;
  1705  001D5C  0E19               	movlw	25
  1706  001D5E  6F90               	movwf	144,b	;volatile
  1707                           
  1708                           ;spi2_driver.c: 53: RD0PPS = 17;
  1709  001D60  0E11               	movlw	17
  1710  001D62  6FFF               	movwf	255,b	;volatile
  1711                           
  1712                           ;spi2_driver.c: 54: RD2PPS = 18;
  1713  001D64  0E12               	movlw	18
  1714  001D66  010F               	movlb	15	; () banked
  1715  001D68  6F01               	movwf	1,b	;volatile
  1716                           
  1717                           ; BSR set to: 15
  1718                           ;spi2_driver.c: 57: SSP2STAT = spi2_configuration[spiUniqueConfiguration].stat;
  1719  001D6A  0101               	movlb	1	; () banked
  1720  001D6C  5181               	movf	spi2_open@spiUniqueConfiguration& (0+255),w,b
  1721  001D6E  0D04               	mullw	4
  1722  001D70  0E01               	movlw	1
  1723  001D72  26F3               	addwf	prodl,f,c
  1724  001D74  0E00               	movlw	0
  1725  001D76  22F4               	addwfc	prodh,f,c
  1726  001D78  0E15               	movlw	low _spi2_configuration
  1727  001D7A  24F3               	addwf	prodl,w,c
  1728  001D7C  6EF6               	movwf	tblptrl,c
  1729  001D7E  0E0F               	movlw	high _spi2_configuration
  1730  001D80  20F4               	addwfc	prodh,w,c
  1731  001D82  6EF7               	movwf	tblptrh,c
  1732  001D84                     	if	1	;There are 3 active tblptr bytes
  1733  001D84  6AF8               	clrf	tblptru,c
  1734  001D86  0E00               	movlw	low (__mediumconst shr (0+16))
  1735  001D88  22F8               	addwfc	tblptru,f,c
  1736  001D8A                     	endif
  1737  001D8A  0008               	tblrd		*
  1738  001D8C  CFF5 FE95          	movff	tablat,3733	;volatile
  1739                           
  1740                           ; BSR set to: 1
  1741                           ;spi2_driver.c: 58: SSP2CON1 = (unsigned char)(spi2_configuration[spiUniqueConfiguration
      +                          ].con1 | 0x20);
  1742  001D90  5181               	movf	spi2_open@spiUniqueConfiguration& (0+255),w,b
  1743  001D92  0D04               	mullw	4
  1744  001D94  0E15               	movlw	low _spi2_configuration
  1745  001D96  24F3               	addwf	prodl,w,c
  1746  001D98  6EF6               	movwf	tblptrl,c
  1747  001D9A  0E0F               	movlw	high _spi2_configuration
  1748  001D9C  20F4               	addwfc	prodh,w,c
  1749  001D9E  6EF7               	movwf	tblptrh,c
  1750  001DA0                     	if	1	;There are 3 active tblptr bytes
  1751  001DA0  6AF8               	clrf	tblptru,c
  1752  001DA2  0E00               	movlw	low (__mediumconst shr (0+16))
  1753  001DA4  22F8               	addwfc	tblptru,f,c
  1754  001DA6                     	endif
  1755  001DA6  0008               	tblrd		*
  1756  001DA8  50F5               	movf	tablat,w,c
  1757  001DAA  0920               	iorlw	32
  1758  001DAC  010E               	movlb	14	; () banked
  1759  001DAE  6F96               	movwf	150,b	;volatile
  1760                           
  1761                           ; BSR set to: 14
  1762                           ;spi2_driver.c: 59: SSP2CON2 = 0x00;
  1763  001DB0  0E00               	movlw	0
  1764  001DB2  6F97               	movwf	151,b	;volatile
  1765                           
  1766                           ; BSR set to: 14
  1767                           ;spi2_driver.c: 60: SSP2ADD = (unsigned char)(spi2_configuration[spiUniqueConfiguration]
      +                          .add);
  1768  001DB4  0101               	movlb	1	; () banked
  1769  001DB6  5181               	movf	spi2_open@spiUniqueConfiguration& (0+255),w,b
  1770  001DB8  0D04               	mullw	4
  1771  001DBA  0E02               	movlw	2
  1772  001DBC  26F3               	addwf	prodl,f,c
  1773  001DBE  0E00               	movlw	0
  1774  001DC0  22F4               	addwfc	prodh,f,c
  1775  001DC2  0E15               	movlw	low _spi2_configuration
  1776  001DC4  24F3               	addwf	prodl,w,c
  1777  001DC6  6EF6               	movwf	tblptrl,c
  1778  001DC8  0E0F               	movlw	high _spi2_configuration
  1779  001DCA  20F4               	addwfc	prodh,w,c
  1780  001DCC  6EF7               	movwf	tblptrh,c
  1781  001DCE                     	if	1	;There are 3 active tblptr bytes
  1782  001DCE  6AF8               	clrf	tblptru,c
  1783  001DD0  0E00               	movlw	low (__mediumconst shr (0+16))
  1784  001DD2  22F8               	addwfc	tblptru,f,c
  1785  001DD4                     	endif
  1786  001DD4  0008               	tblrd		*
  1787  001DD6  CFF5 FE93          	movff	tablat,3731	;volatile
  1788                           
  1789                           ; BSR set to: 1
  1790                           ;spi2_driver.c: 62: TRISDbits.TRISD0 = (unsigned char)(spi2_configuration[spiUniqueConfi
      +                          guration].operation);
  1791  001DDA  5181               	movf	spi2_open@spiUniqueConfiguration& (0+255),w,b
  1792  001DDC  0D04               	mullw	4
  1793  001DDE  0E03               	movlw	3
  1794  001DE0  26F3               	addwf	prodl,f,c
  1795  001DE2  0E00               	movlw	0
  1796  001DE4  22F4               	addwfc	prodh,f,c
  1797  001DE6  0E15               	movlw	low _spi2_configuration
  1798  001DE8  24F3               	addwf	prodl,w,c
  1799  001DEA  6EF6               	movwf	tblptrl,c
  1800  001DEC  0E0F               	movlw	high _spi2_configuration
  1801  001DEE  20F4               	addwfc	prodh,w,c
  1802  001DF0  6EF7               	movwf	tblptrh,c
  1803  001DF2                     	if	1	;There are 3 active tblptr bytes
  1804  001DF2  6AF8               	clrf	tblptru,c
  1805  001DF4  0E00               	movlw	low (__mediumconst shr (0+16))
  1806  001DF6  22F8               	addwfc	tblptru,f,c
  1807  001DF8                     	endif
  1808  001DF8  0008               	tblrd		*
  1809  001DFA  CFF5 F180          	movff	tablat,??_spi2_open
  1810  001DFE  508B               	movf	3979,w,c	;volatile
  1811  001E00  1980               	xorwf	??_spi2_open& (0+255),w,b
  1812  001E02  0BFE               	andlw	-2
  1813  001E04  1980               	xorwf	??_spi2_open& (0+255),w,b
  1814  001E06  6E8B               	movwf	3979,c	;volatile
  1815                           
  1816                           ;spi2_driver.c: 63: return 1;
  1817  001E08  0E01               	movlw	1
  1818  001E0A  0012               	return	
  1819  001E0C                     l6056:
  1820                           
  1821                           ; BSR set to: 14
  1822                           ;spi2_driver.c: 64: };spi2_driver.c: 65: return 0;
  1823  001E0C  0E00               	movlw	0
  1824  001E0E  0012               	return		;funcret
  1825  001E10                     __end_of_spi2_open:
  1826                           	opt callstack 0
  1827                           
  1828 ;; *************** function _TMR4_Initialize *****************
  1829 ;; Defined at:
  1830 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:   12
  1851 ;; This function calls:
  1852 ;;		_TMR4_SetInterruptHandler
  1853 ;; This function is called by:
  1854 ;;		_SYSTEM_Initialize
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text7
  1859  002656                     __ptext7:
  1860                           	opt callstack 0
  1861  002656                     _TMR4_Initialize:
  1862                           	opt callstack 17
  1863                           
  1864                           ;tmr4.c: 69: T4CLKCON = 0x04;
  1865                           
  1866                           ;incstack = 0
  1867  002656  0E04               	movlw	4
  1868  002658  6EB9               	movwf	4025,c	;volatile
  1869                           
  1870                           ;tmr4.c: 72: T4HLT = 0x00;
  1871  00265A  0E00               	movlw	0
  1872  00265C  6EB8               	movwf	4024,c	;volatile
  1873                           
  1874                           ;tmr4.c: 75: T4RST = 0x00;
  1875  00265E  0E00               	movlw	0
  1876  002660  6EBA               	movwf	4026,c	;volatile
  1877                           
  1878                           ;tmr4.c: 78: T4PR = 0x9A;
  1879  002662  0E9A               	movlw	154
  1880  002664  6EB6               	movwf	4022,c	;volatile
  1881                           
  1882                           ;tmr4.c: 81: T4TMR = 0x00;
  1883  002666  0E00               	movlw	0
  1884  002668  6EB5               	movwf	4021,c	;volatile
  1885                           
  1886                           ;tmr4.c: 84: PIR4bits.TMR4IF = 0;
  1887  00266A  010E               	movlb	14	; () banked
  1888  00266C  97CE               	bcf	206,3,b	;volatile
  1889                           
  1890                           ; BSR set to: 14
  1891                           ;tmr4.c: 87: PIE4bits.TMR4IE = 1;
  1892  00266E  87C6               	bsf	198,3,b	;volatile
  1893                           
  1894                           ; BSR set to: 14
  1895                           ;tmr4.c: 90: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
  1896  002670  0E58               	movlw	low _TMR4_DefaultInterruptHandler
  1897  002672  0101               	movlb	1	; () banked
  1898  002674  6F80               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
  1899  002676  0E2C               	movlw	high _TMR4_DefaultInterruptHandler
  1900  002678  6F81               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1901  00267A  EC93  F015         	call	_TMR4_SetInterruptHandler	;wreg free
  1902                           
  1903                           ;tmr4.c: 93: T4CON = 0x99;
  1904  00267E  0E99               	movlw	153
  1905  002680  6EB7               	movwf	4023,c	;volatile
  1906  002682  0012               	return		;funcret
  1907  002684                     __end_of_TMR4_Initialize:
  1908                           	opt callstack 0
  1909                           
  1910 ;; *************** function _TMR4_SetInterruptHandler *****************
  1911 ;; Defined at:
  1912 ;;		line 193 in file "mcc_generated_files/tmr4.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  1915 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1927 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1930 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1931 ;;Total ram usage:        2 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:   11
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_TMR4_Initialize
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text8
  1942  002B26                     __ptext8:
  1943                           	opt callstack 0
  1944  002B26                     _TMR4_SetInterruptHandler:
  1945                           	opt callstack 17
  1946                           
  1947                           ;tmr4.c: 194: TMR4_InterruptHandler = InterruptHandler;
  1948                           
  1949                           ;incstack = 0
  1950  002B26  C180  F0D8         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  1951  002B2A  C181  F0D9         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  1952  002B2E  0012               	return		;funcret
  1953  002B30                     __end_of_TMR4_SetInterruptHandler:
  1954                           	opt callstack 0
  1955                           
  1956 ;; *************** function _TMR2_Initialize *****************
  1957 ;; Defined at:
  1958 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:   12
  1979 ;; This function calls:
  1980 ;;		_TMR2_SetInterruptHandler
  1981 ;; This function is called by:
  1982 ;;		_SYSTEM_Initialize
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text9
  1987  002684                     __ptext9:
  1988                           	opt callstack 0
  1989  002684                     _TMR2_Initialize:
  1990                           	opt callstack 17
  1991                           
  1992                           ;tmr2.c: 69: T2CLKCON = 0x04;
  1993                           
  1994                           ;incstack = 0
  1995  002684  0E04               	movlw	4
  1996  002686  6EBF               	movwf	4031,c	;volatile
  1997                           
  1998                           ;tmr2.c: 72: T2HLT = 0x00;
  1999  002688  0E00               	movlw	0
  2000  00268A  6EBE               	movwf	4030,c	;volatile
  2001                           
  2002                           ;tmr2.c: 75: T2RST = 0x00;
  2003  00268C  0E00               	movlw	0
  2004  00268E  6EC0               	movwf	4032,c	;volatile
  2005                           
  2006                           ;tmr2.c: 78: T2PR = 0x9A;
  2007  002690  0E9A               	movlw	154
  2008  002692  6EBC               	movwf	4028,c	;volatile
  2009                           
  2010                           ;tmr2.c: 81: T2TMR = 0x00;
  2011  002694  0E00               	movlw	0
  2012  002696  6EBB               	movwf	4027,c	;volatile
  2013                           
  2014                           ;tmr2.c: 84: PIR4bits.TMR2IF = 0;
  2015  002698  010E               	movlb	14	; () banked
  2016  00269A  93CE               	bcf	206,1,b	;volatile
  2017                           
  2018                           ; BSR set to: 14
  2019                           ;tmr2.c: 87: PIE4bits.TMR2IE = 1;
  2020  00269C  83C6               	bsf	198,1,b	;volatile
  2021                           
  2022                           ; BSR set to: 14
  2023                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2024  00269E  0E5A               	movlw	low _TMR2_DefaultInterruptHandler
  2025  0026A0  0101               	movlb	1	; () banked
  2026  0026A2  6F80               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  2027  0026A4  0E2C               	movlw	high _TMR2_DefaultInterruptHandler
  2028  0026A6  6F81               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2029  0026A8  EC98  F015         	call	_TMR2_SetInterruptHandler	;wreg free
  2030                           
  2031                           ;tmr2.c: 93: T2CON = 0x90;
  2032  0026AC  0E90               	movlw	144
  2033  0026AE  6EBD               	movwf	4029,c	;volatile
  2034  0026B0  0012               	return		;funcret
  2035  0026B2                     __end_of_TMR2_Initialize:
  2036                           	opt callstack 0
  2037                           
  2038 ;; *************** function _TMR2_SetInterruptHandler *****************
  2039 ;; Defined at:
  2040 ;;		line 186 in file "mcc_generated_files/tmr2.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  2043 ;;		 -> TMR2_Custom_ISR(1), TMR2_DefaultInterruptHandler(1), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2055 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2058 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2059 ;;Total ram usage:        2 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:   11
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_TMR2_Initialize
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text10
  2071  002B30                     __ptext10:
  2072                           	opt callstack 0
  2073  002B30                     _TMR2_SetInterruptHandler:
  2074                           	opt callstack 19
  2075                           
  2076                           ;tmr2.c: 187: TMR2_InterruptHandler = InterruptHandler;
  2077                           
  2078                           ;incstack = 0
  2079  002B30  C180  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  2080  002B34  C181  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  2081  002B38  0012               	return		;funcret
  2082  002B3A                     __end_of_TMR2_SetInterruptHandler:
  2083                           	opt callstack 0
  2084                           
  2085 ;; *************** function _SetLed *****************
  2086 ;; Defined at:
  2087 ;;		line 11 in file "LedBlink.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  ledIndex        2    0[BANK1 ] int 
  2090 ;;  Mode            2    2[BANK1 ] int 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  mode2           2    4[BANK1 ] int 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2102 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2103 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2105 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2106 ;;Total ram usage:        6 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:   11
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_SYSTEM_Initialize
  2113 ;;		_SetLedBlinkMode
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text11
  2118  001EBC                     __ptext11:
  2119                           	opt callstack 0
  2120  001EBC                     _SetLed:
  2121                           	opt callstack 18
  2122                           
  2123                           ;LedBlink.c: 12: int mode2 = 1;
  2124                           
  2125                           ;incstack = 0
  2126  001EBC  0E00               	movlw	0
  2127  001EBE  0101               	movlb	1	; () banked
  2128  001EC0  6F85               	movwf	(SetLed@mode2+1)& (0+255),b
  2129  001EC2  0E01               	movlw	1
  2130  001EC4  6F84               	movwf	SetLed@mode2& (0+255),b
  2131                           
  2132                           ; BSR set to: 1
  2133                           ;LedBlink.c: 13: if(Mode == ON)
  2134  001EC6  0582               	decf	SetLed@Mode& (0+255),w,b
  2135  001EC8  1183               	iorwf	(SetLed@Mode+1)& (0+255),w,b
  2136  001ECA  A4D8               	btfss	status,2,c
  2137  001ECC  D004               	goto	l6328
  2138                           
  2139                           ; BSR set to: 1
  2140                           ;LedBlink.c: 14: mode2 = 0;
  2141  001ECE  0E00               	movlw	0
  2142  001ED0  6F85               	movwf	(SetLed@mode2+1)& (0+255),b
  2143  001ED2  0E00               	movlw	0
  2144  001ED4  6F84               	movwf	SetLed@mode2& (0+255),b
  2145  001ED6                     l6328:
  2146                           
  2147                           ; BSR set to: 1
  2148                           ;LedBlink.c: 16: if (ledIndex == R) {
  2149  001ED6  5180               	movf	SetLed@ledIndex& (0+255),w,b
  2150  001ED8  1181               	iorwf	(SetLed@ledIndex+1)& (0+255),w,b
  2151  001EDA  A4D8               	btfss	status,2,c
  2152  001EDC  D006               	goto	l6332
  2153                           
  2154                           ; BSR set to: 1
  2155                           ;LedBlink.c: 17: LATDbits.LATD5 = mode2;
  2156  001EDE  B184               	btfsc	SetLed@mode2& (0+255),0,b
  2157  001EE0  D002               	bra	u5475
  2158  001EE2  9A86               	bcf	3974,5,c	;volatile
  2159  001EE4  D001               	bra	u5476
  2160  001EE6                     u5475:
  2161  001EE6  8A86               	bsf	3974,5,c	;volatile
  2162  001EE8                     u5476:
  2163                           
  2164                           ;LedBlink.c: 18: } else if (ledIndex == G) {
  2165  001EE8  0012               	return	
  2166  001EEA                     l6332:
  2167                           
  2168                           ; BSR set to: 1
  2169  001EEA  0580               	decf	SetLed@ledIndex& (0+255),w,b
  2170  001EEC  1181               	iorwf	(SetLed@ledIndex+1)& (0+255),w,b
  2171  001EEE  A4D8               	btfss	status,2,c
  2172  001EF0  D006               	goto	l6336
  2173                           
  2174                           ; BSR set to: 1
  2175                           ;LedBlink.c: 19: LATDbits.LATD6 = mode2;
  2176  001EF2  B184               	btfsc	SetLed@mode2& (0+255),0,b
  2177  001EF4  D002               	bra	u5495
  2178  001EF6  9C86               	bcf	3974,6,c	;volatile
  2179  001EF8  D001               	bra	u5496
  2180  001EFA                     u5495:
  2181  001EFA  8C86               	bsf	3974,6,c	;volatile
  2182  001EFC                     u5496:
  2183                           
  2184                           ;LedBlink.c: 20: } else if (ledIndex == B) {
  2185  001EFC  0012               	return	
  2186  001EFE                     l6336:
  2187                           
  2188                           ; BSR set to: 1
  2189  001EFE  0E02               	movlw	2
  2190  001F00  1980               	xorwf	SetLed@ledIndex& (0+255),w,b
  2191  001F02  1181               	iorwf	(SetLed@ledIndex+1)& (0+255),w,b
  2192  001F04  A4D8               	btfss	status,2,c
  2193  001F06  D006               	goto	l6340
  2194                           
  2195                           ; BSR set to: 1
  2196                           ;LedBlink.c: 21: LATDbits.LATD7 = mode2;
  2197  001F08  B184               	btfsc	SetLed@mode2& (0+255),0,b
  2198  001F0A  D002               	bra	u5515
  2199  001F0C  9E86               	bcf	3974,7,c	;volatile
  2200  001F0E  D001               	bra	u5516
  2201  001F10                     u5515:
  2202  001F10  8E86               	bsf	3974,7,c	;volatile
  2203  001F12                     u5516:
  2204                           
  2205                           ;LedBlink.c: 22: } else if (ledIndex == RGB_R) {
  2206  001F12  0012               	return	
  2207  001F14                     l6340:
  2208                           
  2209                           ; BSR set to: 1
  2210  001F14  0E03               	movlw	3
  2211  001F16  1980               	xorwf	SetLed@ledIndex& (0+255),w,b
  2212  001F18  1181               	iorwf	(SetLed@ledIndex+1)& (0+255),w,b
  2213  001F1A  A4D8               	btfss	status,2,c
  2214  001F1C  D006               	goto	l6344
  2215                           
  2216                           ; BSR set to: 1
  2217                           ;LedBlink.c: 23: LATEbits.LATE2 = mode2;
  2218  001F1E  B184               	btfsc	SetLed@mode2& (0+255),0,b
  2219  001F20  D002               	bra	u5535
  2220  001F22  9487               	bcf	3975,2,c	;volatile
  2221  001F24  D001               	bra	u5536
  2222  001F26                     u5535:
  2223  001F26  8487               	bsf	3975,2,c	;volatile
  2224  001F28                     u5536:
  2225                           
  2226                           ;LedBlink.c: 24: } else if (ledIndex == RGB_G) {
  2227  001F28  0012               	return	
  2228  001F2A                     l6344:
  2229                           
  2230                           ; BSR set to: 1
  2231  001F2A  0E04               	movlw	4
  2232  001F2C  1980               	xorwf	SetLed@ledIndex& (0+255),w,b
  2233  001F2E  1181               	iorwf	(SetLed@ledIndex+1)& (0+255),w,b
  2234  001F30  A4D8               	btfss	status,2,c
  2235  001F32  D006               	goto	l6348
  2236                           
  2237                           ; BSR set to: 1
  2238                           ;LedBlink.c: 25: LATEbits.LATE1 = mode2;
  2239  001F34  B184               	btfsc	SetLed@mode2& (0+255),0,b
  2240  001F36  D002               	bra	u5555
  2241  001F38  9287               	bcf	3975,1,c	;volatile
  2242  001F3A  D001               	bra	u5556
  2243  001F3C                     u5555:
  2244  001F3C  8287               	bsf	3975,1,c	;volatile
  2245  001F3E                     u5556:
  2246                           
  2247                           ;LedBlink.c: 26: } else if (ledIndex == RGB_B) {
  2248  001F3E  0012               	return	
  2249  001F40                     l6348:
  2250                           
  2251                           ; BSR set to: 1
  2252  001F40  0E05               	movlw	5
  2253  001F42  1980               	xorwf	SetLed@ledIndex& (0+255),w,b
  2254  001F44  1181               	iorwf	(SetLed@ledIndex+1)& (0+255),w,b
  2255  001F46  A4D8               	btfss	status,2,c
  2256  001F48  0012               	return	
  2257                           
  2258                           ; BSR set to: 1
  2259                           ;LedBlink.c: 27: LATEbits.LATE0 = mode2;
  2260  001F4A  B184               	btfsc	SetLed@mode2& (0+255),0,b
  2261  001F4C  D002               	bra	u5575
  2262  001F4E  9087               	bcf	3975,0,c	;volatile
  2263  001F50  D001               	bra	u5576
  2264  001F52                     u5575:
  2265  001F52  8087               	bsf	3975,0,c	;volatile
  2266  001F54                     u5576:
  2267  001F54  0012               	return	
  2268  001F56                     __end_of_SetLed:
  2269                           	opt callstack 0
  2270                           
  2271 ;; *************** function _PMD_Initialize *****************
  2272 ;; Defined at:
  2273 ;;		line 84 in file "mcc_generated_files/mcc.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;Total ram usage:        0 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:   11
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_SYSTEM_Initialize
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text12
  2302  0029CC                     __ptext12:
  2303                           	opt callstack 0
  2304  0029CC                     _PMD_Initialize:
  2305                           	opt callstack 18
  2306                           
  2307                           ;mcc.c: 87: PMD0 = 0x00;
  2308                           
  2309                           ;incstack = 0
  2310  0029CC  0E00               	movlw	0
  2311  0029CE  010E               	movlb	14	; () banked
  2312  0029D0  6FE1               	movwf	225,b	;volatile
  2313                           
  2314                           ;mcc.c: 89: PMD1 = 0x00;
  2315  0029D2  0E00               	movlw	0
  2316  0029D4  6FE2               	movwf	226,b	;volatile
  2317                           
  2318                           ;mcc.c: 91: PMD2 = 0x00;
  2319  0029D6  0E00               	movlw	0
  2320  0029D8  6FE3               	movwf	227,b	;volatile
  2321                           
  2322                           ;mcc.c: 93: PMD3 = 0x00;
  2323  0029DA  0E00               	movlw	0
  2324  0029DC  6FE4               	movwf	228,b	;volatile
  2325                           
  2326                           ;mcc.c: 95: PMD4 = 0x00;
  2327  0029DE  0E00               	movlw	0
  2328  0029E0  6FE5               	movwf	229,b	;volatile
  2329                           
  2330                           ;mcc.c: 97: PMD5 = 0x00;
  2331  0029E2  0E00               	movlw	0
  2332  0029E4  6FE6               	movwf	230,b	;volatile
  2333                           
  2334                           ; BSR set to: 14
  2335  0029E6  0012               	return		;funcret
  2336  0029E8                     __end_of_PMD_Initialize:
  2337                           	opt callstack 0
  2338                           
  2339 ;; *************** function _PIN_MANAGER_Initialize *****************
  2340 ;; Defined at:
  2341 ;;		line 66 in file "mcc_generated_files/pin_manager.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:   12
  2362 ;; This function calls:
  2363 ;;		_IOCAF0_SetInterruptHandler
  2364 ;;		_IOCAF1_SetInterruptHandler
  2365 ;;		_IOCAF3_SetInterruptHandler
  2366 ;;		_IOCAF4_SetInterruptHandler
  2367 ;;		_IOCBF5_SetInterruptHandler
  2368 ;;		_IOCCF3_SetInterruptHandler
  2369 ;;		_IOCCF4_SetInterruptHandler
  2370 ;;		_IOCCF5_SetInterruptHandler
  2371 ;;		_IOCCF6_SetInterruptHandler
  2372 ;;		_IOCCF7_SetInterruptHandler
  2373 ;; This function is called by:
  2374 ;;		_SYSTEM_Initialize
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text13
  2379  0019F6                     __ptext13:
  2380                           	opt callstack 0
  2381  0019F6                     _PIN_MANAGER_Initialize:
  2382                           	opt callstack 17
  2383                           
  2384                           ;pin_manager.c: 71: LATE = 0x07;
  2385                           
  2386                           ; BSR set to: 14
  2387                           ;incstack = 0
  2388  0019F6  0E07               	movlw	7
  2389  0019F8  6E87               	movwf	3975,c	;volatile
  2390                           
  2391                           ;pin_manager.c: 72: LATD = 0xF8;
  2392  0019FA  0EF8               	movlw	248
  2393  0019FC  6E86               	movwf	3974,c	;volatile
  2394                           
  2395                           ;pin_manager.c: 73: LATA = 0x00;
  2396  0019FE  0E00               	movlw	0
  2397  001A00  6E83               	movwf	3971,c	;volatile
  2398                           
  2399                           ;pin_manager.c: 74: LATB = 0x00;
  2400  001A02  0E00               	movlw	0
  2401  001A04  6E84               	movwf	3972,c	;volatile
  2402                           
  2403                           ;pin_manager.c: 75: LATC = 0x02;
  2404  001A06  0E02               	movlw	2
  2405  001A08  6E85               	movwf	3973,c	;volatile
  2406                           
  2407                           ;pin_manager.c: 80: TRISE = 0x00;
  2408  001A0A  0E00               	movlw	0
  2409  001A0C  6E8C               	movwf	3980,c	;volatile
  2410                           
  2411                           ;pin_manager.c: 81: TRISA = 0xFB;
  2412  001A0E  0EFB               	movlw	251
  2413  001A10  6E88               	movwf	3976,c	;volatile
  2414                           
  2415                           ;pin_manager.c: 82: TRISB = 0xED;
  2416  001A12  0EED               	movlw	237
  2417  001A14  6E89               	movwf	3977,c	;volatile
  2418                           
  2419                           ;pin_manager.c: 83: TRISC = 0xF8;
  2420  001A16  0EF8               	movlw	248
  2421  001A18  6E8A               	movwf	3978,c	;volatile
  2422                           
  2423                           ;pin_manager.c: 84: TRISD = 0x02;
  2424  001A1A  0E02               	movlw	2
  2425  001A1C  6E8B               	movwf	3979,c	;volatile
  2426                           
  2427                           ;pin_manager.c: 89: ANSELD = 0x00;
  2428  001A1E  0E00               	movlw	0
  2429  001A20  010F               	movlb	15	; () banked
  2430  001A22  6F26               	movwf	38,b	;volatile
  2431                           
  2432                           ;pin_manager.c: 90: ANSELC = 0x00;
  2433  001A24  0E00               	movlw	0
  2434  001A26  6F21               	movwf	33,b	;volatile
  2435                           
  2436                           ;pin_manager.c: 91: ANSELB = 0x00;
  2437  001A28  0E00               	movlw	0
  2438  001A2A  6F19               	movwf	25,b	;volatile
  2439                           
  2440                           ;pin_manager.c: 92: ANSELE = 0x00;
  2441  001A2C  0E00               	movlw	0
  2442  001A2E  6F2E               	movwf	46,b	;volatile
  2443                           
  2444                           ;pin_manager.c: 93: ANSELA = 0x00;
  2445  001A30  0E00               	movlw	0
  2446  001A32  6F11               	movwf	17,b	;volatile
  2447                           
  2448                           ;pin_manager.c: 98: WPUD = 0x00;
  2449  001A34  0E00               	movlw	0
  2450  001A36  6F25               	movwf	37,b	;volatile
  2451                           
  2452                           ;pin_manager.c: 99: WPUE = 0x00;
  2453  001A38  0E00               	movlw	0
  2454  001A3A  6F2D               	movwf	45,b	;volatile
  2455                           
  2456                           ;pin_manager.c: 100: WPUB = 0x00;
  2457  001A3C  0E00               	movlw	0
  2458  001A3E  6F18               	movwf	24,b	;volatile
  2459                           
  2460                           ;pin_manager.c: 101: WPUA = 0x00;
  2461  001A40  0E00               	movlw	0
  2462  001A42  6F10               	movwf	16,b	;volatile
  2463                           
  2464                           ;pin_manager.c: 102: WPUC = 0x00;
  2465  001A44  0E00               	movlw	0
  2466  001A46  6F20               	movwf	32,b	;volatile
  2467                           
  2468                           ;pin_manager.c: 107: ODCONE = 0x07;
  2469  001A48  0E07               	movlw	7
  2470  001A4A  6F2C               	movwf	44,b	;volatile
  2471                           
  2472                           ;pin_manager.c: 108: ODCONA = 0x00;
  2473  001A4C  0E00               	movlw	0
  2474  001A4E  6F0F               	movwf	15,b	;volatile
  2475                           
  2476                           ;pin_manager.c: 109: ODCONB = 0x00;
  2477  001A50  0E00               	movlw	0
  2478  001A52  6F17               	movwf	23,b	;volatile
  2479                           
  2480                           ;pin_manager.c: 110: ODCONC = 0x01;
  2481  001A54  0E01               	movlw	1
  2482  001A56  6F1F               	movwf	31,b	;volatile
  2483                           
  2484                           ;pin_manager.c: 111: ODCOND = 0xF8;
  2485  001A58  0EF8               	movlw	248
  2486  001A5A  6F24               	movwf	36,b	;volatile
  2487                           
  2488                           ; BSR set to: 15
  2489                           ;pin_manager.c: 116: SLRCONA = 0xFF;
  2490  001A5C  690E               	setf	14,b	;volatile
  2491                           
  2492                           ; BSR set to: 15
  2493                           ;pin_manager.c: 117: SLRCONB = 0xFF;
  2494  001A5E  6916               	setf	22,b	;volatile
  2495                           
  2496                           ; BSR set to: 15
  2497                           ;pin_manager.c: 118: SLRCONC = 0xFF;
  2498  001A60  691E               	setf	30,b	;volatile
  2499                           
  2500                           ; BSR set to: 15
  2501                           ;pin_manager.c: 119: SLRCOND = 0xFF;
  2502  001A62  6923               	setf	35,b	;volatile
  2503                           
  2504                           ;pin_manager.c: 120: SLRCONE = 0x07;
  2505  001A64  0E07               	movlw	7
  2506  001A66  6F2B               	movwf	43,b	;volatile
  2507                           
  2508                           ; BSR set to: 15
  2509                           ;pin_manager.c: 127: IOCAFbits.IOCAF0 = 0;
  2510  001A68  910A               	bcf	10,0,b	;volatile
  2511                           
  2512                           ; BSR set to: 15
  2513                           ;pin_manager.c: 129: IOCAFbits.IOCAF1 = 0;
  2514  001A6A  930A               	bcf	10,1,b	;volatile
  2515                           
  2516                           ; BSR set to: 15
  2517                           ;pin_manager.c: 131: IOCAFbits.IOCAF3 = 0;
  2518  001A6C  970A               	bcf	10,3,b	;volatile
  2519                           
  2520                           ; BSR set to: 15
  2521                           ;pin_manager.c: 133: IOCAFbits.IOCAF4 = 0;
  2522  001A6E  990A               	bcf	10,4,b	;volatile
  2523                           
  2524                           ; BSR set to: 15
  2525                           ;pin_manager.c: 135: IOCANbits.IOCAN0 = 1;
  2526  001A70  810B               	bsf	11,0,b	;volatile
  2527                           
  2528                           ; BSR set to: 15
  2529                           ;pin_manager.c: 137: IOCANbits.IOCAN1 = 1;
  2530  001A72  830B               	bsf	11,1,b	;volatile
  2531                           
  2532                           ; BSR set to: 15
  2533                           ;pin_manager.c: 139: IOCANbits.IOCAN3 = 1;
  2534  001A74  870B               	bsf	11,3,b	;volatile
  2535                           
  2536                           ; BSR set to: 15
  2537                           ;pin_manager.c: 141: IOCANbits.IOCAN4 = 1;
  2538  001A76  890B               	bsf	11,4,b	;volatile
  2539                           
  2540                           ; BSR set to: 15
  2541                           ;pin_manager.c: 143: IOCAPbits.IOCAP0 = 1;
  2542  001A78  810C               	bsf	12,0,b	;volatile
  2543                           
  2544                           ; BSR set to: 15
  2545                           ;pin_manager.c: 145: IOCAPbits.IOCAP1 = 1;
  2546  001A7A  830C               	bsf	12,1,b	;volatile
  2547                           
  2548                           ; BSR set to: 15
  2549                           ;pin_manager.c: 147: IOCAPbits.IOCAP3 = 1;
  2550  001A7C  870C               	bsf	12,3,b	;volatile
  2551                           
  2552                           ; BSR set to: 15
  2553                           ;pin_manager.c: 149: IOCAPbits.IOCAP4 = 1;
  2554  001A7E  890C               	bsf	12,4,b	;volatile
  2555                           
  2556                           ; BSR set to: 15
  2557                           ;pin_manager.c: 151: IOCBFbits.IOCBF5 = 0;
  2558  001A80  9B12               	bcf	18,5,b	;volatile
  2559                           
  2560                           ; BSR set to: 15
  2561                           ;pin_manager.c: 153: IOCBNbits.IOCBN5 = 1;
  2562  001A82  8B13               	bsf	19,5,b	;volatile
  2563                           
  2564                           ; BSR set to: 15
  2565                           ;pin_manager.c: 155: IOCBPbits.IOCBP5 = 1;
  2566  001A84  8B14               	bsf	20,5,b	;volatile
  2567                           
  2568                           ; BSR set to: 15
  2569                           ;pin_manager.c: 157: IOCCFbits.IOCCF3 = 0;
  2570  001A86  971A               	bcf	26,3,b	;volatile
  2571                           
  2572                           ; BSR set to: 15
  2573                           ;pin_manager.c: 159: IOCCFbits.IOCCF4 = 0;
  2574  001A88  991A               	bcf	26,4,b	;volatile
  2575                           
  2576                           ; BSR set to: 15
  2577                           ;pin_manager.c: 161: IOCCFbits.IOCCF5 = 0;
  2578  001A8A  9B1A               	bcf	26,5,b	;volatile
  2579                           
  2580                           ; BSR set to: 15
  2581                           ;pin_manager.c: 163: IOCCFbits.IOCCF6 = 0;
  2582  001A8C  9D1A               	bcf	26,6,b	;volatile
  2583                           
  2584                           ; BSR set to: 15
  2585                           ;pin_manager.c: 165: IOCCFbits.IOCCF7 = 0;
  2586  001A8E  9F1A               	bcf	26,7,b	;volatile
  2587                           
  2588                           ; BSR set to: 15
  2589                           ;pin_manager.c: 167: IOCCNbits.IOCCN3 = 1;
  2590  001A90  871B               	bsf	27,3,b	;volatile
  2591                           
  2592                           ; BSR set to: 15
  2593                           ;pin_manager.c: 169: IOCCNbits.IOCCN4 = 1;
  2594  001A92  891B               	bsf	27,4,b	;volatile
  2595                           
  2596                           ; BSR set to: 15
  2597                           ;pin_manager.c: 171: IOCCNbits.IOCCN5 = 1;
  2598  001A94  8B1B               	bsf	27,5,b	;volatile
  2599                           
  2600                           ; BSR set to: 15
  2601                           ;pin_manager.c: 173: IOCCNbits.IOCCN6 = 1;
  2602  001A96  8D1B               	bsf	27,6,b	;volatile
  2603                           
  2604                           ; BSR set to: 15
  2605                           ;pin_manager.c: 175: IOCCNbits.IOCCN7 = 1;
  2606  001A98  8F1B               	bsf	27,7,b	;volatile
  2607                           
  2608                           ; BSR set to: 15
  2609                           ;pin_manager.c: 177: IOCCPbits.IOCCP3 = 1;
  2610  001A9A  871C               	bsf	28,3,b	;volatile
  2611                           
  2612                           ; BSR set to: 15
  2613                           ;pin_manager.c: 179: IOCCPbits.IOCCP4 = 1;
  2614  001A9C  891C               	bsf	28,4,b	;volatile
  2615                           
  2616                           ; BSR set to: 15
  2617                           ;pin_manager.c: 181: IOCCPbits.IOCCP5 = 1;
  2618  001A9E  8B1C               	bsf	28,5,b	;volatile
  2619                           
  2620                           ; BSR set to: 15
  2621                           ;pin_manager.c: 183: IOCCPbits.IOCCP6 = 1;
  2622  001AA0  8D1C               	bsf	28,6,b	;volatile
  2623                           
  2624                           ; BSR set to: 15
  2625                           ;pin_manager.c: 185: IOCCPbits.IOCCP7 = 1;
  2626  001AA2  8F1C               	bsf	28,7,b	;volatile
  2627                           
  2628                           ; BSR set to: 15
  2629                           ;pin_manager.c: 190: IOCAF0_SetInterruptHandler(IOCAF0_DefaultInterruptHandler);
  2630  001AA4  0E6E               	movlw	low _IOCAF0_DefaultInterruptHandler
  2631  001AA6  0101               	movlb	1	; () banked
  2632  001AA8  6F80               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler& (0+255),b
  2633  001AAA  0E2C               	movlw	high _IOCAF0_DefaultInterruptHandler
  2634  001AAC  6F81               	movwf	(IOCAF0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2635  001AAE  ECCA  F015         	call	_IOCAF0_SetInterruptHandler	;wreg free
  2636                           
  2637                           ;pin_manager.c: 191: IOCAF1_SetInterruptHandler(IOCAF1_DefaultInterruptHandler);
  2638  001AB2  0E6C               	movlw	low _IOCAF1_DefaultInterruptHandler
  2639  001AB4  0101               	movlb	1	; () banked
  2640  001AB6  6F80               	movwf	IOCAF1_SetInterruptHandler@InterruptHandler& (0+255),b
  2641  001AB8  0E2C               	movlw	high _IOCAF1_DefaultInterruptHandler
  2642  001ABA  6F81               	movwf	(IOCAF1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2643  001ABC  ECC5  F015         	call	_IOCAF1_SetInterruptHandler	;wreg free
  2644                           
  2645                           ;pin_manager.c: 192: IOCAF3_SetInterruptHandler(IOCAF3_DefaultInterruptHandler);
  2646  001AC0  0E6A               	movlw	low _IOCAF3_DefaultInterruptHandler
  2647  001AC2  0101               	movlb	1	; () banked
  2648  001AC4  6F80               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler& (0+255),b
  2649  001AC6  0E2C               	movlw	high _IOCAF3_DefaultInterruptHandler
  2650  001AC8  6F81               	movwf	(IOCAF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2651  001ACA  ECC0  F015         	call	_IOCAF3_SetInterruptHandler	;wreg free
  2652                           
  2653                           ;pin_manager.c: 193: IOCAF4_SetInterruptHandler(IOCAF4_DefaultInterruptHandler);
  2654  001ACE  0E68               	movlw	low _IOCAF4_DefaultInterruptHandler
  2655  001AD0  0101               	movlb	1	; () banked
  2656  001AD2  6F80               	movwf	IOCAF4_SetInterruptHandler@InterruptHandler& (0+255),b
  2657  001AD4  0E2C               	movlw	high _IOCAF4_DefaultInterruptHandler
  2658  001AD6  6F81               	movwf	(IOCAF4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2659  001AD8  ECBB  F015         	call	_IOCAF4_SetInterruptHandler	;wreg free
  2660                           
  2661                           ;pin_manager.c: 194: IOCBF5_SetInterruptHandler(IOCBF5_DefaultInterruptHandler);
  2662  001ADC  0E66               	movlw	low _IOCBF5_DefaultInterruptHandler
  2663  001ADE  0101               	movlb	1	; () banked
  2664  001AE0  6F80               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler& (0+255),b
  2665  001AE2  0E2C               	movlw	high _IOCBF5_DefaultInterruptHandler
  2666  001AE4  6F81               	movwf	(IOCBF5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2667  001AE6  ECB6  F015         	call	_IOCBF5_SetInterruptHandler	;wreg free
  2668                           
  2669                           ;pin_manager.c: 195: IOCCF3_SetInterruptHandler(IOCCF3_DefaultInterruptHandler);
  2670  001AEA  0E64               	movlw	low _IOCCF3_DefaultInterruptHandler
  2671  001AEC  0101               	movlb	1	; () banked
  2672  001AEE  6F80               	movwf	IOCCF3_SetInterruptHandler@InterruptHandler& (0+255),b
  2673  001AF0  0E2C               	movlw	high _IOCCF3_DefaultInterruptHandler
  2674  001AF2  6F81               	movwf	(IOCCF3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2675  001AF4  ECB1  F015         	call	_IOCCF3_SetInterruptHandler	;wreg free
  2676                           
  2677                           ;pin_manager.c: 196: IOCCF4_SetInterruptHandler(IOCCF4_DefaultInterruptHandler);
  2678  001AF8  0E62               	movlw	low _IOCCF4_DefaultInterruptHandler
  2679  001AFA  0101               	movlb	1	; () banked
  2680  001AFC  6F80               	movwf	IOCCF4_SetInterruptHandler@InterruptHandler& (0+255),b
  2681  001AFE  0E2C               	movlw	high _IOCCF4_DefaultInterruptHandler
  2682  001B00  6F81               	movwf	(IOCCF4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2683  001B02  ECAC  F015         	call	_IOCCF4_SetInterruptHandler	;wreg free
  2684                           
  2685                           ;pin_manager.c: 197: IOCCF5_SetInterruptHandler(IOCCF5_DefaultInterruptHandler);
  2686  001B06  0E60               	movlw	low _IOCCF5_DefaultInterruptHandler
  2687  001B08  0101               	movlb	1	; () banked
  2688  001B0A  6F80               	movwf	IOCCF5_SetInterruptHandler@InterruptHandler& (0+255),b
  2689  001B0C  0E2C               	movlw	high _IOCCF5_DefaultInterruptHandler
  2690  001B0E  6F81               	movwf	(IOCCF5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2691  001B10  ECA7  F015         	call	_IOCCF5_SetInterruptHandler	;wreg free
  2692                           
  2693                           ;pin_manager.c: 198: IOCCF6_SetInterruptHandler(IOCCF6_DefaultInterruptHandler);
  2694  001B14  0E5E               	movlw	low _IOCCF6_DefaultInterruptHandler
  2695  001B16  0101               	movlb	1	; () banked
  2696  001B18  6F80               	movwf	IOCCF6_SetInterruptHandler@InterruptHandler& (0+255),b
  2697  001B1A  0E2C               	movlw	high _IOCCF6_DefaultInterruptHandler
  2698  001B1C  6F81               	movwf	(IOCCF6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2699  001B1E  ECA2  F015         	call	_IOCCF6_SetInterruptHandler	;wreg free
  2700                           
  2701                           ;pin_manager.c: 199: IOCCF7_SetInterruptHandler(IOCCF7_DefaultInterruptHandler);
  2702  001B22  0E5C               	movlw	low _IOCCF7_DefaultInterruptHandler
  2703  001B24  0101               	movlb	1	; () banked
  2704  001B26  6F80               	movwf	IOCCF7_SetInterruptHandler@InterruptHandler& (0+255),b
  2705  001B28  0E2C               	movlw	high _IOCCF7_DefaultInterruptHandler
  2706  001B2A  6F81               	movwf	(IOCCF7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2707  001B2C  EC9D  F015         	call	_IOCCF7_SetInterruptHandler	;wreg free
  2708                           
  2709                           ;pin_manager.c: 202: PIE0bits.IOCIE = 1;
  2710  001B30  010E               	movlb	14	; () banked
  2711  001B32  89C2               	bsf	194,4,b	;volatile
  2712                           
  2713                           ;pin_manager.c: 205: RD2PPS = 0x12;
  2714  001B34  0E12               	movlw	18
  2715  001B36  010F               	movlb	15	; () banked
  2716  001B38  6F01               	movwf	1,b	;volatile
  2717                           
  2718                           ;pin_manager.c: 206: RX1PPS = 0x08;
  2719  001B3A  0E08               	movlw	8
  2720  001B3C  010E               	movlb	14	; () banked
  2721  001B3E  6FB5               	movwf	181,b	;volatile
  2722                           
  2723                           ;pin_manager.c: 207: SSP2DATPPS = 0x19;
  2724  001B40  0E19               	movlw	25
  2725  001B42  6F90               	movwf	144,b	;volatile
  2726                           
  2727                           ;pin_manager.c: 208: RB1PPS = 0x09;
  2728  001B44  0E09               	movlw	9
  2729  001B46  6FF0               	movwf	240,b	;volatile
  2730                           
  2731                           ;pin_manager.c: 209: INT0PPS = 0x05;
  2732  001B48  0E05               	movlw	5
  2733  001B4A  6FA1               	movwf	161,b	;volatile
  2734                           
  2735                           ;pin_manager.c: 210: RB4PPS = 0x14;
  2736  001B4C  0E14               	movlw	20
  2737  001B4E  6FF3               	movwf	243,b	;volatile
  2738                           
  2739                           ;pin_manager.c: 211: RD0PPS = 0x11;
  2740  001B50  0E11               	movlw	17
  2741  001B52  6FFF               	movwf	255,b	;volatile
  2742                           
  2743                           ;pin_manager.c: 212: INT2PPS = 0x07;
  2744  001B54  0E07               	movlw	7
  2745  001B56  6FA3               	movwf	163,b	;volatile
  2746                           
  2747                           ;pin_manager.c: 213: INT1PPS = 0x06;
  2748  001B58  0E06               	movlw	6
  2749  001B5A  6FA2               	movwf	162,b	;volatile
  2750                           
  2751                           ;pin_manager.c: 214: SSP2CLKPPS = 0x18;
  2752  001B5C  0E18               	movlw	24
  2753  001B5E  6F8F               	movwf	143,b	;volatile
  2754                           
  2755                           ; BSR set to: 14
  2756  001B60  0012               	return		;funcret
  2757  001B62                     __end_of_PIN_MANAGER_Initialize:
  2758                           	opt callstack 0
  2759                           
  2760 ;; *************** function _IOCCF7_SetInterruptHandler *****************
  2761 ;; Defined at:
  2762 ;;		line 559 in file "mcc_generated_files/pin_manager.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  2765 ;;		 -> IOCCF7_DefaultInterruptHandler(1), 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2777 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2780 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2781 ;;Total ram usage:        2 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:   11
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_PIN_MANAGER_Initialize
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text14
  2792  002B3A                     __ptext14:
  2793                           	opt callstack 0
  2794  002B3A                     _IOCCF7_SetInterruptHandler:
  2795                           	opt callstack 17
  2796                           
  2797                           ;pin_manager.c: 560: IOCCF7_InterruptHandler = InterruptHandler;
  2798                           
  2799                           ; BSR set to: 14
  2800                           ;incstack = 0
  2801  002B3A  C180  F0E0         	movff	IOCCF7_SetInterruptHandler@InterruptHandler,_IOCCF7_InterruptHandler
  2802  002B3E  C181  F0E1         	movff	IOCCF7_SetInterruptHandler@InterruptHandler+1,_IOCCF7_InterruptHandler+1
  2803  002B42  0012               	return		;funcret
  2804  002B44                     __end_of_IOCCF7_SetInterruptHandler:
  2805                           	opt callstack 0
  2806                           
  2807 ;; *************** function _IOCCF6_SetInterruptHandler *****************
  2808 ;; Defined at:
  2809 ;;		line 529 in file "mcc_generated_files/pin_manager.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  2812 ;;		 -> IOCCF6_DefaultInterruptHandler(1), 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2824 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2827 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;Total ram usage:        2 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:   11
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_PIN_MANAGER_Initialize
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text15
  2839  002B44                     __ptext15:
  2840                           	opt callstack 0
  2841  002B44                     _IOCCF6_SetInterruptHandler:
  2842                           	opt callstack 17
  2843                           
  2844                           ;pin_manager.c: 530: IOCCF6_InterruptHandler = InterruptHandler;
  2845                           
  2846                           ;incstack = 0
  2847  002B44  C180  F0E2         	movff	IOCCF6_SetInterruptHandler@InterruptHandler,_IOCCF6_InterruptHandler
  2848  002B48  C181  F0E3         	movff	IOCCF6_SetInterruptHandler@InterruptHandler+1,_IOCCF6_InterruptHandler+1
  2849  002B4C  0012               	return		;funcret
  2850  002B4E                     __end_of_IOCCF6_SetInterruptHandler:
  2851                           	opt callstack 0
  2852                           
  2853 ;; *************** function _IOCCF5_SetInterruptHandler *****************
  2854 ;; Defined at:
  2855 ;;		line 499 in file "mcc_generated_files/pin_manager.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  2858 ;;		 -> IOCCF5_DefaultInterruptHandler(1), 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2870 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2873 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2874 ;;Total ram usage:        2 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:   11
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_PIN_MANAGER_Initialize
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text16
  2885  002B4E                     __ptext16:
  2886                           	opt callstack 0
  2887  002B4E                     _IOCCF5_SetInterruptHandler:
  2888                           	opt callstack 17
  2889                           
  2890                           ;pin_manager.c: 500: IOCCF5_InterruptHandler = InterruptHandler;
  2891                           
  2892                           ;incstack = 0
  2893  002B4E  C180  F0E4         	movff	IOCCF5_SetInterruptHandler@InterruptHandler,_IOCCF5_InterruptHandler
  2894  002B52  C181  F0E5         	movff	IOCCF5_SetInterruptHandler@InterruptHandler+1,_IOCCF5_InterruptHandler+1
  2895  002B56  0012               	return		;funcret
  2896  002B58                     __end_of_IOCCF5_SetInterruptHandler:
  2897                           	opt callstack 0
  2898                           
  2899 ;; *************** function _IOCCF4_SetInterruptHandler *****************
  2900 ;; Defined at:
  2901 ;;		line 469 in file "mcc_generated_files/pin_manager.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  2904 ;;		 -> IOCCF4_DefaultInterruptHandler(1), 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2916 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2919 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2920 ;;Total ram usage:        2 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:   11
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_PIN_MANAGER_Initialize
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text17
  2931  002B58                     __ptext17:
  2932                           	opt callstack 0
  2933  002B58                     _IOCCF4_SetInterruptHandler:
  2934                           	opt callstack 17
  2935                           
  2936                           ;pin_manager.c: 470: IOCCF4_InterruptHandler = InterruptHandler;
  2937                           
  2938                           ;incstack = 0
  2939  002B58  C180  F0E6         	movff	IOCCF4_SetInterruptHandler@InterruptHandler,_IOCCF4_InterruptHandler
  2940  002B5C  C181  F0E7         	movff	IOCCF4_SetInterruptHandler@InterruptHandler+1,_IOCCF4_InterruptHandler+1
  2941  002B60  0012               	return		;funcret
  2942  002B62                     __end_of_IOCCF4_SetInterruptHandler:
  2943                           	opt callstack 0
  2944                           
  2945 ;; *************** function _IOCCF3_SetInterruptHandler *****************
  2946 ;; Defined at:
  2947 ;;		line 439 in file "mcc_generated_files/pin_manager.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  2950 ;;		 -> IOCCF3_DefaultInterruptHandler(1), 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;		None
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      void 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2, status,0
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2962 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2965 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2966 ;;Total ram usage:        2 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:   11
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_PIN_MANAGER_Initialize
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text18
  2977  002B62                     __ptext18:
  2978                           	opt callstack 0
  2979  002B62                     _IOCCF3_SetInterruptHandler:
  2980                           	opt callstack 17
  2981                           
  2982                           ;pin_manager.c: 440: IOCCF3_InterruptHandler = InterruptHandler;
  2983                           
  2984                           ;incstack = 0
  2985  002B62  C180  F0E8         	movff	IOCCF3_SetInterruptHandler@InterruptHandler,_IOCCF3_InterruptHandler
  2986  002B66  C181  F0E9         	movff	IOCCF3_SetInterruptHandler@InterruptHandler+1,_IOCCF3_InterruptHandler+1
  2987  002B6A  0012               	return		;funcret
  2988  002B6C                     __end_of_IOCCF3_SetInterruptHandler:
  2989                           	opt callstack 0
  2990                           
  2991 ;; *************** function _IOCBF5_SetInterruptHandler *****************
  2992 ;; Defined at:
  2993 ;;		line 409 in file "mcc_generated_files/pin_manager.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  2996 ;;		 -> IOCBF5_DefaultInterruptHandler(1), 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3008 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3011 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3012 ;;Total ram usage:        2 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:   11
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_PIN_MANAGER_Initialize
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text19
  3023  002B6C                     __ptext19:
  3024                           	opt callstack 0
  3025  002B6C                     _IOCBF5_SetInterruptHandler:
  3026                           	opt callstack 17
  3027                           
  3028                           ;pin_manager.c: 410: IOCBF5_InterruptHandler = InterruptHandler;
  3029                           
  3030                           ;incstack = 0
  3031  002B6C  C180  F0EA         	movff	IOCBF5_SetInterruptHandler@InterruptHandler,_IOCBF5_InterruptHandler
  3032  002B70  C181  F0EB         	movff	IOCBF5_SetInterruptHandler@InterruptHandler+1,_IOCBF5_InterruptHandler+1
  3033  002B74  0012               	return		;funcret
  3034  002B76                     __end_of_IOCBF5_SetInterruptHandler:
  3035                           	opt callstack 0
  3036                           
  3037 ;; *************** function _IOCAF4_SetInterruptHandler *****************
  3038 ;; Defined at:
  3039 ;;		line 379 in file "mcc_generated_files/pin_manager.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  3042 ;;		 -> IOCAF4_DefaultInterruptHandler(1), 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3054 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3058 ;;Total ram usage:        2 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:   11
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_PIN_MANAGER_Initialize
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text20
  3069  002B76                     __ptext20:
  3070                           	opt callstack 0
  3071  002B76                     _IOCAF4_SetInterruptHandler:
  3072                           	opt callstack 17
  3073                           
  3074                           ;pin_manager.c: 380: IOCAF4_InterruptHandler = InterruptHandler;
  3075                           
  3076                           ;incstack = 0
  3077  002B76  C180  F0EC         	movff	IOCAF4_SetInterruptHandler@InterruptHandler,_IOCAF4_InterruptHandler
  3078  002B7A  C181  F0ED         	movff	IOCAF4_SetInterruptHandler@InterruptHandler+1,_IOCAF4_InterruptHandler+1
  3079  002B7E  0012               	return		;funcret
  3080  002B80                     __end_of_IOCAF4_SetInterruptHandler:
  3081                           	opt callstack 0
  3082                           
  3083 ;; *************** function _IOCAF3_SetInterruptHandler *****************
  3084 ;; Defined at:
  3085 ;;		line 349 in file "mcc_generated_files/pin_manager.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  3088 ;;		 -> IOCAF3_DefaultInterruptHandler(1), 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3100 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3104 ;;Total ram usage:        2 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:   11
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_PIN_MANAGER_Initialize
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text21
  3115  002B80                     __ptext21:
  3116                           	opt callstack 0
  3117  002B80                     _IOCAF3_SetInterruptHandler:
  3118                           	opt callstack 17
  3119                           
  3120                           ;pin_manager.c: 350: IOCAF3_InterruptHandler = InterruptHandler;
  3121                           
  3122                           ;incstack = 0
  3123  002B80  C180  F0EE         	movff	IOCAF3_SetInterruptHandler@InterruptHandler,_IOCAF3_InterruptHandler
  3124  002B84  C181  F0EF         	movff	IOCAF3_SetInterruptHandler@InterruptHandler+1,_IOCAF3_InterruptHandler+1
  3125  002B88  0012               	return		;funcret
  3126  002B8A                     __end_of_IOCAF3_SetInterruptHandler:
  3127                           	opt callstack 0
  3128                           
  3129 ;; *************** function _IOCAF1_SetInterruptHandler *****************
  3130 ;; Defined at:
  3131 ;;		line 319 in file "mcc_generated_files/pin_manager.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  3134 ;;		 -> IOCAF1_DefaultInterruptHandler(1), 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3146 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3150 ;;Total ram usage:        2 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:   11
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_PIN_MANAGER_Initialize
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text22
  3161  002B8A                     __ptext22:
  3162                           	opt callstack 0
  3163  002B8A                     _IOCAF1_SetInterruptHandler:
  3164                           	opt callstack 17
  3165                           
  3166                           ;pin_manager.c: 320: IOCAF1_InterruptHandler = InterruptHandler;
  3167                           
  3168                           ;incstack = 0
  3169  002B8A  C180  F0F0         	movff	IOCAF1_SetInterruptHandler@InterruptHandler,_IOCAF1_InterruptHandler
  3170  002B8E  C181  F0F1         	movff	IOCAF1_SetInterruptHandler@InterruptHandler+1,_IOCAF1_InterruptHandler+1
  3171  002B92  0012               	return		;funcret
  3172  002B94                     __end_of_IOCAF1_SetInterruptHandler:
  3173                           	opt callstack 0
  3174                           
  3175 ;; *************** function _IOCAF0_SetInterruptHandler *****************
  3176 ;; Defined at:
  3177 ;;		line 289 in file "mcc_generated_files/pin_manager.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  3180 ;;		 -> IOCAF0_DefaultInterruptHandler(1), 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      void 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3192 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3196 ;;Total ram usage:        2 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:   11
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_PIN_MANAGER_Initialize
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text23
  3207  002B94                     __ptext23:
  3208                           	opt callstack 0
  3209  002B94                     _IOCAF0_SetInterruptHandler:
  3210                           	opt callstack 17
  3211                           
  3212                           ;pin_manager.c: 290: IOCAF0_InterruptHandler = InterruptHandler;
  3213                           
  3214                           ;incstack = 0
  3215  002B94  C180  F0F2         	movff	IOCAF0_SetInterruptHandler@InterruptHandler,_IOCAF0_InterruptHandler
  3216  002B98  C181  F0F3         	movff	IOCAF0_SetInterruptHandler@InterruptHandler+1,_IOCAF0_InterruptHandler+1
  3217  002B9C  0012               	return		;funcret
  3218  002B9E                     __end_of_IOCAF0_SetInterruptHandler:
  3219                           	opt callstack 0
  3220                           
  3221 ;; *************** function _OSCILLATOR_Initialize *****************
  3222 ;; Defined at:
  3223 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3241 ;;Total ram usage:        0 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:   11
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_SYSTEM_Initialize
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text24
  3252  002A38                     __ptext24:
  3253                           	opt callstack 0
  3254  002A38                     _OSCILLATOR_Initialize:
  3255                           	opt callstack 18
  3256                           
  3257                           ;mcc.c: 73: OSCCON1 = 0x61;
  3258                           
  3259                           ;incstack = 0
  3260  002A38  0E61               	movlw	97
  3261  002A3A  010E               	movlb	14	; () banked
  3262  002A3C  6FD8               	movwf	216,b	;volatile
  3263                           
  3264                           ;mcc.c: 75: OSCCON3 = 0x00;
  3265  002A3E  0E00               	movlw	0
  3266  002A40  6FDA               	movwf	218,b	;volatile
  3267                           
  3268                           ;mcc.c: 77: OSCEN = 0x00;
  3269  002A42  0E00               	movlw	0
  3270  002A44  6FDC               	movwf	220,b	;volatile
  3271                           
  3272                           ;mcc.c: 79: OSCFRQ = 0x07;
  3273  002A46  0E07               	movlw	7
  3274  002A48  6FDE               	movwf	222,b	;volatile
  3275                           
  3276                           ;mcc.c: 81: OSCTUNE = 0x00;
  3277  002A4A  0E00               	movlw	0
  3278  002A4C  6FDD               	movwf	221,b	;volatile
  3279                           
  3280                           ; BSR set to: 14
  3281  002A4E  0012               	return		;funcret
  3282  002A50                     __end_of_OSCILLATOR_Initialize:
  3283                           	opt callstack 0
  3284                           
  3285 ;; *************** function _INTERRUPT_Initialize *****************
  3286 ;; Defined at:
  3287 ;;		line 53 in file "mcc_generated_files/interrupt_manager.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		None
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3305 ;;Total ram usage:        0 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:   11
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_SYSTEM_Initialize
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text25
  3316  002C4C                     __ptext25:
  3317                           	opt callstack 0
  3318  002C4C                     _INTERRUPT_Initialize:
  3319                           	opt callstack 18
  3320                           
  3321                           ;interrupt_manager.c: 56: INTCONbits.IPEN = 0;
  3322                           
  3323                           ; BSR set to: 14
  3324                           ;incstack = 0
  3325  002C4C  9AF2               	bcf	4082,5,c	;volatile
  3326  002C4E  0012               	return		;funcret
  3327  002C50                     __end_of_INTERRUPT_Initialize:
  3328                           	opt callstack 0
  3329                           
  3330 ;; *************** function _I2C_Master_Init *****************
  3331 ;; Defined at:
  3332 ;;		line 38 in file "iic.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:   11
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_SYSTEM_Initialize
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text26
  3361  002574                     __ptext26:
  3362                           	opt callstack 0
  3363  002574                     _I2C_Master_Init:
  3364                           	opt callstack 18
  3365                           
  3366                           ;incstack = 0
  3367                           ;iic.c: 40: do { ANSELBbits.ANSELB2 = 0; } while(0);
  3368  002574  010F               	movlb	15	; () banked
  3369  002576  9519               	bcf	25,2,b	;volatile
  3370                           
  3371                           ; BSR set to: 15
  3372                           
  3373                           ;iic.c: 41: do { TRISBbits.TRISB2 = 1; } while(0);
  3374  002578  8489               	bsf	3977,2,c	;volatile
  3375                           
  3376                           ; BSR set to: 15
  3377                           ;iic.c: 42: SSP1CLKPPS = 0b00001010;
  3378  00257A  0E0A               	movlw	10
  3379  00257C  010E               	movlb	14	; () banked
  3380  00257E  6FB7               	movwf	183,b	;volatile
  3381                           
  3382                           ;iic.c: 43: RB2PPS = 0x0F;
  3383  002580  0E0F               	movlw	15
  3384  002582  6FF1               	movwf	241,b	;volatile
  3385                           
  3386                           ; BSR set to: 14
  3387  002584  010F               	movlb	15	; () banked
  3388  002586  9719               	bcf	25,3,b	;volatile
  3389                           
  3390                           ; BSR set to: 15
  3391  002588  8689               	bsf	3977,3,c	;volatile
  3392                           
  3393                           ; BSR set to: 15
  3394                           ;iic.c: 47: SSP1DATPPS = 0b00001011;
  3395  00258A  0E0B               	movlw	11
  3396  00258C  010E               	movlb	14	; () banked
  3397  00258E  6FB8               	movwf	184,b	;volatile
  3398                           
  3399                           ;iic.c: 48: RB3PPS = 0x10;
  3400  002590  0E10               	movlw	16
  3401  002592  6FF2               	movwf	242,b	;volatile
  3402                           
  3403                           ;iic.c: 50: SSP1STAT = 0b00000000;
  3404  002594  0E00               	movlw	0
  3405  002596  6E95               	movwf	3989,c	;volatile
  3406                           
  3407                           ;iic.c: 61: SSP1CON1 = 0b00101000;
  3408  002598  0E28               	movlw	40
  3409  00259A  6E96               	movwf	3990,c	;volatile
  3410                           
  3411                           ;iic.c: 68: SSP1CON2 = 0b00000000;
  3412  00259C  0E00               	movlw	0
  3413  00259E  6E97               	movwf	3991,c	;volatile
  3414                           
  3415                           ;iic.c: 79: SSP1CON3 = 0x00;
  3416  0025A0  0E00               	movlw	0
  3417  0025A2  6E98               	movwf	3992,c	;volatile
  3418                           
  3419                           ;iic.c: 81: SSP1ADD = 0xEF;
  3420  0025A4  0EEF               	movlw	239
  3421  0025A6  6E93               	movwf	3987,c	;volatile
  3422                           
  3423                           ; BSR set to: 14
  3424                           ;iic.c: 83: PIR3bits.BCL1IF = 0;
  3425  0025A8  93CD               	bcf	205,1,b	;volatile
  3426                           
  3427                           ; BSR set to: 14
  3428                           ;iic.c: 85: PIE3bits.BCL1IE = 1;
  3429  0025AA  83C5               	bsf	197,1,b	;volatile
  3430                           
  3431                           ; BSR set to: 14
  3432  0025AC  0012               	return		;funcret
  3433  0025AE                     __end_of_I2C_Master_Init:
  3434                           	opt callstack 0
  3435                           
  3436 ;; *************** function _FVR_Initialize *****************
  3437 ;; Defined at:
  3438 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:   11
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_SYSTEM_Initialize
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text27
  3467  002C32                     __ptext27:
  3468                           	opt callstack 0
  3469  002C32                     _FVR_Initialize:
  3470                           	opt callstack 18
  3471                           
  3472                           ;fvr.c: 61: FVRCON = 0x84;
  3473                           
  3474                           ; BSR set to: 14
  3475                           ;incstack = 0
  3476  002C32  0E84               	movlw	132
  3477  002C34  010F               	movlb	15	; () banked
  3478  002C36  6F31               	movwf	49,b	;volatile
  3479                           
  3480                           ; BSR set to: 15
  3481  002C38  0012               	return		;funcret
  3482  002C3A                     __end_of_FVR_Initialize:
  3483                           	opt callstack 0
  3484                           
  3485 ;; *************** function _EXT_INT_Initialize *****************
  3486 ;; Defined at:
  3487 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3505 ;;Total ram usage:        0 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:   12
  3508 ;; This function calls:
  3509 ;;		_INT0_SetInterruptHandler
  3510 ;;		_INT1_SetInterruptHandler
  3511 ;;		_INT2_SetInterruptHandler
  3512 ;; This function is called by:
  3513 ;;		_SYSTEM_Initialize
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text28
  3518  002422                     __ptext28:
  3519                           	opt callstack 0
  3520  002422                     _EXT_INT_Initialize:
  3521                           	opt callstack 17
  3522                           
  3523                           ;ext_int.c: 118: (PIR0bits.INT0IF = 0);
  3524                           
  3525                           ; BSR set to: 15
  3526                           ;incstack = 0
  3527  002422  010E               	movlb	14	; () banked
  3528  002424  91CA               	bcf	202,0,b	;volatile
  3529                           
  3530                           ;ext_int.c: 119: (INTCONbits.INT0EDG = 1);
  3531  002426  80F2               	bsf	4082,0,c	;volatile
  3532                           
  3533                           ; BSR set to: 14
  3534                           ;ext_int.c: 121: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  3535  002428  0E74               	movlw	low _INT0_DefaultInterruptHandler
  3536  00242A  0101               	movlb	1	; () banked
  3537  00242C  6F80               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  3538  00242E  0E2C               	movlw	high _INT0_DefaultInterruptHandler
  3539  002430  6F81               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3540  002432  ECD9  F015         	call	_INT0_SetInterruptHandler	;wreg free
  3541                           
  3542                           ;ext_int.c: 122: (PIE0bits.INT0IE = 1);
  3543  002436  010E               	movlb	14	; () banked
  3544  002438  81C2               	bsf	194,0,b	;volatile
  3545                           
  3546                           ; BSR set to: 14
  3547                           ;ext_int.c: 127: (PIR0bits.INT1IF = 0);
  3548  00243A  93CA               	bcf	202,1,b	;volatile
  3549                           
  3550                           ; BSR set to: 14
  3551                           ;ext_int.c: 128: (INTCONbits.INT1EDG = 1);
  3552  00243C  82F2               	bsf	4082,1,c	;volatile
  3553                           
  3554                           ;ext_int.c: 130: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3555  00243E  0E72               	movlw	low _INT1_DefaultInterruptHandler
  3556  002440  0101               	movlb	1	; () banked
  3557  002442  6F80               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  3558  002444  0E2C               	movlw	high _INT1_DefaultInterruptHandler
  3559  002446  6F81               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3560  002448  ECD4  F015         	call	_INT1_SetInterruptHandler	;wreg free
  3561                           
  3562                           ;ext_int.c: 131: (PIE0bits.INT1IE = 1);
  3563  00244C  010E               	movlb	14	; () banked
  3564  00244E  83C2               	bsf	194,1,b	;volatile
  3565                           
  3566                           ; BSR set to: 14
  3567                           ;ext_int.c: 136: (PIR0bits.INT2IF = 0);
  3568  002450  95CA               	bcf	202,2,b	;volatile
  3569                           
  3570                           ; BSR set to: 14
  3571                           ;ext_int.c: 137: (INTCONbits.INT2EDG = 1);
  3572  002452  84F2               	bsf	4082,2,c	;volatile
  3573                           
  3574                           ;ext_int.c: 139: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  3575  002454  0E70               	movlw	low _INT2_DefaultInterruptHandler
  3576  002456  0101               	movlb	1	; () banked
  3577  002458  6F80               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  3578  00245A  0E2C               	movlw	high _INT2_DefaultInterruptHandler
  3579  00245C  6F81               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3580  00245E  ECCF  F015         	call	_INT2_SetInterruptHandler	;wreg free
  3581                           
  3582                           ;ext_int.c: 140: (PIE0bits.INT2IE = 1);
  3583  002462  010E               	movlb	14	; () banked
  3584  002464  85C2               	bsf	194,2,b	;volatile
  3585                           
  3586                           ; BSR set to: 14
  3587  002466  0012               	return		;funcret
  3588  002468                     __end_of_EXT_INT_Initialize:
  3589                           	opt callstack 0
  3590                           
  3591 ;; *************** function _INT2_SetInterruptHandler *****************
  3592 ;; Defined at:
  3593 ;;		line 104 in file "mcc_generated_files/ext_int.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  3596 ;;		 -> INT2_DefaultInterruptHandler(1), 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3608 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3611 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3612 ;;Total ram usage:        2 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:   11
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_EXT_INT_Initialize
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text29
  3623  002B9E                     __ptext29:
  3624                           	opt callstack 0
  3625  002B9E                     _INT2_SetInterruptHandler:
  3626                           	opt callstack 17
  3627                           
  3628                           ;ext_int.c: 105: INT2_InterruptHandler = InterruptHandler;
  3629                           
  3630                           ; BSR set to: 14
  3631                           ;incstack = 0
  3632  002B9E  C180  F0F8         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3633  002BA2  C181  F0F9         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3634  002BA6  0012               	return		;funcret
  3635  002BA8                     __end_of_INT2_SetInterruptHandler:
  3636                           	opt callstack 0
  3637                           
  3638 ;; *************** function _INT1_SetInterruptHandler *****************
  3639 ;; Defined at:
  3640 ;;		line 78 in file "mcc_generated_files/ext_int.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  3643 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3655 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3658 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3659 ;;Total ram usage:        2 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:   11
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_EXT_INT_Initialize
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text30
  3670  002BA8                     __ptext30:
  3671                           	opt callstack 0
  3672  002BA8                     _INT1_SetInterruptHandler:
  3673                           	opt callstack 17
  3674                           
  3675                           ;ext_int.c: 79: INT1_InterruptHandler = InterruptHandler;
  3676                           
  3677                           ;incstack = 0
  3678  002BA8  C180  F0FA         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3679  002BAC  C181  F0FB         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3680  002BB0  0012               	return		;funcret
  3681  002BB2                     __end_of_INT1_SetInterruptHandler:
  3682                           	opt callstack 0
  3683                           
  3684 ;; *************** function _INT0_SetInterruptHandler *****************
  3685 ;; Defined at:
  3686 ;;		line 52 in file "mcc_generated_files/ext_int.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  3689 ;;		 -> INT0_Custom_ISR(1), INT0_DefaultInterruptHandler(1), 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2, status,0
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3701 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3704 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3705 ;;Total ram usage:        2 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:   11
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_EXT_INT_Initialize
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text31
  3717  002BB2                     __ptext31:
  3718                           	opt callstack 0
  3719  002BB2                     _INT0_SetInterruptHandler:
  3720                           	opt callstack 17
  3721                           
  3722                           ;ext_int.c: 53: INT0_InterruptHandler = InterruptHandler;
  3723                           
  3724                           ;incstack = 0
  3725  002BB2  C180  F0FC         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  3726  002BB6  C181  F0FD         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  3727  002BBA  0012               	return		;funcret
  3728  002BBC                     __end_of_INT0_SetInterruptHandler:
  3729                           	opt callstack 0
  3730                           
  3731 ;; *************** function _EUSART1_Initialize *****************
  3732 ;; Defined at:
  3733 ;;		line 86 in file "mcc_generated_files/eusart1.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:   12
  3754 ;; This function calls:
  3755 ;;		_EUSART1_SetErrorHandler
  3756 ;;		_EUSART1_SetFramingErrorHandler
  3757 ;;		_EUSART1_SetOverrunErrorHandler
  3758 ;;		_EUSART1_SetRxInterruptHandler
  3759 ;;		_EUSART1_SetTxInterruptHandler
  3760 ;; This function is called by:
  3761 ;;		_SYSTEM_Initialize
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text32
  3766  002082                     __ptext32:
  3767                           	opt callstack 0
  3768  002082                     _EUSART1_Initialize:
  3769                           	opt callstack 17
  3770                           
  3771                           ;eusart1.c: 89: PIE3bits.RC1IE = 0;
  3772                           
  3773                           ;incstack = 0
  3774  002082  010E               	movlb	14	; () banked
  3775  002084  9BC5               	bcf	197,5,b	;volatile
  3776                           
  3777                           ; BSR set to: 14
  3778                           ;eusart1.c: 90: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  3779  002086  0EEE               	movlw	low _EUSART1_Receive_ISR
  3780  002088  0101               	movlb	1	; () banked
  3781  00208A  6F80               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  3782  00208C  0E1F               	movlw	high _EUSART1_Receive_ISR
  3783  00208E  6F81               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  3784  002090  ECE3  F015         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3785                           
  3786                           ;eusart1.c: 91: PIE3bits.TX1IE = 0;
  3787  002094  010E               	movlb	14	; () banked
  3788  002096  99C5               	bcf	197,4,b	;volatile
  3789                           
  3790                           ;eusart1.c: 92: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  3791  002098  0EB2               	movlw	low _EUSART1_Transmit_ISR
  3792  00209A  0101               	movlb	1	; () banked
  3793  00209C  6F80               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  3794  00209E  0E26               	movlw	high _EUSART1_Transmit_ISR
  3795  0020A0  6F81               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  3796  0020A2  ECDE  F015         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3797                           
  3798                           ;eusart1.c: 96: BAUD1CON = 0x08;
  3799  0020A6  0E08               	movlw	8
  3800  0020A8  6E9F               	movwf	3999,c	;volatile
  3801                           
  3802                           ;eusart1.c: 99: RC1STA = 0x90;
  3803  0020AA  0E90               	movlw	144
  3804  0020AC  6E9D               	movwf	3997,c	;volatile
  3805                           
  3806                           ;eusart1.c: 102: TX1STA = 0x04;
  3807  0020AE  0E04               	movlw	4
  3808  0020B0  6E9E               	movwf	3998,c	;volatile
  3809                           
  3810                           ;eusart1.c: 105: SP1BRGL = 0x33;
  3811  0020B2  0E33               	movlw	51
  3812  0020B4  6E9B               	movwf	3995,c	;volatile
  3813                           
  3814                           ;eusart1.c: 108: SP1BRGH = 0x00;
  3815  0020B6  0E00               	movlw	0
  3816  0020B8  6E9C               	movwf	3996,c	;volatile
  3817                           
  3818                           ;eusart1.c: 111: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3819  0020BA  0E76               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3820  0020BC  0101               	movlb	1	; () banked
  3821  0020BE  6F80               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  3822  0020C0  0E2C               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3823  0020C2  6F81               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  3824  0020C4  ECED  F015         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3825                           
  3826                           ;eusart1.c: 112: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3827  0020C8  0E40               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3828  0020CA  0101               	movlb	1	; () banked
  3829  0020CC  6F80               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  3830  0020CE  0E2C               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3831  0020D0  6F81               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  3832  0020D2  ECE8  F015         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3833                           
  3834                           ;eusart1.c: 113: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3835  0020D6  0E46               	movlw	low _EUSART1_DefaultErrorHandler
  3836  0020D8  0101               	movlb	1	; () banked
  3837  0020DA  6F80               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  3838  0020DC  0E2C               	movlw	high _EUSART1_DefaultErrorHandler
  3839  0020DE  6F81               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  3840  0020E0  ECF2  F015         	call	_EUSART1_SetErrorHandler	;wreg free
  3841                           
  3842                           ;eusart1.c: 115: eusart1RxLastError.status = 0;
  3843  0020E4  0E00               	movlw	0
  3844  0020E6  6E23               	movwf	_eusart1RxLastError,c	;volatile
  3845                           
  3846                           ;eusart1.c: 118: eusart1TxHead = 0;
  3847  0020E8  0E00               	movlw	0
  3848  0020EA  6E28               	movwf	_eusart1TxHead,c	;volatile
  3849                           
  3850                           ;eusart1.c: 119: eusart1TxTail = 0;
  3851  0020EC  0E00               	movlw	0
  3852  0020EE  6E27               	movwf	_eusart1TxTail,c	;volatile
  3853                           
  3854                           ;eusart1.c: 120: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  3855  0020F0  0E40               	movlw	64
  3856  0020F2  6E4B               	movwf	_eusart1TxBufferRemaining,c	;volatile
  3857                           
  3858                           ;eusart1.c: 122: eusart1RxHead = 0;
  3859  0020F4  0E00               	movlw	0
  3860  0020F6  6E26               	movwf	_eusart1RxHead,c	;volatile
  3861                           
  3862                           ;eusart1.c: 123: eusart1RxTail = 0;
  3863  0020F8  0E00               	movlw	0
  3864  0020FA  6E25               	movwf	_eusart1RxTail,c	;volatile
  3865                           
  3866                           ;eusart1.c: 124: eusart1RxCount = 0;
  3867  0020FC  0E00               	movlw	0
  3868  0020FE  6E24               	movwf	_eusart1RxCount,c	;volatile
  3869                           
  3870                           ;eusart1.c: 127: PIE3bits.RC1IE = 1;
  3871  002100  010E               	movlb	14	; () banked
  3872  002102  8BC5               	bsf	197,5,b	;volatile
  3873                           
  3874                           ; BSR set to: 14
  3875  002104  0012               	return		;funcret
  3876  002106                     __end_of_EUSART1_Initialize:
  3877                           	opt callstack 0
  3878                           
  3879 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3880 ;; Defined at:
  3881 ;;		line 275 in file "mcc_generated_files/eusart1.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  3884 ;;		 -> EUSART1_Transmit_ISR(1), 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      void 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3896 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3899 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3900 ;;Total ram usage:        2 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:   11
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_EUSART1_Initialize
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text33
  3911  002BBC                     __ptext33:
  3912                           	opt callstack 0
  3913  002BBC                     _EUSART1_SetTxInterruptHandler:
  3914                           	opt callstack 17
  3915                           
  3916                           ;eusart1.c: 276: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  3917                           
  3918                           ; BSR set to: 14
  3919                           ;incstack = 0
  3920  002BBC  C180  F0F6         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3921  002BC0  C181  F0F7         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3922  002BC4  0012               	return		;funcret
  3923  002BC6                     __end_of_EUSART1_SetTxInterruptHandler:
  3924                           	opt callstack 0
  3925                           
  3926 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3927 ;; Defined at:
  3928 ;;		line 279 in file "mcc_generated_files/eusart1.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  3931 ;;		 -> EUSART1_Receive_ISR(1), 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3943 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3946 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3947 ;;Total ram usage:        2 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:   11
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_EUSART1_Initialize
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text34
  3958  002BC6                     __ptext34:
  3959                           	opt callstack 0
  3960  002BC6                     _EUSART1_SetRxInterruptHandler:
  3961                           	opt callstack 17
  3962                           
  3963                           ;eusart1.c: 280: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  3964                           
  3965                           ;incstack = 0
  3966  002BC6  C180  F0F4         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3967  002BCA  C181  F0F5         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3968  002BCE  0012               	return		;funcret
  3969  002BD0                     __end_of_EUSART1_SetRxInterruptHandler:
  3970                           	opt callstack 0
  3971                           
  3972 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3973 ;; Defined at:
  3974 ;;		line 267 in file "mcc_generated_files/eusart1.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  3977 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3989 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3992 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3993 ;;Total ram usage:        2 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:   11
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_EUSART1_Initialize
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text35
  4004  002BD0                     __ptext35:
  4005                           	opt callstack 0
  4006  002BD0                     _EUSART1_SetOverrunErrorHandler:
  4007                           	opt callstack 17
  4008                           
  4009                           ;eusart1.c: 268: EUSART1_OverrunErrorHandler = interruptHandler;
  4010                           
  4011                           ;incstack = 0
  4012  002BD0  C180  F0DC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4013  002BD4  C181  F0DD         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4014  002BD8  0012               	return		;funcret
  4015  002BDA                     __end_of_EUSART1_SetOverrunErrorHandler:
  4016                           	opt callstack 0
  4017                           
  4018 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4019 ;; Defined at:
  4020 ;;		line 263 in file "mcc_generated_files/eusart1.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  4023 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4035 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4038 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4039 ;;Total ram usage:        2 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:   11
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_EUSART1_Initialize
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text36
  4050  002BDA                     __ptext36:
  4051                           	opt callstack 0
  4052  002BDA                     _EUSART1_SetFramingErrorHandler:
  4053                           	opt callstack 17
  4054                           
  4055                           ;eusart1.c: 264: EUSART1_FramingErrorHandler = interruptHandler;
  4056                           
  4057                           ;incstack = 0
  4058  002BDA  C180  F0DE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4059  002BDE  C181  F0DF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4060  002BE2  0012               	return		;funcret
  4061  002BE4                     __end_of_EUSART1_SetFramingErrorHandler:
  4062                           	opt callstack 0
  4063                           
  4064 ;; *************** function _EUSART1_SetErrorHandler *****************
  4065 ;; Defined at:
  4066 ;;		line 271 in file "mcc_generated_files/eusart1.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  4069 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4081 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4084 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4085 ;;Total ram usage:        2 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:   11
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_EUSART1_Initialize
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text37
  4096  002BE4                     __ptext37:
  4097                           	opt callstack 0
  4098  002BE4                     _EUSART1_SetErrorHandler:
  4099                           	opt callstack 17
  4100                           
  4101                           ;eusart1.c: 272: EUSART1_ErrorHandler = interruptHandler;
  4102                           
  4103                           ;incstack = 0
  4104  002BE4  C180  F0DA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4105  002BE8  C181  F0DB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4106  002BEC  0012               	return		;funcret
  4107  002BEE                     __end_of_EUSART1_SetErrorHandler:
  4108                           	opt callstack 0
  4109                           
  4110 ;; *************** function _DAC1_Initialize *****************
  4111 ;; Defined at:
  4112 ;;		line 58 in file "mcc_generated_files/dac1.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:   11
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_SYSTEM_Initialize
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text38
  4141  002AEC                     __ptext38:
  4142                           	opt callstack 0
  4143  002AEC                     _DAC1_Initialize:
  4144                           	opt callstack 18
  4145                           
  4146                           ;dac1.c: 61: DAC1CON0 = 0xA8;
  4147                           
  4148                           ;incstack = 0
  4149  002AEC  0EA8               	movlw	168
  4150  002AEE  010F               	movlb	15	; () banked
  4151  002AF0  6F33               	movwf	51,b	;volatile
  4152                           
  4153                           ;dac1.c: 63: DAC1CON1 = 0x1F;
  4154  002AF2  0E1F               	movlw	31
  4155  002AF4  6F34               	movwf	52,b	;volatile
  4156                           
  4157                           ; BSR set to: 15
  4158  002AF6  0012               	return		;funcret
  4159  002AF8                     __end_of_DAC1_Initialize:
  4160                           	opt callstack 0
  4161                           
  4162 ;; *************** function _CLKREF_Initialize *****************
  4163 ;; Defined at:
  4164 ;;		line 58 in file "mcc_generated_files/clkref.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      void 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4182 ;;Total ram usage:        0 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:   11
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_SYSTEM_Initialize
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text39
  4193  002AF8                     __ptext39:
  4194                           	opt callstack 0
  4195  002AF8                     _CLKREF_Initialize:
  4196                           	opt callstack 18
  4197                           
  4198                           ;clkref.c: 61: CLKRCLK = 0x01;
  4199                           
  4200                           ; BSR set to: 15
  4201                           ;incstack = 0
  4202  002AF8  0E01               	movlw	1
  4203  002AFA  010F               	movlb	15	; () banked
  4204  002AFC  6F3F               	movwf	63,b	;volatile
  4205                           
  4206                           ;clkref.c: 63: CLKRCON = 0x90;
  4207  002AFE  0E90               	movlw	144
  4208  002B00  6F3E               	movwf	62,b	;volatile
  4209                           
  4210                           ; BSR set to: 15
  4211  002B02  0012               	return		;funcret
  4212  002B04                     __end_of_CLKREF_Initialize:
  4213                           	opt callstack 0
  4214                           
  4215 ;; *************** function _RunLoop *****************
  4216 ;; Defined at:
  4217 ;;		line 42 in file "main.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4235 ;;Total ram usage:        0 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:   12
  4238 ;; This function calls:
  4239 ;;		_EUSART1_Read
  4240 ;;		_EUSART1_Write
  4241 ;;		_EUSART1_is_rx_ready
  4242 ;;		_EUSART1_is_tx_ready
  4243 ;;		_SetLedBlink
  4244 ;; This function is called by:
  4245 ;;		_main
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text40
  4250  0021E2                     __ptext40:
  4251                           	opt callstack 0
  4252  0021E2                     _RunLoop:
  4253                           	opt callstack 18
  4254                           
  4255                           ;main.c: 44: if(EUSART1_is_rx_ready() != 0) {
  4256                           
  4257                           ; BSR set to: 15
  4258                           ;incstack = 0
  4259  0021E2  EC2A  F016         	call	_EUSART1_is_rx_ready	;wreg free
  4260  0021E6  0900               	iorlw	0
  4261  0021E8  B4D8               	btfsc	status,2,c
  4262  0021EA  0012               	return	
  4263                           
  4264                           ;main.c: 46: SetLedBlink(B, 5, 95, 0, 1);
  4265  0021EC  0E00               	movlw	0
  4266  0021EE  0101               	movlb	1	; () banked
  4267  0021F0  6F81               	movwf	(SetLedBlink@ledIndex+1)& (0+255),b
  4268  0021F2  0E02               	movlw	2
  4269  0021F4  6F80               	movwf	SetLedBlink@ledIndex& (0+255),b
  4270  0021F6  0E00               	movlw	0
  4271  0021F8  6F83               	movwf	(SetLedBlink@OnTime+1)& (0+255),b
  4272  0021FA  0E05               	movlw	5
  4273  0021FC  6F82               	movwf	SetLedBlink@OnTime& (0+255),b
  4274  0021FE  0E00               	movlw	0
  4275  002200  6F85               	movwf	(SetLedBlink@OffTime+1)& (0+255),b
  4276  002202  0E5F               	movlw	95
  4277  002204  6F84               	movwf	SetLedBlink@OffTime& (0+255),b
  4278  002206  0E00               	movlw	0
  4279  002208  6F87               	movwf	(SetLedBlink@StartAfter+1)& (0+255),b
  4280  00220A  0E00               	movlw	0
  4281  00220C  6F86               	movwf	SetLedBlink@StartAfter& (0+255),b
  4282  00220E  0E00               	movlw	0
  4283  002210  6F89               	movwf	(SetLedBlink@BlinkCount+1)& (0+255),b
  4284  002212  0E01               	movlw	1
  4285  002214  6F88               	movwf	SetLedBlink@BlinkCount& (0+255),b
  4286  002216  EC48  F00A         	call	_SetLedBlink	;wreg free
  4287                           
  4288                           ;main.c: 47: while(EUSART1_is_rx_ready() != 0)
  4289  00221A  D009               	goto	l6538
  4290  00221C                     l6534:
  4291  00221C  EC28  F016         	call	_EUSART1_is_tx_ready	;wreg free
  4292  002220  0900               	iorlw	0
  4293  002222  B4D8               	btfsc	status,2,c
  4294  002224  D7FB               	goto	l6534
  4295                           
  4296                           ;main.c: 51: EUSART1_Write(EUSART1_Read());
  4297  002226  EC57  F012         	call	_EUSART1_Read	;wreg free
  4298  00222A  ECD7  F012         	call	_EUSART1_Write
  4299  00222E                     l6538:
  4300  00222E  EC2A  F016         	call	_EUSART1_is_rx_ready	;wreg free
  4301  002232  0900               	iorlw	0
  4302  002234  B4D8               	btfsc	status,2,c
  4303  002236  0012               	return	
  4304  002238  D7F1               	goto	l6534
  4305  00223A                     __end_of_RunLoop:
  4306                           	opt callstack 0
  4307                           
  4308 ;; *************** function _SetLedBlink *****************
  4309 ;; Defined at:
  4310 ;;		line 64 in file "LedBlink.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  ledIndex        2    0[BANK1 ] int 
  4313 ;;  OnTime          2    2[BANK1 ] int 
  4314 ;;  OffTime         2    4[BANK1 ] int 
  4315 ;;  StartAfter      2    6[BANK1 ] int 
  4316 ;;  BlinkCount      2    8[BANK1 ] int 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4328 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4331 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4332 ;;Total ram usage:       10 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:   11
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_RunLoop
  4339 ;;		_main
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text41
  4344  001490                     __ptext41:
  4345                           	opt callstack 0
  4346  001490                     _SetLedBlink:
  4347                           	opt callstack 19
  4348                           
  4349                           ;LedBlink.c: 65: if (ledIndex == R) {
  4350                           
  4351                           ;incstack = 0
  4352  001490  0101               	movlb	1	; () banked
  4353  001492  5180               	movf	SetLedBlink@ledIndex& (0+255),w,b
  4354  001494  1181               	iorwf	(SetLedBlink@ledIndex+1)& (0+255),w,b
  4355  001496  A4D8               	btfss	status,2,c
  4356  001498  D021               	goto	l6410
  4357                           
  4358                           ; BSR set to: 1
  4359                           ;LedBlink.c: 66: R_OnTime = OnTime;
  4360  00149A  C182  F01F         	movff	SetLedBlink@OnTime,_R_OnTime
  4361  00149E  C183  F020         	movff	SetLedBlink@OnTime+1,_R_OnTime+1
  4362                           
  4363                           ;LedBlink.c: 67: R_OffTime = OffTime;
  4364  0014A2  C184  F01D         	movff	SetLedBlink@OffTime,_R_OffTime
  4365  0014A6  C185  F01E         	movff	SetLedBlink@OffTime+1,_R_OffTime+1
  4366                           
  4367                           ;LedBlink.c: 68: R_StartAfter = StartAfter;
  4368  0014AA  C186  F0D6         	movff	SetLedBlink@StartAfter,_R_StartAfter
  4369  0014AE  C187  F0D7         	movff	SetLedBlink@StartAfter+1,_R_StartAfter+1
  4370                           
  4371                           ; BSR set to: 1
  4372                           ;LedBlink.c: 69: R_Enabled = ON;
  4373  0014B2  0E00               	movlw	0
  4374  0014B4  6E1C               	movwf	_R_Enabled+1,c
  4375  0014B6  0E01               	movlw	1
  4376  0014B8  6E1B               	movwf	_R_Enabled,c
  4377                           
  4378                           ; BSR set to: 1
  4379                           ;LedBlink.c: 70: R_BlinkCount = BlinkCount;
  4380  0014BA  C188  F017         	movff	SetLedBlink@BlinkCount,_R_BlinkCount
  4381  0014BE  C189  F018         	movff	SetLedBlink@BlinkCount+1,_R_BlinkCount+1
  4382                           
  4383                           ; BSR set to: 1
  4384                           ;LedBlink.c: 71: R_BlinkCounter = BlinkCount;
  4385  0014C2  C188  F0D4         	movff	SetLedBlink@BlinkCount,_R_BlinkCounter
  4386  0014C6  C189  F0D5         	movff	SetLedBlink@BlinkCount+1,_R_BlinkCounter+1
  4387                           
  4388                           ;LedBlink.c: 72: R_Counter = 0;
  4389  0014CA  0E00               	movlw	0
  4390  0014CC  6E1A               	movwf	_R_Counter+1,c
  4391  0014CE  0E00               	movlw	0
  4392  0014D0  6E19               	movwf	_R_Counter,c
  4393                           
  4394                           ;LedBlink.c: 73: R_State = UNIDENTIFIED;
  4395  0014D2  0E00               	movlw	0
  4396  0014D4  6E4A               	movwf	_R_State+1,c
  4397  0014D6  0E03               	movlw	3
  4398  0014D8  6E49               	movwf	_R_State,c
  4399                           
  4400                           ;LedBlink.c: 74: } else if (ledIndex == G) {
  4401  0014DA  0012               	return	
  4402  0014DC                     l6410:
  4403                           
  4404                           ; BSR set to: 1
  4405  0014DC  0580               	decf	SetLedBlink@ledIndex& (0+255),w,b
  4406  0014DE  1181               	iorwf	(SetLedBlink@ledIndex+1)& (0+255),w,b
  4407  0014E0  A4D8               	btfss	status,2,c
  4408  0014E2  D022               	goto	l6420
  4409                           
  4410                           ; BSR set to: 1
  4411                           ;LedBlink.c: 75: G_OnTime = OnTime;
  4412  0014E4  C182  F0D2         	movff	SetLedBlink@OnTime,_G_OnTime
  4413  0014E8  C183  F0D3         	movff	SetLedBlink@OnTime+1,_G_OnTime+1
  4414                           
  4415                           ;LedBlink.c: 76: G_OffTime = OffTime;
  4416  0014EC  C184  F0D0         	movff	SetLedBlink@OffTime,_G_OffTime
  4417  0014F0  C185  F0D1         	movff	SetLedBlink@OffTime+1,_G_OffTime+1
  4418                           
  4419                           ;LedBlink.c: 77: G_StartAfter = StartAfter;
  4420  0014F4  C186  F0CC         	movff	SetLedBlink@StartAfter,_G_StartAfter
  4421  0014F8  C187  F0CD         	movff	SetLedBlink@StartAfter+1,_G_StartAfter+1
  4422                           
  4423                           ; BSR set to: 1
  4424                           ;LedBlink.c: 78: G_Enabled = ON;
  4425  0014FC  0E00               	movlw	0
  4426  0014FE  0100               	movlb	0	; () banked
  4427  001500  6FCF               	movwf	(_G_Enabled+1)& (0+255),b
  4428  001502  0E01               	movlw	1
  4429  001504  6FCE               	movwf	_G_Enabled& (0+255),b
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;LedBlink.c: 79: G_BlinkCount = BlinkCount;
  4433  001506  C188  F013         	movff	SetLedBlink@BlinkCount,_G_BlinkCount
  4434  00150A  C189  F014         	movff	SetLedBlink@BlinkCount+1,_G_BlinkCount+1
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;LedBlink.c: 80: G_BlinkCounter = BlinkCount;
  4438  00150E  C188  F0CA         	movff	SetLedBlink@BlinkCount,_G_BlinkCounter
  4439  001512  C189  F0CB         	movff	SetLedBlink@BlinkCount+1,_G_BlinkCounter+1
  4440                           
  4441                           ;LedBlink.c: 81: G_Counter = 0;
  4442  001516  0E00               	movlw	0
  4443  001518  6E16               	movwf	_G_Counter+1,c
  4444  00151A  0E00               	movlw	0
  4445  00151C  6E15               	movwf	_G_Counter,c
  4446                           
  4447                           ;LedBlink.c: 82: G_State = UNIDENTIFIED;
  4448  00151E  0E00               	movlw	0
  4449  001520  6E48               	movwf	_G_State+1,c
  4450  001522  0E03               	movlw	3
  4451  001524  6E47               	movwf	_G_State,c
  4452                           
  4453                           ;LedBlink.c: 83: } else if (ledIndex == B) {
  4454  001526  0012               	return	
  4455  001528                     l6420:
  4456                           
  4457                           ; BSR set to: 1
  4458  001528  0E02               	movlw	2
  4459  00152A  1980               	xorwf	SetLedBlink@ledIndex& (0+255),w,b
  4460  00152C  1181               	iorwf	(SetLedBlink@ledIndex+1)& (0+255),w,b
  4461  00152E  A4D8               	btfss	status,2,c
  4462  001530  D022               	goto	l6430
  4463                           
  4464                           ; BSR set to: 1
  4465                           ;LedBlink.c: 84: B_OnTime = OnTime;
  4466  001532  C182  F0C8         	movff	SetLedBlink@OnTime,_B_OnTime
  4467  001536  C183  F0C9         	movff	SetLedBlink@OnTime+1,_B_OnTime+1
  4468                           
  4469                           ;LedBlink.c: 85: B_OffTime = OffTime;
  4470  00153A  C184  F0C6         	movff	SetLedBlink@OffTime,_B_OffTime
  4471  00153E  C185  F0C7         	movff	SetLedBlink@OffTime+1,_B_OffTime+1
  4472                           
  4473                           ;LedBlink.c: 86: B_StartAfter = StartAfter;
  4474  001542  C186  F0C2         	movff	SetLedBlink@StartAfter,_B_StartAfter
  4475  001546  C187  F0C3         	movff	SetLedBlink@StartAfter+1,_B_StartAfter+1
  4476                           
  4477                           ; BSR set to: 1
  4478                           ;LedBlink.c: 87: B_Enabled = ON;
  4479  00154A  0E00               	movlw	0
  4480  00154C  0100               	movlb	0	; () banked
  4481  00154E  6FC5               	movwf	(_B_Enabled+1)& (0+255),b
  4482  001550  0E01               	movlw	1
  4483  001552  6FC4               	movwf	_B_Enabled& (0+255),b
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;LedBlink.c: 88: B_BlinkCount = BlinkCount;
  4487  001554  C188  F00F         	movff	SetLedBlink@BlinkCount,_B_BlinkCount
  4488  001558  C189  F010         	movff	SetLedBlink@BlinkCount+1,_B_BlinkCount+1
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;LedBlink.c: 89: B_BlinkCounter = BlinkCount;
  4492  00155C  C188  F0C0         	movff	SetLedBlink@BlinkCount,_B_BlinkCounter
  4493  001560  C189  F0C1         	movff	SetLedBlink@BlinkCount+1,_B_BlinkCounter+1
  4494                           
  4495                           ;LedBlink.c: 90: B_Counter = 0;
  4496  001564  0E00               	movlw	0
  4497  001566  6E12               	movwf	_B_Counter+1,c
  4498  001568  0E00               	movlw	0
  4499  00156A  6E11               	movwf	_B_Counter,c
  4500                           
  4501                           ;LedBlink.c: 91: B_State = UNIDENTIFIED;
  4502  00156C  0E00               	movlw	0
  4503  00156E  6E46               	movwf	_B_State+1,c
  4504  001570  0E03               	movlw	3
  4505  001572  6E45               	movwf	_B_State,c
  4506                           
  4507                           ;LedBlink.c: 92: } else if (ledIndex == RGB_R) {
  4508  001574  0012               	return	
  4509  001576                     l6430:
  4510                           
  4511                           ; BSR set to: 1
  4512  001576  0E03               	movlw	3
  4513  001578  1980               	xorwf	SetLedBlink@ledIndex& (0+255),w,b
  4514  00157A  1181               	iorwf	(SetLedBlink@ledIndex+1)& (0+255),w,b
  4515  00157C  A4D8               	btfss	status,2,c
  4516  00157E  D022               	goto	l6440
  4517                           
  4518                           ; BSR set to: 1
  4519                           ;LedBlink.c: 93: RGB_R_OnTime = OnTime;
  4520  001580  C182  F0BE         	movff	SetLedBlink@OnTime,_RGB_R_OnTime
  4521  001584  C183  F0BF         	movff	SetLedBlink@OnTime+1,_RGB_R_OnTime+1
  4522                           
  4523                           ;LedBlink.c: 94: RGB_R_OffTime = OffTime;
  4524  001588  C184  F0BC         	movff	SetLedBlink@OffTime,_RGB_R_OffTime
  4525  00158C  C185  F0BD         	movff	SetLedBlink@OffTime+1,_RGB_R_OffTime+1
  4526                           
  4527                           ;LedBlink.c: 95: RGB_R_StartAfter = StartAfter;
  4528  001590  C186  F0B8         	movff	SetLedBlink@StartAfter,_RGB_R_StartAfter
  4529  001594  C187  F0B9         	movff	SetLedBlink@StartAfter+1,_RGB_R_StartAfter+1
  4530                           
  4531                           ; BSR set to: 1
  4532                           ;LedBlink.c: 96: RGB_R_Enabled = ON;
  4533  001598  0E00               	movlw	0
  4534  00159A  0100               	movlb	0	; () banked
  4535  00159C  6FBB               	movwf	(_RGB_R_Enabled+1)& (0+255),b
  4536  00159E  0E01               	movlw	1
  4537  0015A0  6FBA               	movwf	_RGB_R_Enabled& (0+255),b
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;LedBlink.c: 97: RGB_R_BlinkCount = BlinkCount;
  4541  0015A2  C188  F00B         	movff	SetLedBlink@BlinkCount,_RGB_R_BlinkCount
  4542  0015A6  C189  F00C         	movff	SetLedBlink@BlinkCount+1,_RGB_R_BlinkCount+1
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;LedBlink.c: 98: RGB_R_BlinkCounter = BlinkCount;
  4546  0015AA  C188  F0B6         	movff	SetLedBlink@BlinkCount,_RGB_R_BlinkCounter
  4547  0015AE  C189  F0B7         	movff	SetLedBlink@BlinkCount+1,_RGB_R_BlinkCounter+1
  4548                           
  4549                           ;LedBlink.c: 99: RGB_R_Counter = 0;
  4550  0015B2  0E00               	movlw	0
  4551  0015B4  6E0E               	movwf	_RGB_R_Counter+1,c
  4552  0015B6  0E00               	movlw	0
  4553  0015B8  6E0D               	movwf	_RGB_R_Counter,c
  4554                           
  4555                           ;LedBlink.c: 100: RGB_R_State = UNIDENTIFIED;
  4556  0015BA  0E00               	movlw	0
  4557  0015BC  6E44               	movwf	_RGB_R_State+1,c
  4558  0015BE  0E03               	movlw	3
  4559  0015C0  6E43               	movwf	_RGB_R_State,c
  4560                           
  4561                           ;LedBlink.c: 101: } else if (ledIndex == RGB_G) {
  4562  0015C2  0012               	return	
  4563  0015C4                     l6440:
  4564                           
  4565                           ; BSR set to: 1
  4566  0015C4  0E04               	movlw	4
  4567  0015C6  1980               	xorwf	SetLedBlink@ledIndex& (0+255),w,b
  4568  0015C8  1181               	iorwf	(SetLedBlink@ledIndex+1)& (0+255),w,b
  4569  0015CA  A4D8               	btfss	status,2,c
  4570  0015CC  D022               	goto	l6450
  4571                           
  4572                           ; BSR set to: 1
  4573                           ;LedBlink.c: 102: RGB_G_OnTime = OnTime;
  4574  0015CE  C182  F0B4         	movff	SetLedBlink@OnTime,_RGB_G_OnTime
  4575  0015D2  C183  F0B5         	movff	SetLedBlink@OnTime+1,_RGB_G_OnTime+1
  4576                           
  4577                           ;LedBlink.c: 103: RGB_G_OffTime = OffTime;
  4578  0015D6  C184  F0B2         	movff	SetLedBlink@OffTime,_RGB_G_OffTime
  4579  0015DA  C185  F0B3         	movff	SetLedBlink@OffTime+1,_RGB_G_OffTime+1
  4580                           
  4581                           ;LedBlink.c: 104: RGB_G_StartAfter = StartAfter;
  4582  0015DE  C186  F0AE         	movff	SetLedBlink@StartAfter,_RGB_G_StartAfter
  4583  0015E2  C187  F0AF         	movff	SetLedBlink@StartAfter+1,_RGB_G_StartAfter+1
  4584                           
  4585                           ; BSR set to: 1
  4586                           ;LedBlink.c: 105: RGB_G_Enabled = ON;
  4587  0015E6  0E00               	movlw	0
  4588  0015E8  0100               	movlb	0	; () banked
  4589  0015EA  6FB1               	movwf	(_RGB_G_Enabled+1)& (0+255),b
  4590  0015EC  0E01               	movlw	1
  4591  0015EE  6FB0               	movwf	_RGB_G_Enabled& (0+255),b
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;LedBlink.c: 106: RGB_G_BlinkCount = BlinkCount;
  4595  0015F0  C188  F007         	movff	SetLedBlink@BlinkCount,_RGB_G_BlinkCount
  4596  0015F4  C189  F008         	movff	SetLedBlink@BlinkCount+1,_RGB_G_BlinkCount+1
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;LedBlink.c: 107: RGB_G_BlinkCounter = BlinkCount;
  4600  0015F8  C188  F0AC         	movff	SetLedBlink@BlinkCount,_RGB_G_BlinkCounter
  4601  0015FC  C189  F0AD         	movff	SetLedBlink@BlinkCount+1,_RGB_G_BlinkCounter+1
  4602                           
  4603                           ;LedBlink.c: 108: RGB_G_Counter = 0;
  4604  001600  0E00               	movlw	0
  4605  001602  6E0A               	movwf	_RGB_G_Counter+1,c
  4606  001604  0E00               	movlw	0
  4607  001606  6E09               	movwf	_RGB_G_Counter,c
  4608                           
  4609                           ;LedBlink.c: 109: RGB_G_State = UNIDENTIFIED;
  4610  001608  0E00               	movlw	0
  4611  00160A  6E42               	movwf	_RGB_G_State+1,c
  4612  00160C  0E03               	movlw	3
  4613  00160E  6E41               	movwf	_RGB_G_State,c
  4614                           
  4615                           ;LedBlink.c: 110: } else if (ledIndex == RGB_B) {
  4616  001610  0012               	return	
  4617  001612                     l6450:
  4618                           
  4619                           ; BSR set to: 1
  4620  001612  0E05               	movlw	5
  4621  001614  1980               	xorwf	SetLedBlink@ledIndex& (0+255),w,b
  4622  001616  1181               	iorwf	(SetLedBlink@ledIndex+1)& (0+255),w,b
  4623  001618  A4D8               	btfss	status,2,c
  4624  00161A  0012               	return	
  4625                           
  4626                           ; BSR set to: 1
  4627                           ;LedBlink.c: 111: RGB_B_OnTime = OnTime;
  4628  00161C  C182  F0AA         	movff	SetLedBlink@OnTime,_RGB_B_OnTime
  4629  001620  C183  F0AB         	movff	SetLedBlink@OnTime+1,_RGB_B_OnTime+1
  4630                           
  4631                           ;LedBlink.c: 112: RGB_B_OffTime = OffTime;
  4632  001624  C184  F0A8         	movff	SetLedBlink@OffTime,_RGB_B_OffTime
  4633  001628  C185  F0A9         	movff	SetLedBlink@OffTime+1,_RGB_B_OffTime+1
  4634                           
  4635                           ;LedBlink.c: 113: RGB_B_StartAfter = StartAfter;
  4636  00162C  C186  F0A4         	movff	SetLedBlink@StartAfter,_RGB_B_StartAfter
  4637  001630  C187  F0A5         	movff	SetLedBlink@StartAfter+1,_RGB_B_StartAfter+1
  4638                           
  4639                           ; BSR set to: 1
  4640                           ;LedBlink.c: 114: RGB_B_Enabled = ON;
  4641  001634  0E00               	movlw	0
  4642  001636  0100               	movlb	0	; () banked
  4643  001638  6FA7               	movwf	(_RGB_B_Enabled+1)& (0+255),b
  4644  00163A  0E01               	movlw	1
  4645  00163C  6FA6               	movwf	_RGB_B_Enabled& (0+255),b
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;LedBlink.c: 115: RGB_B_BlinkCount = BlinkCount;
  4649  00163E  C188  F003         	movff	SetLedBlink@BlinkCount,_RGB_B_BlinkCount
  4650  001642  C189  F004         	movff	SetLedBlink@BlinkCount+1,_RGB_B_BlinkCount+1
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;LedBlink.c: 116: RGB_B_BlinkCounter = BlinkCount;
  4654  001646  C188  F0A2         	movff	SetLedBlink@BlinkCount,_RGB_B_BlinkCounter
  4655  00164A  C189  F0A3         	movff	SetLedBlink@BlinkCount+1,_RGB_B_BlinkCounter+1
  4656                           
  4657                           ;LedBlink.c: 117: RGB_B_Counter = 0;
  4658  00164E  0E00               	movlw	0
  4659  001650  6E06               	movwf	_RGB_B_Counter+1,c
  4660  001652  0E00               	movlw	0
  4661  001654  6E05               	movwf	_RGB_B_Counter,c
  4662                           
  4663                           ;LedBlink.c: 118: RGB_B_State = UNIDENTIFIED;
  4664  001656  0E00               	movlw	0
  4665  001658  6E40               	movwf	_RGB_B_State+1,c
  4666  00165A  0E03               	movlw	3
  4667  00165C  6E3F               	movwf	_RGB_B_State,c
  4668  00165E  0012               	return	
  4669  001660                     __end_of_SetLedBlink:
  4670                           	opt callstack 0
  4671                           
  4672 ;; *************** function _EUSART1_is_tx_ready *****************
  4673 ;; Defined at:
  4674 ;;		line 130 in file "mcc_generated_files/eusart1.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      unsigned char 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4692 ;;Total ram usage:        0 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:   11
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_RunLoop
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text42
  4703  002C50                     __ptext42:
  4704                           	opt callstack 0
  4705  002C50                     _EUSART1_is_tx_ready:
  4706                           	opt callstack 18
  4707                           
  4708                           ;eusart1.c: 132: return eusart1TxBufferRemaining;
  4709                           
  4710                           ;incstack = 0
  4711  002C50  504B               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  4712  002C52  0012               	return		;funcret
  4713  002C54                     __end_of_EUSART1_is_tx_ready:
  4714                           	opt callstack 0
  4715                           
  4716 ;; *************** function _EUSART1_is_rx_ready *****************
  4717 ;; Defined at:
  4718 ;;		line 135 in file "mcc_generated_files/eusart1.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;		None
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;		None
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  1    wreg      unsigned char 
  4725 ;; Registers used:
  4726 ;;		wreg, status,2
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4736 ;;Total ram usage:        0 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; Hardware stack levels required when called:   11
  4739 ;; This function calls:
  4740 ;;		Nothing
  4741 ;; This function is called by:
  4742 ;;		_RunLoop
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746                           	psect	text43
  4747  002C54                     __ptext43:
  4748                           	opt callstack 0
  4749  002C54                     _EUSART1_is_rx_ready:
  4750                           	opt callstack 18
  4751                           
  4752                           ;eusart1.c: 137: return eusart1RxCount;
  4753                           
  4754                           ;incstack = 0
  4755  002C54  5024               	movf	_eusart1RxCount,w,c	;volatile
  4756  002C56  0012               	return		;funcret
  4757  002C58                     __end_of_EUSART1_is_rx_ready:
  4758                           	opt callstack 0
  4759                           
  4760 ;; *************** function _EUSART1_Write *****************
  4761 ;; Defined at:
  4762 ;;		line 171 in file "mcc_generated_files/eusart1.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  txData          1    wreg     unsigned char 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  txData          1    0[BANK1 ] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4777 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4779 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4780 ;;Total ram usage:        1 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:   11
  4783 ;; This function calls:
  4784 ;;		Nothing
  4785 ;; This function is called by:
  4786 ;;		_RunLoop
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text44
  4791  0025AE                     __ptext44:
  4792                           	opt callstack 0
  4793  0025AE                     _EUSART1_Write:
  4794                           	opt callstack 18
  4795                           
  4796                           ;incstack = 0
  4797                           ;EUSART1_Write@txData stored from wreg
  4798  0025AE  0101               	movlb	1	; () banked
  4799  0025B0  6F80               	movwf	EUSART1_Write@txData& (0+255),b
  4800  0025B2                     
  4801                           ;eusart1.c: 173: while(0 == eusart1TxBufferRemaining)
  4802  0025B2  504B               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  4803  0025B4  B4D8               	btfsc	status,2,c
  4804  0025B6  D7FD               	goto	l6382
  4805                           
  4806                           ;eusart1.c: 175: };eusart1.c: 177: if(0 == PIE3bits.TX1IE)
  4807  0025B8  010E               	movlb	14	; () banked
  4808  0025BA  B9C5               	btfsc	197,4,b	;volatile
  4809  0025BC  D003               	goto	l896
  4810                           
  4811                           ; BSR set to: 14
  4812                           ;eusart1.c: 178: {;eusart1.c: 179: TX1REG = txData;
  4813  0025BE  C180  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  4814                           
  4815                           ;eusart1.c: 180: }
  4816  0025C2  D010               	goto	l6398
  4817  0025C4                     l896:
  4818                           
  4819                           ; BSR set to: 14
  4820                           ;eusart1.c: 181: else;eusart1.c: 182: {;eusart1.c: 183: PIE3bits.TX1IE = 0;
  4821  0025C4  99C5               	bcf	197,4,b	;volatile
  4822                           
  4823                           ; BSR set to: 14
  4824                           ;eusart1.c: 184: eusart1TxBuffer[eusart1TxHead++] = txData;
  4825  0025C6  0E40               	movlw	low _eusart1TxBuffer
  4826  0025C8  2428               	addwf	_eusart1TxHead,w,c	;volatile
  4827  0025CA  6ED9               	movwf	fsr2l,c
  4828  0025CC  6ADA               	clrf	fsr2h,c
  4829  0025CE  0E01               	movlw	high _eusart1TxBuffer
  4830  0025D0  22DA               	addwfc	fsr2h,f,c
  4831  0025D2  C180  FFDF         	movff	EUSART1_Write@txData,indf2
  4832                           
  4833                           ; BSR set to: 14
  4834  0025D6  2A28               	incf	_eusart1TxHead,f,c	;volatile
  4835                           
  4836                           ; BSR set to: 14
  4837                           ;eusart1.c: 185: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  4838  0025D8  0E3F               	movlw	63
  4839  0025DA  6428               	cpfsgt	_eusart1TxHead,c	;volatile
  4840  0025DC  D002               	goto	l6396
  4841                           
  4842                           ; BSR set to: 14
  4843                           ;eusart1.c: 186: {;eusart1.c: 187: eusart1TxHead = 0;
  4844  0025DE  0E00               	movlw	0
  4845  0025E0  6E28               	movwf	_eusart1TxHead,c	;volatile
  4846  0025E2                     l6396:
  4847                           
  4848                           ; BSR set to: 14
  4849                           ;eusart1.c: 188: };eusart1.c: 189: eusart1TxBufferRemaining--;
  4850  0025E2  064B               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  4851  0025E4                     l6398:
  4852                           
  4853                           ; BSR set to: 14
  4854                           ;eusart1.c: 190: };eusart1.c: 191: PIE3bits.TX1IE = 1;
  4855  0025E4  89C5               	bsf	197,4,b	;volatile
  4856                           
  4857                           ; BSR set to: 14
  4858  0025E6  0012               	return		;funcret
  4859  0025E8                     __end_of_EUSART1_Write:
  4860                           	opt callstack 0
  4861                           
  4862 ;; *************** function _EUSART1_Read *****************
  4863 ;; Defined at:
  4864 ;;		line 149 in file "mcc_generated_files/eusart1.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  readValue       1    0[BANK1 ] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      unsigned char 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4882 ;;Total ram usage:        1 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:   11
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_RunLoop
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text45
  4893  0024AE                     __ptext45:
  4894                           	opt callstack 0
  4895  0024AE                     _EUSART1_Read:
  4896                           	opt callstack 18
  4897                           
  4898                           ;eusart1.c: 153: while(0 == eusart1RxCount)
  4899                           
  4900                           ; BSR set to: 14
  4901                           ;incstack = 0
  4902  0024AE  5024               	movf	_eusart1RxCount,w,c	;volatile
  4903  0024B0  B4D8               	btfsc	status,2,c
  4904  0024B2  D7FD               	goto	_EUSART1_Read
  4905                           
  4906                           ;eusart1.c: 155: };eusart1.c: 157: eusart1RxLastError = eusart1RxStatusBuffer[eusart1RxT
      +                          ail];
  4907  0024B4  0E60               	movlw	low _eusart1RxStatusBuffer
  4908  0024B6  2425               	addwf	_eusart1RxTail,w,c	;volatile
  4909  0024B8  6ED9               	movwf	fsr2l,c
  4910  0024BA  6ADA               	clrf	fsr2h,c
  4911  0024BC  0E00               	movlw	high _eusart1RxStatusBuffer
  4912  0024BE  22DA               	addwfc	fsr2h,f,c
  4913  0024C0  50DF               	movf	indf2,w,c
  4914  0024C2  6E23               	movwf	_eusart1RxLastError,c	;volatile
  4915                           
  4916                           ;eusart1.c: 159: readValue = eusart1RxBuffer[eusart1RxTail++];
  4917  0024C4  0E00               	movlw	low _eusart1RxBuffer
  4918  0024C6  2425               	addwf	_eusart1RxTail,w,c	;volatile
  4919  0024C8  6ED9               	movwf	fsr2l,c
  4920  0024CA  6ADA               	clrf	fsr2h,c
  4921  0024CC  0E01               	movlw	high _eusart1RxBuffer
  4922  0024CE  22DA               	addwfc	fsr2h,f,c
  4923  0024D0  50DF               	movf	indf2,w,c
  4924  0024D2  0101               	movlb	1	; () banked
  4925  0024D4  6F80               	movwf	EUSART1_Read@readValue& (0+255),b
  4926                           
  4927                           ; BSR set to: 1
  4928  0024D6  2A25               	incf	_eusart1RxTail,f,c	;volatile
  4929                           
  4930                           ; BSR set to: 1
  4931                           ;eusart1.c: 160: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  4932  0024D8  0E3F               	movlw	63
  4933  0024DA  6425               	cpfsgt	_eusart1RxTail,c	;volatile
  4934  0024DC  D002               	goto	l6372
  4935                           
  4936                           ; BSR set to: 1
  4937                           ;eusart1.c: 161: {;eusart1.c: 162: eusart1RxTail = 0;
  4938  0024DE  0E00               	movlw	0
  4939  0024E0  6E25               	movwf	_eusart1RxTail,c	;volatile
  4940  0024E2                     l6372:
  4941                           
  4942                           ; BSR set to: 1
  4943                           ;eusart1.c: 163: };eusart1.c: 164: PIE3bits.RC1IE = 0;
  4944  0024E2  010E               	movlb	14	; () banked
  4945  0024E4  9BC5               	bcf	197,5,b	;volatile
  4946                           
  4947                           ; BSR set to: 14
  4948                           ;eusart1.c: 165: eusart1RxCount--;
  4949  0024E6  0624               	decf	_eusart1RxCount,f,c	;volatile
  4950                           
  4951                           ; BSR set to: 14
  4952                           ;eusart1.c: 166: PIE3bits.RC1IE = 1;
  4953  0024E8  8BC5               	bsf	197,5,b	;volatile
  4954                           
  4955                           ; BSR set to: 14
  4956                           ;eusart1.c: 168: return readValue;
  4957  0024EA  0101               	movlb	1	; () banked
  4958  0024EC  5180               	movf	EUSART1_Read@readValue& (0+255),w,b
  4959                           
  4960                           ; BSR set to: 1
  4961  0024EE  0012               	return		;funcret
  4962  0024F0                     __end_of_EUSART1_Read:
  4963                           	opt callstack 0
  4964                           
  4965 ;; *************** function _MRF89XA_Initialize *****************
  4966 ;; Defined at:
  4967 ;;		line 17 in file "MRF89XA.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  Address         1    wreg     unsigned char 
  4970 ;;  Mode            1   16[BANK1 ] unsigned char 
  4971 ;;  Modulation      1   17[BANK1 ] unsigned char 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  Address         1   18[BANK1 ] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      void 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4983 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4986 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4987 ;;Total ram usage:        3 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:   16
  4990 ;; This function calls:
  4991 ;;		_MRF89XA_SetMode
  4992 ;;		_MRF89XA_SetModulation
  4993 ;;		_MRF89XA_WriteConfig
  4994 ;; This function is called by:
  4995 ;;		_main
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text46
  5000  001B62                     __ptext46:
  5001                           	opt callstack 0
  5002  001B62                     _MRF89XA_Initialize:
  5003                           	opt callstack 14
  5004                           
  5005                           ; BSR set to: 1
  5006                           ;incstack = 0
  5007                           ;MRF89XA_Initialize@Address stored from wreg
  5008  001B62  0101               	movlb	1	; () banked
  5009  001B64  6F92               	movwf	MRF89XA_Initialize@Address& (0+255),b
  5010                           
  5011                           ;MRF89XA.c: 18: MRF89XA_SetMode(Mode);
  5012  001B66  0101               	movlb	1	; () banked
  5013  001B68  5190               	movf	MRF89XA_Initialize@Mode& (0+255),w,b
  5014  001B6A  ECF4  F012         	call	_MRF89XA_SetMode
  5015                           
  5016                           ;MRF89XA.c: 20: MRF89XA_SetModulation(Modulation);
  5017  001B6E  0101               	movlb	1	; () banked
  5018  001B70  5191               	movf	MRF89XA_Initialize@Modulation& (0+255),w,b
  5019  001B72  EC55  F014         	call	_MRF89XA_SetModulation
  5020                           
  5021                           ;MRF89XA.c: 22: MRF89XA_WriteConfig(0x02,0x03);
  5022  001B76  0E03               	movlw	3
  5023  001B78  0101               	movlb	1	; () banked
  5024  001B7A  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5025  001B7C  0E02               	movlw	2
  5026  001B7E  EC02  F015         	call	_MRF89XA_WriteConfig
  5027                           
  5028                           ;MRF89XA.c: 23: MRF89XA_WriteConfig(0x03,0xC7);
  5029  001B82  0EC7               	movlw	199
  5030  001B84  0101               	movlb	1	; () banked
  5031  001B86  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5032  001B88  0E03               	movlw	3
  5033  001B8A  EC02  F015         	call	_MRF89XA_WriteConfig
  5034                           
  5035                           ;MRF89XA.c: 25: MRF89XA_WriteConfig(0x04, 0b00001100);
  5036  001B8E  0E0C               	movlw	12
  5037  001B90  0101               	movlb	1	; () banked
  5038  001B92  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5039  001B94  0E04               	movlw	4
  5040  001B96  EC02  F015         	call	_MRF89XA_WriteConfig
  5041                           
  5042                           ;MRF89XA.c: 26: MRF89XA_WriteConfig(0x05, 0b00000010);
  5043  001B9A  0E02               	movlw	2
  5044  001B9C  0101               	movlb	1	; () banked
  5045  001B9E  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5046  001BA0  0E05               	movlw	5
  5047  001BA2  EC02  F015         	call	_MRF89XA_WriteConfig
  5048                           
  5049                           ;MRF89XA.c: 27: MRF89XA_WriteConfig(0x0D,0b10111000);
  5050  001BA6  0EB8               	movlw	184
  5051  001BA8  0101               	movlb	1	; () banked
  5052  001BAA  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5053  001BAC  0E0D               	movlw	13
  5054  001BAE  EC02  F015         	call	_MRF89XA_WriteConfig
  5055                           
  5056                           ;MRF89XA.c: 28: MRF89XA_WriteConfig(0x0E, 0b00111010);
  5057  001BB2  0E3A               	movlw	58
  5058  001BB4  0101               	movlb	1	; () banked
  5059  001BB6  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5060  001BB8  0E0E               	movlw	14
  5061  001BBA  EC02  F015         	call	_MRF89XA_WriteConfig
  5062                           
  5063                           ;MRF89XA.c: 30: MRF89XA_WriteConfig(0x06, 0x7D);
  5064  001BBE  0E7D               	movlw	125
  5065  001BC0  0101               	movlb	1	; () banked
  5066  001BC2  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5067  001BC4  0E06               	movlw	6
  5068  001BC6  EC02  F015         	call	_MRF89XA_WriteConfig
  5069                           
  5070                           ;MRF89XA.c: 31: MRF89XA_WriteConfig(0x07, 0x64);
  5071  001BCA  0E64               	movlw	100
  5072  001BCC  0101               	movlb	1	; () banked
  5073  001BCE  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5074  001BD0  0E07               	movlw	7
  5075  001BD2  EC02  F015         	call	_MRF89XA_WriteConfig
  5076                           
  5077                           ;MRF89XA.c: 32: MRF89XA_WriteConfig(0x08, 0x14);
  5078  001BD6  0E14               	movlw	20
  5079  001BD8  0101               	movlb	1	; () banked
  5080  001BDA  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5081  001BDC  0E08               	movlw	8
  5082  001BDE  EC02  F015         	call	_MRF89XA_WriteConfig
  5083                           
  5084                           ;MRF89XA.c: 34: MRF89XA_WriteConfig(0x0C, 0b00100000);
  5085  001BE2  0E20               	movlw	32
  5086  001BE4  0101               	movlb	1	; () banked
  5087  001BE6  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5088  001BE8  0E0C               	movlw	12
  5089  001BEA  EC02  F015         	call	_MRF89XA_WriteConfig
  5090                           
  5091                           ;MRF89XA.c: 35: MRF89XA_WriteConfig(0x10, 0b10010011);
  5092  001BEE  0E93               	movlw	147
  5093  001BF0  0101               	movlb	1	; () banked
  5094  001BF2  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5095  001BF4  0E10               	movlw	16
  5096  001BF6  EC02  F015         	call	_MRF89XA_WriteConfig
  5097                           
  5098                           ;MRF89XA.c: 36: MRF89XA_WriteConfig(0x11, 0b00111000);
  5099  001BFA  0E38               	movlw	56
  5100  001BFC  0101               	movlb	1	; () banked
  5101  001BFE  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5102  001C00  0E11               	movlw	17
  5103  001C02  EC02  F015         	call	_MRF89XA_WriteConfig
  5104                           
  5105                           ;MRF89XA.c: 38: MRF89XA_WriteConfig(0x12,0b10000000);
  5106  001C06  0E80               	movlw	128
  5107  001C08  0101               	movlb	1	; () banked
  5108  001C0A  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5109  001C0C  0E12               	movlw	18
  5110  001C0E  EC02  F015         	call	_MRF89XA_WriteConfig
  5111                           
  5112                           ;MRF89XA.c: 39: MRF89XA_WriteConfig(0x19,0x55);
  5113  001C12  0E55               	movlw	85
  5114  001C14  0101               	movlb	1	; () banked
  5115  001C16  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5116  001C18  0E19               	movlw	25
  5117  001C1A  EC02  F015         	call	_MRF89XA_WriteConfig
  5118                           
  5119                           ;MRF89XA.c: 41: MRF89XA_WriteConfig(0x15, 0b00000000);
  5120  001C1E  0E00               	movlw	0
  5121  001C20  0101               	movlb	1	; () banked
  5122  001C22  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5123  001C24  0E15               	movlw	21
  5124  001C26  EC02  F015         	call	_MRF89XA_WriteConfig
  5125                           
  5126                           ;MRF89XA.c: 42: MRF89XA_WriteConfig(0x1A,0b01110010);
  5127  001C2A  0E72               	movlw	114
  5128  001C2C  0101               	movlb	1	; () banked
  5129  001C2E  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5130  001C30  0E1A               	movlw	26
  5131  001C32  EC02  F015         	call	_MRF89XA_WriteConfig
  5132                           
  5133                           ;MRF89XA.c: 44: MRF89XA_WriteConfig(0x1B,0b00111100);
  5134  001C36  0E3C               	movlw	60
  5135  001C38  0101               	movlb	1	; () banked
  5136  001C3A  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5137  001C3C  0E1B               	movlw	27
  5138  001C3E  EC02  F015         	call	_MRF89XA_WriteConfig
  5139                           
  5140                           ;MRF89XA.c: 45: MRF89XA_WriteConfig(0x1C,0b00000010);
  5141  001C42  0E02               	movlw	2
  5142  001C44  0101               	movlb	1	; () banked
  5143  001C46  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5144  001C48  0E1C               	movlw	28
  5145  001C4A  EC02  F015         	call	_MRF89XA_WriteConfig
  5146                           
  5147                           ;MRF89XA.c: 46: MRF89XA_WriteConfig(0x1D,Address);
  5148  001C4E  C192  F18C         	movff	MRF89XA_Initialize@Address,MRF89XA_WriteConfig@Data
  5149  001C52  0E1D               	movlw	29
  5150  001C54  EC02  F015         	call	_MRF89XA_WriteConfig
  5151                           
  5152                           ;MRF89XA.c: 47: MRF89XA_WriteConfig(0x1E,0b00100100);
  5153  001C58  0E24               	movlw	36
  5154  001C5A  0101               	movlb	1	; () banked
  5155  001C5C  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5156  001C5E  0E1E               	movlw	30
  5157  001C60  EC02  F015         	call	_MRF89XA_WriteConfig
  5158                           
  5159                           ;MRF89XA.c: 48: MRF89XA_WriteConfig(0x1F,0b00000000);
  5160  001C64  0E00               	movlw	0
  5161  001C66  0101               	movlb	1	; () banked
  5162  001C68  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5163  001C6A  0E1F               	movlw	31
  5164  001C6C  EC02  F015         	call	_MRF89XA_WriteConfig
  5165  001C70  0012               	return		;funcret
  5166  001C72                     __end_of_MRF89XA_Initialize:
  5167                           	opt callstack 0
  5168                           
  5169 ;; *************** function _MRF89XA_SetModulation *****************
  5170 ;; Defined at:
  5171 ;;		line 65 in file "MRF89XA.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  Modulation      1    wreg     unsigned char 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  Modulation      1   14[BANK1 ] unsigned char 
  5176 ;;  mask            1   15[BANK1 ] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5187 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5189 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5190 ;;Total ram usage:        2 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:   15
  5193 ;; This function calls:
  5194 ;;		_MRF89XA_WriteConfig
  5195 ;; This function is called by:
  5196 ;;		_MRF89XA_Initialize
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text47
  5201  0028AA                     __ptext47:
  5202                           	opt callstack 0
  5203  0028AA                     _MRF89XA_SetModulation:
  5204                           	opt callstack 14
  5205                           
  5206                           ;incstack = 0
  5207                           ;MRF89XA_SetModulation@Modulation stored from wreg
  5208  0028AA  0101               	movlb	1	; () banked
  5209  0028AC  6F8E               	movwf	MRF89XA_SetModulation@Modulation& (0+255),b
  5210                           
  5211                           ;MRF89XA.c: 67: if(Modulation == MRF89XA_MODULATION_FSK)
  5212  0028AE  0E04               	movlw	4
  5213  0028B0  0101               	movlb	1	; () banked
  5214  0028B2  198E               	xorwf	MRF89XA_SetModulation@Modulation& (0+255),w,b
  5215  0028B4  A4D8               	btfss	status,2,c
  5216  0028B6  D002               	goto	l6490
  5217                           
  5218                           ; BSR set to: 1
  5219                           ;MRF89XA.c: 68: mask = 0b10000000;
  5220  0028B8  0E80               	movlw	128
  5221  0028BA  D001               	goto	L1
  5222  0028BC                     l6490:
  5223                           
  5224                           ; BSR set to: 1
  5225                           ;MRF89XA.c: 69: else;MRF89XA.c: 70: mask = 0b01000000;
  5226  0028BC  0E40               	movlw	64
  5227  0028BE                     L1:
  5228  0028BE  6F8F               	movwf	MRF89XA_SetModulation@mask& (0+255),b
  5229                           
  5230                           ; BSR set to: 1
  5231                           ;MRF89XA.c: 72: MRF89XA_WriteConfig(0x01,0b00001100 | mask);
  5232  0028C0  518F               	movf	MRF89XA_SetModulation@mask& (0+255),w,b
  5233  0028C2  090C               	iorlw	12
  5234  0028C4  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5235  0028C6  0E01               	movlw	1
  5236  0028C8  EC02  F015         	call	_MRF89XA_WriteConfig
  5237  0028CC  0012               	return		;funcret
  5238  0028CE                     __end_of_MRF89XA_SetModulation:
  5239                           	opt callstack 0
  5240                           
  5241 ;; *************** function _MRF89XA_SetMode *****************
  5242 ;; Defined at:
  5243 ;;		line 51 in file "MRF89XA.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  Mode            1    wreg     unsigned char 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;  Mode            1   15[BANK1 ] unsigned char 
  5248 ;;  mask            1   14[BANK1 ] unsigned char 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg, status,2, status,0, cstack
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5259 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;Total ram usage:        2 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; Hardware stack levels required when called:   15
  5265 ;; This function calls:
  5266 ;;		_MRF89XA_WriteConfig
  5267 ;; This function is called by:
  5268 ;;		_MRF89XA_Initialize
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text48
  5273  0025E8                     __ptext48:
  5274                           	opt callstack 0
  5275  0025E8                     _MRF89XA_SetMode:
  5276                           	opt callstack 14
  5277                           
  5278                           ;incstack = 0
  5279                           ;MRF89XA_SetMode@Mode stored from wreg
  5280  0025E8  0101               	movlb	1	; () banked
  5281  0025EA  6F8F               	movwf	MRF89XA_SetMode@Mode& (0+255),b
  5282                           
  5283                           ;MRF89XA.c: 53: if(Mode == MRF89XA_MODE_TX)
  5284  0025EC  0101               	movlb	1	; () banked
  5285  0025EE  058F               	decf	MRF89XA_SetMode@Mode& (0+255),w,b
  5286  0025F0  A4D8               	btfss	status,2,c
  5287  0025F2  D002               	goto	l6472
  5288                           
  5289                           ; BSR set to: 1
  5290                           ;MRF89XA.c: 54: mask = 0b10000000;
  5291  0025F4  0E80               	movlw	128
  5292  0025F6  D00C               	goto	L2
  5293  0025F8                     l6472:
  5294                           
  5295                           ; BSR set to: 1
  5296                           ;MRF89XA.c: 55: else if(Mode == MRF89XA_MODE_RX)
  5297  0025F8  518F               	movf	MRF89XA_SetMode@Mode& (0+255),w,b
  5298  0025FA  A4D8               	btfss	status,2,c
  5299  0025FC  D002               	goto	l6476
  5300                           
  5301                           ; BSR set to: 1
  5302                           ;MRF89XA.c: 56: mask = 0b01100000;
  5303  0025FE  0E60               	movlw	96
  5304  002600  D007               	goto	L2
  5305  002602                     l6476:
  5306                           
  5307                           ; BSR set to: 1
  5308                           ;MRF89XA.c: 57: else if(Mode == MRF89XA_MODE_STANDBY)
  5309  002602  0E02               	movlw	2
  5310  002604  198F               	xorwf	MRF89XA_SetMode@Mode& (0+255),w,b
  5311  002606  A4D8               	btfss	status,2,c
  5312  002608  D002               	goto	l6480
  5313                           
  5314                           ; BSR set to: 1
  5315                           ;MRF89XA.c: 58: mask = 0b00100000;
  5316  00260A  0E20               	movlw	32
  5317  00260C  D001               	goto	L2
  5318  00260E                     l6480:
  5319                           
  5320                           ; BSR set to: 1
  5321                           ;MRF89XA.c: 59: else;MRF89XA.c: 60: mask = 0b00000000;
  5322  00260E  0E00               	movlw	0
  5323  002610                     L2:
  5324  002610  6F8E               	movwf	MRF89XA_SetMode@mask& (0+255),b
  5325                           
  5326                           ; BSR set to: 1
  5327                           ;MRF89XA.c: 62: MRF89XA_WriteConfig(0x00,0b00010000 | mask);
  5328  002612  518E               	movf	MRF89XA_SetMode@mask& (0+255),w,b
  5329  002614  0910               	iorlw	16
  5330  002616  6F8C               	movwf	MRF89XA_WriteConfig@Data& (0+255),b
  5331  002618  0E00               	movlw	0
  5332  00261A  EC02  F015         	call	_MRF89XA_WriteConfig
  5333  00261E  0012               	return		;funcret
  5334  002620                     __end_of_MRF89XA_SetMode:
  5335                           	opt callstack 0
  5336                           
  5337 ;; *************** function _MRF89XA_WriteConfig *****************
  5338 ;; Defined at:
  5339 ;;		line 99 in file "MRF89XA.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  Address         1    wreg     unsigned char 
  5342 ;;  Data            1   12[BANK1 ] unsigned char 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  Address         1   13[BANK1 ] unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      unsigned char 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5354 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5355 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;Total ram usage:        2 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:   14
  5361 ;; This function calls:
  5362 ;;		_MRF89XA_GetAddress
  5363 ;;		_MRF89XA_SendConfig
  5364 ;; This function is called by:
  5365 ;;		_MRF89XA_Initialize
  5366 ;;		_MRF89XA_SetMode
  5367 ;;		_MRF89XA_SetModulation
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text49
  5372  002A04                     __ptext49:
  5373                           	opt callstack 0
  5374  002A04                     _MRF89XA_WriteConfig:
  5375                           	opt callstack 15
  5376                           
  5377                           ;incstack = 0
  5378                           ;MRF89XA_WriteConfig@Address stored from wreg
  5379  002A04  0101               	movlb	1	; () banked
  5380  002A06  6F8D               	movwf	MRF89XA_WriteConfig@Address& (0+255),b
  5381                           
  5382                           ;MRF89XA.c: 100: return MRF89XA_SendConfig(MRF89XA_GetAddress(Address, 0), Data);;	Retur
      +                          n value of _MRF89XA_WriteConfig is never used
  5383  002A08  C18C  F189         	movff	MRF89XA_WriteConfig@Data,MRF89XA_SendConfig@Data
  5384  002A0C  0E00               	movlw	0
  5385  002A0E  0101               	movlb	1	; () banked
  5386  002A10  6F80               	movwf	MRF89XA_GetAddress@Read& (0+255),b
  5387  002A12  518D               	movf	MRF89XA_WriteConfig@Address& (0+255),w,b
  5388  002A14  ECF4  F014         	call	_MRF89XA_GetAddress
  5389  002A18  ECBF  F010         	call	_MRF89XA_SendConfig
  5390  002A1C  0012               	return		;funcret
  5391  002A1E                     __end_of_MRF89XA_WriteConfig:
  5392                           	opt callstack 0
  5393                           
  5394 ;; *************** function _MRF89XA_SendConfig *****************
  5395 ;; Defined at:
  5396 ;;		line 158 in file "MRF89XA.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;  Address         1    wreg     unsigned char 
  5399 ;;  Data            1    9[BANK1 ] unsigned char 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  Address         1   10[BANK1 ] unsigned char 
  5402 ;;  ret             1   11[BANK1 ] unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      unsigned char 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0, cstack
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5412 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5413 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5415 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5416 ;;Total ram usage:        3 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:   13
  5419 ;; This function calls:
  5420 ;;		_Delay_Xus
  5421 ;;		_MRF89XA_ExchangeByte
  5422 ;; This function is called by:
  5423 ;;		_MRF89XA_WriteConfig
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text50
  5428  00217E                     __ptext50:
  5429                           	opt callstack 0
  5430  00217E                     _MRF89XA_SendConfig:
  5431                           	opt callstack 15
  5432                           
  5433                           ;incstack = 0
  5434                           ;MRF89XA_SendConfig@Address stored from wreg
  5435  00217E  0101               	movlb	1	; () banked
  5436  002180  6F8A               	movwf	MRF89XA_SendConfig@Address& (0+255),b
  5437                           
  5438                           ;MRF89XA.c: 159: do { LATDbits.LATD3 = 1; } while(0);
  5439  002182  8686               	bsf	3974,3,c	;volatile
  5440                           
  5441                           ;MRF89XA.c: 160: do { LATDbits.LATD4 = 0; } while(0);
  5442  002184  9886               	bcf	3974,4,c	;volatile
  5443                           
  5444                           ;MRF89XA.c: 161: Delay_Xus(100);
  5445  002186  0E64               	movlw	100
  5446  002188  0101               	movlb	1	; () banked
  5447  00218A  6F80               	movwf	Delay_Xus@delay& (0+255),b
  5448  00218C  0E00               	movlw	0
  5449  00218E  6F81               	movwf	(Delay_Xus@delay+1)& (0+255),b
  5450  002190  0E00               	movlw	0
  5451  002192  6F82               	movwf	(Delay_Xus@delay+2)& (0+255),b
  5452  002194  0E00               	movlw	0
  5453  002196  6F83               	movwf	(Delay_Xus@delay+3)& (0+255),b
  5454  002198  EC34  F012         	call	_Delay_Xus	;wreg free
  5455                           
  5456                           ;MRF89XA.c: 162: MRF89XA_ExchangeByte(Address);
  5457  00219C  0101               	movlb	1	; () banked
  5458  00219E  518A               	movf	MRF89XA_SendConfig@Address& (0+255),w,b
  5459  0021A0  EC69  F015         	call	_MRF89XA_ExchangeByte
  5460                           
  5461                           ;MRF89XA.c: 163: Delay_Xus(100);
  5462  0021A4  0E64               	movlw	100
  5463  0021A6  0101               	movlb	1	; () banked
  5464  0021A8  6F80               	movwf	Delay_Xus@delay& (0+255),b
  5465  0021AA  0E00               	movlw	0
  5466  0021AC  6F81               	movwf	(Delay_Xus@delay+1)& (0+255),b
  5467  0021AE  0E00               	movlw	0
  5468  0021B0  6F82               	movwf	(Delay_Xus@delay+2)& (0+255),b
  5469  0021B2  0E00               	movlw	0
  5470  0021B4  6F83               	movwf	(Delay_Xus@delay+3)& (0+255),b
  5471  0021B6  EC34  F012         	call	_Delay_Xus	;wreg free
  5472                           
  5473                           ;MRF89XA.c: 164: unsigned char ret = MRF89XA_ExchangeByte(Data);
  5474  0021BA  0101               	movlb	1	; () banked
  5475  0021BC  5189               	movf	MRF89XA_SendConfig@Data& (0+255),w,b
  5476  0021BE  EC69  F015         	call	_MRF89XA_ExchangeByte
  5477  0021C2  0101               	movlb	1	; () banked
  5478  0021C4  6F8B               	movwf	MRF89XA_SendConfig@ret& (0+255),b
  5479                           
  5480                           ; BSR set to: 1
  5481                           ;MRF89XA.c: 165: Delay_Xus(100);
  5482  0021C6  0E64               	movlw	100
  5483  0021C8  6F80               	movwf	Delay_Xus@delay& (0+255),b
  5484  0021CA  0E00               	movlw	0
  5485  0021CC  6F81               	movwf	(Delay_Xus@delay+1)& (0+255),b
  5486  0021CE  0E00               	movlw	0
  5487  0021D0  6F82               	movwf	(Delay_Xus@delay+2)& (0+255),b
  5488  0021D2  0E00               	movlw	0
  5489  0021D4  6F83               	movwf	(Delay_Xus@delay+3)& (0+255),b
  5490  0021D6  EC34  F012         	call	_Delay_Xus	;wreg free
  5491  0021DA  8886               	bsf	3974,4,c	;volatile
  5492                           
  5493                           ;MRF89XA.c: 167: return ret;
  5494  0021DC  0101               	movlb	1	; () banked
  5495  0021DE  518B               	movf	MRF89XA_SendConfig@ret& (0+255),w,b
  5496                           
  5497                           ; BSR set to: 1
  5498  0021E0  0012               	return		;funcret
  5499  0021E2                     __end_of_MRF89XA_SendConfig:
  5500                           	opt callstack 0
  5501                           
  5502 ;; *************** function _MRF89XA_ExchangeByte *****************
  5503 ;; Defined at:
  5504 ;;		line 75 in file "MRF89XA.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  byte            1    wreg     unsigned char 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;  byte            1    1[BANK1 ] unsigned char 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  1    wreg      unsigned char 
  5511 ;; Registers used:
  5512 ;;		wreg, status,2, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5519 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5521 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5522 ;;Total ram usage:        1 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:   12
  5525 ;; This function calls:
  5526 ;;		_spi2_exchangeByte
  5527 ;; This function is called by:
  5528 ;;		_MRF89XA_SendConfig
  5529 ;;		_MRF89XA_ExchangeFifo
  5530 ;;		_MRF89XA_SendCommand
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text51
  5535  002AD2                     __ptext51:
  5536                           	opt callstack 0
  5537  002AD2                     _MRF89XA_ExchangeByte:
  5538                           	opt callstack 15
  5539                           
  5540                           ; BSR set to: 1
  5541                           ;incstack = 0
  5542                           ;MRF89XA_ExchangeByte@byte stored from wreg
  5543  002AD2  0101               	movlb	1	; () banked
  5544  002AD4  6F81               	movwf	MRF89XA_ExchangeByte@byte& (0+255),b
  5545                           
  5546                           ;MRF89XA.c: 76: return spi2_exchangeByte(byte);
  5547  002AD6  0101               	movlb	1	; () banked
  5548  002AD8  5181               	movf	MRF89XA_ExchangeByte@byte& (0+255),w,b
  5549  002ADA  EC0F  F015         	call	_spi2_exchangeByte
  5550  002ADE  0012               	return		;funcret
  5551  002AE0                     __end_of_MRF89XA_ExchangeByte:
  5552                           	opt callstack 0
  5553                           
  5554 ;; *************** function _spi2_exchangeByte *****************
  5555 ;; Defined at:
  5556 ;;		line 69 in file "mcc_generated_files/spi2_driver.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  b               1    wreg     unsigned char 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  b               1    0[BANK1 ] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      unsigned char 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5571 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5573 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5574 ;;Total ram usage:        1 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:   11
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_MRF89XA_ExchangeByte
  5581 ;;		_spi2_exchangeBlock
  5582 ;;		_spi2_writeBlock
  5583 ;;		_spi2_readBlock
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text52
  5588  002A1E                     __ptext52:
  5589                           	opt callstack 0
  5590  002A1E                     _spi2_exchangeByte:
  5591                           	opt callstack 0
  5592                           
  5593                           ;Skip over the trampoline to the duplicate function for level 2
  5594  002A1E  B24C               	btfsc	btemp,1,c
  5595  002A20  EF60  F015         	goto	i2_spi2_exchangeByte
  5596  002A24                     _spi2_exchangeByte$intlevel0:
  5597                           	opt callstack 15
  5598                           
  5599                           ;incstack = 0
  5600                           ;spi2_exchangeByte@b stored from wreg
  5601  002A24  0101               	movlb	1	; () banked
  5602  002A26  6F80               	movwf	spi2_exchangeByte@b& (0+255),b
  5603                           
  5604                           ;spi2_driver.c: 71: SSP2BUF = b;
  5605  002A28  C180  FE92         	movff	spi2_exchangeByte@b,3730	;volatile
  5606  002A2C                     l1097:
  5607  002A2C  010E               	movlb	14	; () banked
  5608  002A2E  A5CD               	btfss	205,2,b	;volatile
  5609  002A30  D7FD               	goto	l1097
  5610                           
  5611                           ; BSR set to: 14
  5612                           ;spi2_driver.c: 73: PIR3bits.SSP2IF = 0;
  5613  002A32  95CD               	bcf	205,2,b	;volatile
  5614                           
  5615                           ;spi2_driver.c: 74: return SSP2BUF;
  5616  002A34  5192               	movf	146,w,b	;volatile
  5617                           
  5618                           ; BSR set to: 14
  5619  002A36  0012               	return		;funcret
  5620  002A38                     __end_of_spi2_exchangeByte:
  5621                           	opt callstack 0
  5622                           
  5623 ;; *************** function _Delay_Xus *****************
  5624 ;; Defined at:
  5625 ;;		line 27 in file "main.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  delay           4    0[BANK1 ] long 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  i               4    5[BANK1 ] long 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      void 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5639 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5640 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5641 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5642 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5643 ;;Total ram usage:        9 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:   11
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_MRF89XA_SendConfig
  5650 ;;		_MRF89XA_SendCommand
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text53
  5655  002468                     __ptext53:
  5656                           	opt callstack 0
  5657  002468                     _Delay_Xus:
  5658                           	opt callstack 16
  5659                           
  5660                           ;main.c: 28: for(long i = 0; i < delay; i++) {
  5661                           
  5662                           ; BSR set to: 14
  5663                           ;incstack = 0
  5664  002468  0E00               	movlw	0
  5665  00246A  0101               	movlb	1	; () banked
  5666  00246C  6F85               	movwf	Delay_Xus@i& (0+255),b
  5667  00246E  0E00               	movlw	0
  5668  002470  6F86               	movwf	(Delay_Xus@i+1)& (0+255),b
  5669  002472  0E00               	movlw	0
  5670  002474  6F87               	movwf	(Delay_Xus@i+2)& (0+255),b
  5671  002476  0E00               	movlw	0
  5672  002478  6F88               	movwf	(Delay_Xus@i+3)& (0+255),b
  5673  00247A  D00A               	goto	l1283
  5674  00247C                     l1284:
  5675                           
  5676                           ; BSR set to: 1
  5677                           ;main.c: 29: _delay((unsigned long)((1)*(24000000/4000000.0)));
  5678  00247C  D000               	nop2		;2 cycle nop
  5679  00247E  D000               	nop2		;2 cycle nop
  5680  002480  D000               	nop2		;2 cycle nop
  5681  002482  0E01               	movlw	1
  5682  002484  0101               	movlb	1	; () banked
  5683  002486  2785               	addwf	Delay_Xus@i& (0+255),f,b
  5684  002488  0E00               	movlw	0
  5685  00248A  2386               	addwfc	(Delay_Xus@i+1)& (0+255),f,b
  5686  00248C  2387               	addwfc	(Delay_Xus@i+2)& (0+255),f,b
  5687  00248E  2388               	addwfc	(Delay_Xus@i+3)& (0+255),f,b
  5688  002490                     l1283:
  5689                           
  5690                           ; BSR set to: 1
  5691  002490  5180               	movf	Delay_Xus@delay& (0+255),w,b
  5692  002492  5D85               	subwf	Delay_Xus@i& (0+255),w,b
  5693  002494  5181               	movf	(Delay_Xus@delay+1)& (0+255),w,b
  5694  002496  5986               	subwfb	(Delay_Xus@i+1)& (0+255),w,b
  5695  002498  5182               	movf	(Delay_Xus@delay+2)& (0+255),w,b
  5696  00249A  5987               	subwfb	(Delay_Xus@i+2)& (0+255),w,b
  5697  00249C  5188               	movf	(Delay_Xus@i+3)& (0+255),w,b
  5698  00249E  0A80               	xorlw	128
  5699  0024A0  6F84               	movwf	??_Delay_Xus& (0+255),b
  5700  0024A2  5183               	movf	(Delay_Xus@delay+3)& (0+255),w,b
  5701  0024A4  0A80               	xorlw	128
  5702  0024A6  5984               	subwfb	??_Delay_Xus& (0+255),w,b
  5703  0024A8  B0D8               	btfsc	status,0,c
  5704  0024AA  0012               	return	
  5705  0024AC  D7E7               	goto	l1284
  5706  0024AE                     __end_of_Delay_Xus:
  5707                           	opt callstack 0
  5708                           
  5709 ;; *************** function _MRF89XA_GetAddress *****************
  5710 ;; Defined at:
  5711 ;;		line 148 in file "MRF89XA.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  Address         1    wreg     unsigned char 
  5714 ;;  Read            1    0[BANK1 ] unsigned char 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;  Address         1    1[BANK1 ] unsigned char 
  5717 ;;  ret             1    2[BANK1 ] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      unsigned char 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5727 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5728 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5730 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5731 ;;Total ram usage:        3 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:   11
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_MRF89XA_WriteConfig
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text54
  5742  0029E8                     __ptext54:
  5743                           	opt callstack 0
  5744  0029E8                     _MRF89XA_GetAddress:
  5745                           	opt callstack 17
  5746                           
  5747                           ; BSR set to: 1
  5748                           ;incstack = 0
  5749                           ;MRF89XA_GetAddress@Address stored from wreg
  5750  0029E8  0101               	movlb	1	; () banked
  5751  0029EA  6F81               	movwf	MRF89XA_GetAddress@Address& (0+255),b
  5752                           
  5753                           ;MRF89XA.c: 149: unsigned char ret = Address << 1;
  5754  0029EC  0101               	movlb	1	; () banked
  5755  0029EE  5181               	movf	MRF89XA_GetAddress@Address& (0+255),w,b
  5756  0029F0  2581               	addwf	MRF89XA_GetAddress@Address& (0+255),w,b
  5757  0029F2  6F82               	movwf	MRF89XA_GetAddress@ret& (0+255),b
  5758                           
  5759                           ; BSR set to: 1
  5760                           ;MRF89XA.c: 150: if(Read != 0) {
  5761  0029F4  5180               	movf	MRF89XA_GetAddress@Read& (0+255),w,b
  5762  0029F6  B4D8               	btfsc	status,2,c
  5763  0029F8  D003               	goto	l6066
  5764                           
  5765                           ; BSR set to: 1
  5766                           ;MRF89XA.c: 151: ret = ret | 0b01000000;
  5767  0029FA  5182               	movf	MRF89XA_GetAddress@ret& (0+255),w,b
  5768  0029FC  0940               	iorlw	64
  5769  0029FE  6F82               	movwf	MRF89XA_GetAddress@ret& (0+255),b
  5770  002A00                     l6066:
  5771                           
  5772                           ; BSR set to: 1
  5773                           ;MRF89XA.c: 154: };MRF89XA.c: 155: return ret;
  5774  002A00  5182               	movf	MRF89XA_GetAddress@ret& (0+255),w,b
  5775                           
  5776                           ; BSR set to: 1
  5777  002A02  0012               	return		;funcret
  5778  002A04                     __end_of_MRF89XA_GetAddress:
  5779                           	opt callstack 0
  5780                           
  5781 ;; *************** function _Delay_Xms *****************
  5782 ;; Defined at:
  5783 ;;		line 21 in file "main.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  delay           4    0[BANK1 ] long 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  i               4    5[BANK1 ] long 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      void 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5797 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5799 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5800 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5801 ;;Total ram usage:        9 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:   11
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_main
  5808 ;;		_IRQ0_ISR
  5809 ;;		_I2C_SendCommand_L
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           	psect	text55
  5814  002338                     __ptext55:
  5815                           	opt callstack 0
  5816  002338                     _Delay_Xms:
  5817                           	opt callstack 19
  5818                           
  5819                           ;main.c: 22: for(long i = 0; i < delay; i++) {
  5820                           
  5821                           ; BSR set to: 1
  5822                           ;incstack = 0
  5823  002338  0E00               	movlw	0
  5824  00233A  0101               	movlb	1	; () banked
  5825  00233C  6F85               	movwf	Delay_Xms@i& (0+255),b
  5826  00233E  0E00               	movlw	0
  5827  002340  6F86               	movwf	(Delay_Xms@i+1)& (0+255),b
  5828  002342  0E00               	movlw	0
  5829  002344  6F87               	movwf	(Delay_Xms@i+2)& (0+255),b
  5830  002346  0E00               	movlw	0
  5831  002348  6F88               	movwf	(Delay_Xms@i+3)& (0+255),b
  5832  00234A  D010               	goto	l6528
  5833  00234C                     l6524:
  5834                           
  5835                           ; BSR set to: 1
  5836                           ;main.c: 23: _delay((unsigned long)((1)*(24000000/4000.0)));
  5837  00234C  0E08               	movlw	8
  5838  00234E  0101               	movlb	1	; () banked
  5839  002350  6F84               	movwf	??_Delay_Xms& (0+255),b
  5840  002352  0EC9               	movlw	201
  5841  002354                     u6057:
  5842  002354  2EE8               	decfsz	wreg,f,c
  5843  002356  D7FE               	bra	u6057
  5844  002358  2F84               	decfsz	??_Delay_Xms& (0+255),f,b
  5845  00235A  D7FC               	bra	u6057
  5846  00235C  D000               	nop2	
  5847  00235E  0E01               	movlw	1
  5848  002360  0101               	movlb	1	; () banked
  5849  002362  2785               	addwf	Delay_Xms@i& (0+255),f,b
  5850  002364  0E00               	movlw	0
  5851  002366  2386               	addwfc	(Delay_Xms@i+1)& (0+255),f,b
  5852  002368  2387               	addwfc	(Delay_Xms@i+2)& (0+255),f,b
  5853  00236A  2388               	addwfc	(Delay_Xms@i+3)& (0+255),f,b
  5854  00236C                     l6528:
  5855                           
  5856                           ; BSR set to: 1
  5857  00236C  5180               	movf	Delay_Xms@delay& (0+255),w,b
  5858  00236E  5D85               	subwf	Delay_Xms@i& (0+255),w,b
  5859  002370  5181               	movf	(Delay_Xms@delay+1)& (0+255),w,b
  5860  002372  5986               	subwfb	(Delay_Xms@i+1)& (0+255),w,b
  5861  002374  5182               	movf	(Delay_Xms@delay+2)& (0+255),w,b
  5862  002376  5987               	subwfb	(Delay_Xms@i+2)& (0+255),w,b
  5863  002378  5188               	movf	(Delay_Xms@i+3)& (0+255),w,b
  5864  00237A  0A80               	xorlw	128
  5865  00237C  6F84               	movwf	??_Delay_Xms& (0+255),b
  5866  00237E  5183               	movf	(Delay_Xms@delay+3)& (0+255),w,b
  5867  002380  0A80               	xorlw	128
  5868  002382  5984               	subwfb	??_Delay_Xms& (0+255),w,b
  5869  002384  B0D8               	btfsc	status,0,c
  5870  002386  0012               	return	
  5871  002388  D7E1               	goto	l6524
  5872  00238A                     __end_of_Delay_Xms:
  5873                           	opt callstack 0
  5874                           
  5875 ;; *************** function _INTERRUPT_InterruptManager *****************
  5876 ;; Defined at:
  5877 ;;		line 59 in file "mcc_generated_files/interrupt_manager.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;		None
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;		None
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;Total ram usage:        4 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:   10
  5898 ;; This function calls:
  5899 ;;		Absolute function
  5900 ;;		_EUSART1_Receive_ISR
  5901 ;;		_EUSART1_Transmit_ISR
  5902 ;;		_I2C_BusCollisionISR
  5903 ;;		_INT0_ISR
  5904 ;;		_INT1_ISR
  5905 ;;		_INT2_ISR
  5906 ;;		_PIN_MANAGER_IOC
  5907 ;;		_TMR2_ISR
  5908 ;;		_TMR4_ISR
  5909 ;;		_spi2_isr
  5910 ;; This function is called by:
  5911 ;;		Interrupt level 2
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	intcode
  5916  000008                     __pintcode:
  5917                           	opt callstack 0
  5918  000008                     _INTERRUPT_InterruptManager:
  5919                           	opt callstack 14
  5920                           
  5921                           ; BSR set to: 1
  5922                           ;incstack = 0
  5923  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5924  00000A  CFFA F03B          	movff	pclath,??_INTERRUPT_InterruptManager
  5925  00000E  CFFB F03C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5926  000012  CFD9 F03D          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5927  000016  CFDA F03E          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5928                           
  5929                           ;interrupt_manager.c: 62: if(PIE0bits.INT0IE == 1 && PIR0bits.INT0IF == 1)
  5930  00001A  010E               	movlb	14	; () banked
  5931  00001C  B1C2               	btfsc	194,0,b	;volatile
  5932                           
  5933                           ; BSR set to: 14
  5934  00001E  A1CA               	btfss	202,0,b	;volatile
  5935  000020  D003               	goto	i2l222
  5936                           
  5937                           ; BSR set to: 14
  5938                           ;interrupt_manager.c: 63: {;interrupt_manager.c: 64: INT0_ISR();
  5939  000022  EC0B  F016         	call	_INT0_ISR	;wreg free
  5940                           
  5941                           ;interrupt_manager.c: 65: }
  5942  000026  D046               	goto	i2l238
  5943  000028                     i2l222:
  5944                           
  5945                           ; BSR set to: 14
  5946                           ;interrupt_manager.c: 66: else if(PIE0bits.INT1IE == 1 && PIR0bits.INT1IF == 1)
  5947  000028  B3C2               	btfsc	194,1,b	;volatile
  5948                           
  5949                           ; BSR set to: 14
  5950  00002A  A3CA               	btfss	202,1,b	;volatile
  5951  00002C  D003               	goto	i2l224
  5952                           
  5953                           ; BSR set to: 14
  5954                           ;interrupt_manager.c: 67: {;interrupt_manager.c: 68: INT1_ISR();
  5955  00002E  EC06  F016         	call	_INT1_ISR	;wreg free
  5956                           
  5957                           ;interrupt_manager.c: 69: }
  5958  000032  D040               	goto	i2l238
  5959  000034                     i2l224:
  5960                           
  5961                           ; BSR set to: 14
  5962                           ;interrupt_manager.c: 70: else if(PIE0bits.INT2IE == 1 && PIR0bits.INT2IF == 1)
  5963  000034  B5C2               	btfsc	194,2,b	;volatile
  5964                           
  5965                           ; BSR set to: 14
  5966  000036  A5CA               	btfss	202,2,b	;volatile
  5967  000038  D003               	goto	i2l226
  5968                           
  5969                           ; BSR set to: 14
  5970                           ;interrupt_manager.c: 71: {;interrupt_manager.c: 72: INT2_ISR();
  5971  00003A  EC01  F016         	call	_INT2_ISR	;wreg free
  5972                           
  5973                           ;interrupt_manager.c: 73: }
  5974  00003E  D03A               	goto	i2l238
  5975  000040                     i2l226:
  5976                           
  5977                           ; BSR set to: 14
  5978                           ;interrupt_manager.c: 74: else if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
  5979  000040  B9C2               	btfsc	194,4,b	;volatile
  5980                           
  5981                           ; BSR set to: 14
  5982  000042  A9CA               	btfss	202,4,b	;volatile
  5983  000044  D003               	goto	i2l228
  5984                           
  5985                           ; BSR set to: 14
  5986                           ;interrupt_manager.c: 75: {;interrupt_manager.c: 76: PIN_MANAGER_IOC();
  5987  000046  EC72  F011         	call	_PIN_MANAGER_IOC	;wreg free
  5988                           
  5989                           ;interrupt_manager.c: 77: }
  5990  00004A  D034               	goto	i2l238
  5991  00004C                     i2l228:
  5992                           
  5993                           ; BSR set to: 14
  5994                           ;interrupt_manager.c: 78: else if(INTCONbits.PEIE == 1)
  5995  00004C  ACF2               	btfss	4082,6,c	;volatile
  5996  00004E  D032               	goto	i2l238
  5997                           
  5998                           ; BSR set to: 14
  5999                           ;interrupt_manager.c: 79: {;interrupt_manager.c: 80: if(PIE3bits.BCL1IE == 1 && PIR3bits
      +                          .BCL1IF == 1)
  6000  000050  B3C5               	btfsc	197,1,b	;volatile
  6001                           
  6002                           ; BSR set to: 14
  6003  000052  A3CD               	btfss	205,1,b	;volatile
  6004  000054  D003               	goto	i2l231
  6005                           
  6006                           ; BSR set to: 14
  6007                           ;interrupt_manager.c: 81: {;interrupt_manager.c: 82: I2C_BusCollisionISR();
  6008  000056  EC1D  F016         	call	_I2C_BusCollisionISR	;wreg free
  6009                           
  6010                           ;interrupt_manager.c: 83: }
  6011  00005A  D02C               	goto	i2l238
  6012  00005C                     i2l231:
  6013                           
  6014                           ; BSR set to: 14
  6015                           ;interrupt_manager.c: 84: else if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  6016  00005C  B9C5               	btfsc	197,4,b	;volatile
  6017                           
  6018                           ; BSR set to: 14
  6019  00005E  A9CD               	btfss	205,4,b	;volatile
  6020  000060  D009               	goto	i2l233
  6021                           
  6022                           ; BSR set to: 14
  6023                           ;interrupt_manager.c: 85: {;interrupt_manager.c: 86: EUSART1_TxDefaultInterruptHandler()
      +                          ;
  6024  000062  D801               	call	i2u496_48
  6025  000064  D027               	goto	i2l238
  6026  000066                     i2u496_48:
  6027  000066  0005               	push	
  6028  000068  6EFA               	movwf	pclath,c
  6029  00006A  0100               	movlb	0	; () banked
  6030  00006C  51F6               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  6031  00006E  6EFD               	movwf	tosl,c
  6032  000070  51F7               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  6033  000072  D00B               	goto	L3
  6034  000074                     i2l233:
  6035                           
  6036                           ; BSR set to: 14
  6037                           ;interrupt_manager.c: 88: else if(PIE3bits.RC1IE == 1 && PIR3bits.RC1IF == 1)
  6038  000074  BBC5               	btfsc	197,5,b	;volatile
  6039                           
  6040                           ; BSR set to: 14
  6041  000076  ABCD               	btfss	205,5,b	;volatile
  6042  000078  D00C               	goto	i2l235
  6043                           
  6044                           ; BSR set to: 14
  6045                           ;interrupt_manager.c: 89: {;interrupt_manager.c: 90: EUSART1_RxDefaultInterruptHandler()
      +                          ;
  6046  00007A  D801               	call	i2u499_48
  6047  00007C  D01B               	goto	i2l238
  6048  00007E                     i2u499_48:
  6049  00007E  0005               	push	
  6050  000080  6EFA               	movwf	pclath,c
  6051  000082  0100               	movlb	0	; () banked
  6052  000084  51F4               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  6053  000086  6EFD               	movwf	tosl,c
  6054  000088  51F5               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  6055  00008A                     L3:
  6056  00008A  6EFE               	movwf	tosh,c
  6057  00008C  6AFF               	clrf	tosu,c
  6058  00008E  50FA               	movf	pclath,w,c
  6059  000090  0012               	return		;indir
  6060  000092                     i2l235:
  6061                           
  6062                           ; BSR set to: 14
  6063                           ;interrupt_manager.c: 93: else if(PIE3bits.SSP2IE == 1 && PIR3bits.SSP2IF == 1)
  6064  000092  B5C5               	btfsc	197,2,b	;volatile
  6065                           
  6066                           ; BSR set to: 14
  6067  000094  A5CD               	btfss	205,2,b	;volatile
  6068  000096  D003               	goto	i2l237
  6069                           
  6070                           ; BSR set to: 14
  6071                           ;interrupt_manager.c: 94: {;interrupt_manager.c: 95: spi2_isr();
  6072  000098  ECF7  F015         	call	_spi2_isr	;wreg free
  6073                           
  6074                           ;interrupt_manager.c: 96: }
  6075  00009C  D00B               	goto	i2l238
  6076  00009E                     i2l237:
  6077                           
  6078                           ; BSR set to: 14
  6079                           ;interrupt_manager.c: 97: else if(PIE4bits.TMR4IE == 1 && PIR4bits.TMR4IF == 1)
  6080  00009E  B7C6               	btfsc	198,3,b	;volatile
  6081                           
  6082                           ; BSR set to: 14
  6083  0000A0  A7CE               	btfss	206,3,b	;volatile
  6084  0000A2  D003               	goto	i2l239
  6085                           
  6086                           ; BSR set to: 14
  6087                           ;interrupt_manager.c: 98: {;interrupt_manager.c: 99: TMR4_ISR();
  6088  0000A4  EC67  F014         	call	_TMR4_ISR	;wreg free
  6089                           
  6090                           ;interrupt_manager.c: 100: }
  6091  0000A8  D005               	goto	i2l238
  6092  0000AA                     i2l239:
  6093                           
  6094                           ; BSR set to: 14
  6095                           ;interrupt_manager.c: 101: else if(PIE4bits.TMR2IE == 1 && PIR4bits.TMR2IF == 1)
  6096  0000AA  B3C6               	btfsc	198,1,b	;volatile
  6097                           
  6098                           ; BSR set to: 14
  6099  0000AC  A3CE               	btfss	206,1,b	;volatile
  6100  0000AE  D002               	goto	i2l238
  6101                           
  6102                           ; BSR set to: 14
  6103                           ;interrupt_manager.c: 102: {;interrupt_manager.c: 103: TMR2_ISR();
  6104  0000B0  ECFC  F015         	call	_TMR2_ISR	;wreg free
  6105  0000B4                     i2l238:
  6106                           
  6107                           ; BSR set to: 14
  6108  0000B4  C03E  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6109  0000B8  C03D  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6110  0000BC  C03C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6111  0000C0  C03B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6112  0000C4  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6113  0000C6  0011               	retfie		f
  6114  0000C8                     __end_of_INTERRUPT_InterruptManager:
  6115                           	opt callstack 0
  6116                           
  6117 ;; *************** function _spi2_isr *****************
  6118 ;; Defined at:
  6119 ;;		line 118 in file "mcc_generated_files/spi2_driver.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;		None
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;		None
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      void 
  6126 ;; Registers used:
  6127 ;;		None
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6137 ;;Total ram usage:        0 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_INTERRUPT_InterruptManager
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text57
  6147  002BEE                     __ptext57:
  6148                           	opt callstack 0
  6149  002BEE                     _spi2_isr:
  6150                           	opt callstack 23
  6151                           
  6152                           ;spi2_driver.c: 119: if(PIR3bits.SSP2IF == 1){
  6153                           
  6154                           ;incstack = 0
  6155  002BEE  010E               	movlb	14	; () banked
  6156  002BF0  A5CD               	btfss	205,2,b	;volatile
  6157  002BF2  0012               	return	
  6158                           
  6159                           ; BSR set to: 14
  6160                           ;spi2_driver.c: 122: };spi2_driver.c: 123: PIR3bits.SSP2IF = 0;
  6161  002BF4  95CD               	bcf	205,2,b	;volatile
  6162                           
  6163                           ; BSR set to: 14
  6164  002BF6  0012               	return		;funcret
  6165  002BF8                     __end_of_spi2_isr:
  6166                           	opt callstack 0
  6167                           
  6168 ;; *************** function _TMR4_ISR *****************
  6169 ;; Defined at:
  6170 ;;		line 165 in file "mcc_generated_files/tmr4.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;		None
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      void 
  6177 ;; Registers used:
  6178 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6188 ;;Total ram usage:        0 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    2
  6191 ;; This function calls:
  6192 ;;		_TMR4_CallBack
  6193 ;; This function is called by:
  6194 ;;		_INTERRUPT_InterruptManager
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text58
  6199  0028CE                     __ptext58:
  6200                           	opt callstack 0
  6201  0028CE                     _TMR4_ISR:
  6202                           	opt callstack 21
  6203                           
  6204                           ;tmr4.c: 167: static volatile unsigned int CountCallBack = 0;;tmr4.c: 170: PIR4bits.TMR4
      +                          IF = 0;
  6205                           
  6206                           ; BSR set to: 14
  6207                           ;incstack = 0
  6208  0028CE  010E               	movlb	14	; () banked
  6209  0028D0  97CE               	bcf	206,3,b	;volatile
  6210                           
  6211                           ; BSR set to: 14
  6212                           ;tmr4.c: 173: if (++CountCallBack >= 10)
  6213  0028D2  4A01               	infsnz	TMR4_ISR@CountCallBack,f,c	;volatile
  6214  0028D4  2A02               	incf	TMR4_ISR@CountCallBack+1,f,c	;volatile
  6215  0028D6  5002               	movf	TMR4_ISR@CountCallBack+1,w,c	;volatile
  6216  0028D8  E104               	bnz	i2u469_40
  6217  0028DA  0E0A               	movlw	10
  6218  0028DC  5C01               	subwf	TMR4_ISR@CountCallBack,w,c	;volatile
  6219  0028DE  A0D8               	btfss	status,0,c
  6220  0028E0  0012               	return	
  6221  0028E2                     i2u469_40:
  6222                           
  6223                           ; BSR set to: 14
  6224                           ;tmr4.c: 174: {;tmr4.c: 176: TMR4_CallBack();
  6225  0028E2  EC78  F014         	call	_TMR4_CallBack	;wreg free
  6226                           
  6227                           ;tmr4.c: 179: CountCallBack = 0;
  6228  0028E6  0E00               	movlw	0
  6229  0028E8  6E02               	movwf	TMR4_ISR@CountCallBack+1,c	;volatile
  6230  0028EA  0E00               	movlw	0
  6231  0028EC  6E01               	movwf	TMR4_ISR@CountCallBack,c	;volatile
  6232  0028EE  0012               	return		;funcret
  6233  0028F0                     __end_of_TMR4_ISR:
  6234                           	opt callstack 0
  6235                           
  6236 ;; *************** function _TMR4_CallBack *****************
  6237 ;; Defined at:
  6238 ;;		line 183 in file "mcc_generated_files/tmr4.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;		None
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;		None
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;Total ram usage:        0 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    1
  6259 ;; This function calls:
  6260 ;;		Absolute function
  6261 ;;		_TMR4_DefaultInterruptHandler
  6262 ;; This function is called by:
  6263 ;;		_TMR4_ISR
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text59
  6268  0028F0                     __ptext59:
  6269                           	opt callstack 0
  6270  0028F0                     _TMR4_CallBack:
  6271                           	opt callstack 21
  6272                           
  6273                           ;tmr4.c: 187: if(TMR4_InterruptHandler)
  6274                           
  6275                           ;incstack = 0
  6276  0028F0  0100               	movlb	0	; () banked
  6277  0028F2  51D8               	movf	_TMR4_InterruptHandler& (0+255),w,b
  6278  0028F4  11D9               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  6279  0028F6  B4D8               	btfsc	status,2,c
  6280  0028F8  0012               	return	
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;tmr4.c: 188: {;tmr4.c: 189: TMR4_InterruptHandler();
  6284  0028FA  D801               	call	i2u447_48
  6285  0028FC  0012               	return	
  6286  0028FE                     i2u447_48:
  6287  0028FE  0005               	push	
  6288  002900  6EFA               	movwf	pclath,c
  6289  002902  51D8               	movf	_TMR4_InterruptHandler& (0+255),w,b
  6290  002904  6EFD               	movwf	tosl,c
  6291  002906  51D9               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  6292  002908  6EFE               	movwf	tosh,c
  6293  00290A  6AFF               	clrf	tosu,c
  6294  00290C  50FA               	movf	pclath,w,c
  6295  00290E  0012               	return		;indir
  6296  002910                     __end_of_TMR4_CallBack:
  6297                           	opt callstack 0
  6298                           
  6299 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  6300 ;; Defined at:
  6301 ;;		line 197 in file "mcc_generated_files/tmr4.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		None
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6319 ;;Total ram usage:        0 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_TMR4_Initialize
  6325 ;;		_TMR4_CallBack
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text60
  6330  002C58                     __ptext60:
  6331                           	opt callstack 0
  6332  002C58                     _TMR4_DefaultInterruptHandler:
  6333                           	opt callstack 21
  6334                           
  6335                           ;incstack = 0
  6336  002C58  0012               	return		;funcret
  6337  002C5A                     __end_of_TMR4_DefaultInterruptHandler:
  6338                           	opt callstack 0
  6339                           
  6340 ;; *************** function _TMR2_ISR *****************
  6341 ;; Defined at:
  6342 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6360 ;;Total ram usage:        0 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    3
  6363 ;; This function calls:
  6364 ;;		_TMR2_CallBack
  6365 ;; This function is called by:
  6366 ;;		_INTERRUPT_InterruptManager
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text61
  6371  002BF8                     __ptext61:
  6372                           	opt callstack 0
  6373  002BF8                     _TMR2_ISR:
  6374                           	opt callstack 20
  6375                           
  6376                           ;tmr2.c: 169: PIR4bits.TMR2IF = 0;
  6377                           
  6378                           ;incstack = 0
  6379  002BF8  010E               	movlb	14	; () banked
  6380  002BFA  93CE               	bcf	206,1,b	;volatile
  6381                           
  6382                           ; BSR set to: 14
  6383                           ;tmr2.c: 173: TMR2_CallBack();
  6384  002BFC  EC88  F014         	call	_TMR2_CallBack	;wreg free
  6385  002C00  0012               	return		;funcret
  6386  002C02                     __end_of_TMR2_ISR:
  6387                           	opt callstack 0
  6388                           
  6389 ;; *************** function _TMR2_CallBack *****************
  6390 ;; Defined at:
  6391 ;;		line 176 in file "mcc_generated_files/tmr2.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;		None
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6409 ;;Total ram usage:        0 bytes
  6410 ;; Hardware stack levels used:    1
  6411 ;; Hardware stack levels required when called:    2
  6412 ;; This function calls:
  6413 ;;		Absolute function
  6414 ;;		_TMR2_Custom_ISR
  6415 ;;		_TMR2_DefaultInterruptHandler
  6416 ;; This function is called by:
  6417 ;;		_TMR2_ISR
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text62
  6422  002910                     __ptext62:
  6423                           	opt callstack 0
  6424  002910                     _TMR2_CallBack:
  6425                           	opt callstack 20
  6426                           
  6427                           ;tmr2.c: 180: if(TMR2_InterruptHandler)
  6428                           
  6429                           ;incstack = 0
  6430  002910  0100               	movlb	0	; () banked
  6431  002912  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
  6432  002914  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  6433  002916  B4D8               	btfsc	status,2,c
  6434  002918  0012               	return	
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;tmr2.c: 181: {;tmr2.c: 182: TMR2_InterruptHandler();
  6438  00291A  D801               	call	i2u401_48
  6439  00291C  0012               	return	
  6440  00291E                     i2u401_48:
  6441  00291E  0005               	push	
  6442  002920  6EFA               	movwf	pclath,c
  6443  002922  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
  6444  002924  6EFD               	movwf	tosl,c
  6445  002926  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  6446  002928  6EFE               	movwf	tosh,c
  6447  00292A  6AFF               	clrf	tosu,c
  6448  00292C  50FA               	movf	pclath,w,c
  6449  00292E  0012               	return		;indir
  6450  002930                     __end_of_TMR2_CallBack:
  6451                           	opt callstack 0
  6452                           
  6453 ;; *************** function _TMR2_Custom_ISR *****************
  6454 ;; Defined at:
  6455 ;;		line 174 in file "LedBlink.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;		None
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;		None
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  1    wreg      void 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2, status,0, cstack
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6473 ;;Total ram usage:        0 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    1
  6476 ;; This function calls:
  6477 ;;		i2_SetLed
  6478 ;; This function is called by:
  6479 ;;		_main
  6480 ;;		_TMR2_CallBack
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text63
  6485  000F1E                     __ptext63:
  6486                           	opt callstack 0
  6487  000F1E                     _TMR2_Custom_ISR:
  6488                           	opt callstack 20
  6489                           
  6490                           ;LedBlink.c: 176: if(R_Enabled == ON) {
  6491                           
  6492                           ;incstack = 0
  6493  000F1E  041B               	decf	_R_Enabled,w,c
  6494  000F20  101C               	iorwf	_R_Enabled+1,w,c
  6495  000F22  A4D8               	btfss	status,2,c
  6496  000F24  D070               	goto	i2l4968
  6497                           
  6498                           ;LedBlink.c: 177: if(R_StartAfter == 0)
  6499  000F26  0100               	movlb	0	; () banked
  6500  000F28  51D6               	movf	_R_StartAfter& (0+255),w,b
  6501  000F2A  11D7               	iorwf	(_R_StartAfter+1)& (0+255),w,b
  6502  000F2C  A4D8               	btfss	status,2,c
  6503  000F2E  D068               	goto	i2l4966
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;LedBlink.c: 178: {;LedBlink.c: 179: R_Counter++;
  6507  000F30  4A19               	infsnz	_R_Counter,f,c
  6508  000F32  2A1A               	incf	_R_Counter+1,f,c
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;LedBlink.c: 180: if(R_State == UNIDENTIFIED)
  6512  000F34  0E03               	movlw	3
  6513  000F36  1849               	xorwf	_R_State,w,c
  6514  000F38  104A               	iorwf	_R_State+1,w,c
  6515  000F3A  A4D8               	btfss	status,2,c
  6516  000F3C  D013               	goto	i2l4940
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;LedBlink.c: 181: {;LedBlink.c: 182: R_State = ON;
  6520  000F3E  0E00               	movlw	0
  6521  000F40  6E4A               	movwf	_R_State+1,c
  6522  000F42  0E01               	movlw	1
  6523  000F44  6E49               	movwf	_R_State,c
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;LedBlink.c: 183: SetLed(R,ON);
  6527  000F46  0E00               	movlw	0
  6528  000F48  6E2A               	movwf	i2SetLed@ledIndex+1,c
  6529  000F4A  0E00               	movlw	0
  6530  000F4C  6E29               	movwf	i2SetLed@ledIndex,c
  6531  000F4E  0E00               	movlw	0
  6532  000F50  6E2C               	movwf	i2SetLed@Mode+1,c
  6533  000F52  0E01               	movlw	1
  6534  000F54  6E2B               	movwf	i2SetLed@Mode,c
  6535  000F56  ECAB  F00F         	call	i2_SetLed	;wreg free
  6536                           
  6537                           ;LedBlink.c: 184: R_Counter = 0;
  6538  000F5A  0E00               	movlw	0
  6539  000F5C  6E1A               	movwf	_R_Counter+1,c
  6540  000F5E  0E00               	movlw	0
  6541  000F60  6E19               	movwf	_R_Counter,c
  6542                           
  6543                           ;LedBlink.c: 185: }
  6544  000F62  D051               	goto	i2l4968
  6545  000F64                     i2l4940:
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;LedBlink.c: 186: else if(R_State == OFF && R_Counter == R_OffTime)
  6549  000F64  0E02               	movlw	2
  6550  000F66  1849               	xorwf	_R_State,w,c
  6551  000F68  104A               	iorwf	_R_State+1,w,c
  6552  000F6A  A4D8               	btfss	status,2,c
  6553  000F6C  D01A               	goto	i2l4950
  6554                           
  6555                           ; BSR set to: 0
  6556  000F6E  501D               	movf	_R_OffTime,w,c
  6557  000F70  1819               	xorwf	_R_Counter,w,c
  6558  000F72  E117               	bnz	i2l4950
  6559  000F74  501E               	movf	_R_OffTime+1,w,c
  6560  000F76  181A               	xorwf	_R_Counter+1,w,c
  6561  000F78  A4D8               	btfss	status,2,c
  6562  000F7A  D013               	goto	i2l4950
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;LedBlink.c: 187: {;LedBlink.c: 189: SetLed(R, ON);
  6566  000F7C  0E00               	movlw	0
  6567  000F7E  6E2A               	movwf	i2SetLed@ledIndex+1,c
  6568  000F80  0E00               	movlw	0
  6569  000F82  6E29               	movwf	i2SetLed@ledIndex,c
  6570  000F84  0E00               	movlw	0
  6571  000F86  6E2C               	movwf	i2SetLed@Mode+1,c
  6572  000F88  0E01               	movlw	1
  6573  000F8A  6E2B               	movwf	i2SetLed@Mode,c
  6574  000F8C  ECAB  F00F         	call	i2_SetLed	;wreg free
  6575                           
  6576                           ;LedBlink.c: 190: R_Counter = 0;
  6577  000F90  0E00               	movlw	0
  6578  000F92  6E1A               	movwf	_R_Counter+1,c
  6579  000F94  0E00               	movlw	0
  6580  000F96  6E19               	movwf	_R_Counter,c
  6581                           
  6582                           ;LedBlink.c: 191: R_State = ON;
  6583  000F98  0E00               	movlw	0
  6584  000F9A  6E4A               	movwf	_R_State+1,c
  6585  000F9C  0E01               	movlw	1
  6586  000F9E  6E49               	movwf	_R_State,c
  6587                           
  6588                           ;LedBlink.c: 192: }
  6589  000FA0  D032               	goto	i2l4968
  6590  000FA2                     i2l4950:
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;LedBlink.c: 193: else if (R_State == ON && R_Counter == R_OnTime)
  6594  000FA2  0449               	decf	_R_State,w,c
  6595  000FA4  104A               	iorwf	_R_State+1,w,c
  6596  000FA6  A4D8               	btfss	status,2,c
  6597  000FA8  D02E               	goto	i2l4968
  6598                           
  6599                           ; BSR set to: 0
  6600  000FAA  501F               	movf	_R_OnTime,w,c
  6601  000FAC  1819               	xorwf	_R_Counter,w,c
  6602  000FAE  E12B               	bnz	i2l4968
  6603  000FB0  5020               	movf	_R_OnTime+1,w,c
  6604  000FB2  181A               	xorwf	_R_Counter+1,w,c
  6605  000FB4  A4D8               	btfss	status,2,c
  6606  000FB6  D027               	goto	i2l4968
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;LedBlink.c: 194: {;LedBlink.c: 196: SetLed(R, OFF);
  6610  000FB8  0E00               	movlw	0
  6611  000FBA  6E2A               	movwf	i2SetLed@ledIndex+1,c
  6612  000FBC  0E00               	movlw	0
  6613  000FBE  6E29               	movwf	i2SetLed@ledIndex,c
  6614  000FC0  0E00               	movlw	0
  6615  000FC2  6E2C               	movwf	i2SetLed@Mode+1,c
  6616  000FC4  0E02               	movlw	2
  6617  000FC6  6E2B               	movwf	i2SetLed@Mode,c
  6618  000FC8  ECAB  F00F         	call	i2_SetLed	;wreg free
  6619                           
  6620                           ;LedBlink.c: 197: R_Counter = 0;
  6621  000FCC  0E00               	movlw	0
  6622  000FCE  6E1A               	movwf	_R_Counter+1,c
  6623  000FD0  0E00               	movlw	0
  6624  000FD2  6E19               	movwf	_R_Counter,c
  6625                           
  6626                           ;LedBlink.c: 198: R_State = OFF;
  6627  000FD4  0E00               	movlw	0
  6628  000FD6  6E4A               	movwf	_R_State+1,c
  6629  000FD8  0E02               	movlw	2
  6630  000FDA  6E49               	movwf	_R_State,c
  6631                           
  6632                           ;LedBlink.c: 199: if(R_BlinkCount != -1)
  6633  000FDC  2817               	incf	_R_BlinkCount,w,c
  6634  000FDE  E103               	bnz	i2u353_40
  6635  000FE0  2818               	incf	_R_BlinkCount+1,w,c
  6636  000FE2  B4D8               	btfsc	status,2,c
  6637  000FE4  D010               	goto	i2l4968
  6638  000FE6                     i2u353_40:
  6639                           
  6640                           ;LedBlink.c: 200: {;LedBlink.c: 201: if(--R_BlinkCounter == 0)
  6641  000FE6  0100               	movlb	0	; () banked
  6642  000FE8  07D4               	decf	_R_BlinkCounter& (0+255),f,b
  6643  000FEA  A0D8               	btfss	status,0,c
  6644  000FEC  07D5               	decf	(_R_BlinkCounter+1)& (0+255),f,b
  6645  000FEE  51D4               	movf	_R_BlinkCounter& (0+255),w,b
  6646  000FF0  11D5               	iorwf	(_R_BlinkCounter+1)& (0+255),w,b
  6647  000FF2  A4D8               	btfss	status,2,c
  6648  000FF4  D008               	goto	i2l4968
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;LedBlink.c: 202: {;LedBlink.c: 203: R_Enabled = OFF;
  6652  000FF6  0E00               	movlw	0
  6653  000FF8  6E1C               	movwf	_R_Enabled+1,c
  6654  000FFA  0E02               	movlw	2
  6655  000FFC  6E1B               	movwf	_R_Enabled,c
  6656                           
  6657                           ; BSR set to: 0
  6658  000FFE  D003               	goto	i2l4968
  6659  001000                     i2l4966:
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;LedBlink.c: 208: R_StartAfter--;
  6663  001000  07D6               	decf	_R_StartAfter& (0+255),f,b
  6664  001002  A0D8               	btfss	status,0,c
  6665  001004  07D7               	decf	(_R_StartAfter+1)& (0+255),f,b
  6666  001006                     i2l4968:
  6667                           
  6668                           ;LedBlink.c: 209: };LedBlink.c: 211: if(G_Enabled == ON) {
  6669  001006  0100               	movlb	0	; () banked
  6670  001008  05CE               	decf	_G_Enabled& (0+255),w,b
  6671  00100A  11CF               	iorwf	(_G_Enabled+1)& (0+255),w,b
  6672  00100C  A4D8               	btfss	status,2,c
  6673  00100E  D06F               	goto	i2l5010
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;LedBlink.c: 212: if(G_StartAfter == 0)
  6677  001010  51CC               	movf	_G_StartAfter& (0+255),w,b
  6678  001012  11CD               	iorwf	(_G_StartAfter+1)& (0+255),w,b
  6679  001014  A4D8               	btfss	status,2,c
  6680  001016  D068               	goto	i2l5008
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;LedBlink.c: 213: {;LedBlink.c: 214: G_Counter++;
  6684  001018  4A15               	infsnz	_G_Counter,f,c
  6685  00101A  2A16               	incf	_G_Counter+1,f,c
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;LedBlink.c: 215: if(G_State == UNIDENTIFIED)
  6689  00101C  0E03               	movlw	3
  6690  00101E  1847               	xorwf	_G_State,w,c
  6691  001020  1048               	iorwf	_G_State+1,w,c
  6692  001022  A4D8               	btfss	status,2,c
  6693  001024  D013               	goto	i2l4982
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;LedBlink.c: 216: {;LedBlink.c: 217: G_State = ON;
  6697  001026  0E00               	movlw	0
  6698  001028  6E48               	movwf	_G_State+1,c
  6699  00102A  0E01               	movlw	1
  6700  00102C  6E47               	movwf	_G_State,c
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;LedBlink.c: 218: SetLed(G,ON);
  6704  00102E  0E00               	movlw	0
  6705  001030  6E2A               	movwf	i2SetLed@ledIndex+1,c
  6706  001032  0E01               	movlw	1
  6707  001034  6E29               	movwf	i2SetLed@ledIndex,c
  6708  001036  0E00               	movlw	0
  6709  001038  6E2C               	movwf	i2SetLed@Mode+1,c
  6710  00103A  0E01               	movlw	1
  6711  00103C  6E2B               	movwf	i2SetLed@Mode,c
  6712  00103E  ECAB  F00F         	call	i2_SetLed	;wreg free
  6713                           
  6714                           ;LedBlink.c: 219: G_Counter = 0;
  6715  001042  0E00               	movlw	0
  6716  001044  6E16               	movwf	_G_Counter+1,c
  6717  001046  0E00               	movlw	0
  6718  001048  6E15               	movwf	_G_Counter,c
  6719                           
  6720                           ;LedBlink.c: 220: }
  6721  00104A  D051               	goto	i2l5010
  6722  00104C                     i2l4982:
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;LedBlink.c: 221: else if(G_State == OFF && G_Counter == G_OffTime)
  6726  00104C  0E02               	movlw	2
  6727  00104E  1847               	xorwf	_G_State,w,c
  6728  001050  1048               	iorwf	_G_State+1,w,c
  6729  001052  A4D8               	btfss	status,2,c
  6730  001054  D01A               	goto	i2l4992
  6731                           
  6732                           ; BSR set to: 0
  6733  001056  51D0               	movf	_G_OffTime& (0+255),w,b
  6734  001058  1815               	xorwf	_G_Counter,w,c
  6735  00105A  E117               	bnz	i2l4992
  6736  00105C  51D1               	movf	(_G_OffTime+1)& (0+255),w,b
  6737  00105E  1816               	xorwf	_G_Counter+1,w,c
  6738  001060  A4D8               	btfss	status,2,c
  6739  001062  D013               	goto	i2l4992
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;LedBlink.c: 222: {;LedBlink.c: 224: SetLed(G, ON);
  6743  001064  0E00               	movlw	0
  6744  001066  6E2A               	movwf	i2SetLed@ledIndex+1,c
  6745  001068  0E01               	movlw	1
  6746  00106A  6E29               	movwf	i2SetLed@ledIndex,c
  6747  00106C  0E00               	movlw	0
  6748  00106E  6E2C               	movwf	i2SetLed@Mode+1,c
  6749  001070  0E01               	movlw	1
  6750  001072  6E2B               	movwf	i2SetLed@Mode,c
  6751  001074  ECAB  F00F         	call	i2_SetLed	;wreg free
  6752                           
  6753                           ;LedBlink.c: 225: G_Counter = 0;
  6754  001078  0E00               	movlw	0
  6755  00107A  6E16               	movwf	_G_Counter+1,c
  6756  00107C  0E00               	movlw	0
  6757  00107E  6E15               	movwf	_G_Counter,c
  6758                           
  6759                           ;LedBlink.c: 226: G_State = ON;
  6760  001080  0E00               	movlw	0
  6761  001082  6E48               	movwf	_G_State+1,c
  6762  001084  0E01               	movlw	1
  6763  001086  6E47               	movwf	_G_State,c
  6764                           
  6765                           ;LedBlink.c: 227: }
  6766  001088  D032               	goto	i2l5010
  6767  00108A                     i2l4992:
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;LedBlink.c: 228: else if (G_State == ON && G_Counter == G_OnTime)
  6771  00108A  0447               	decf	_G_State,w,c
  6772  00108C  1048               	iorwf	_G_State+1,w,c
  6773  00108E  A4D8               	btfss	status,2,c
  6774  001090  D02E               	goto	i2l5010
  6775                           
  6776                           ; BSR set to: 0
  6777  001092  51D2               	movf	_G_OnTime& (0+255),w,b
  6778  001094  1815               	xorwf	_G_Counter,w,c
  6779  001096  E12B               	bnz	i2l5010
  6780  001098  51D3               	movf	(_G_OnTime+1)& (0+255),w,b
  6781  00109A  1816               	xorwf	_G_Counter+1,w,c
  6782  00109C  A4D8               	btfss	status,2,c
  6783  00109E  D027               	goto	i2l5010
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;LedBlink.c: 229: {;LedBlink.c: 231: SetLed(G, OFF);
  6787  0010A0  0E00               	movlw	0
  6788  0010A2  6E2A               	movwf	i2SetLed@ledIndex+1,c
  6789  0010A4  0E01               	movlw	1
  6790  0010A6  6E29               	movwf	i2SetLed@ledIndex,c
  6791  0010A8  0E00               	movlw	0
  6792  0010AA  6E2C               	movwf	i2SetLed@Mode+1,c
  6793  0010AC  0E02               	movlw	2
  6794  0010AE  6E2B               	movwf	i2SetLed@Mode,c
  6795  0010B0  ECAB  F00F         	call	i2_SetLed	;wreg free
  6796                           
  6797                           ;LedBlink.c: 232: G_Counter = 0;
  6798  0010B4  0E00               	movlw	0
  6799  0010B6  6E16               	movwf	_G_Counter+1,c
  6800  0010B8  0E00               	movlw	0
  6801  0010BA  6E15               	movwf	_G_Counter,c
  6802                           
  6803                           ;LedBlink.c: 233: G_State = OFF;
  6804  0010BC  0E00               	movlw	0
  6805  0010BE  6E48               	movwf	_G_State+1,c
  6806  0010C0  0E02               	movlw	2
  6807  0010C2  6E47               	movwf	_G_State,c
  6808                           
  6809                           ;LedBlink.c: 234: if(G_BlinkCount != -1)
  6810  0010C4  2813               	incf	_G_BlinkCount,w,c
  6811  0010C6  E103               	bnz	i2u362_40
  6812  0010C8  2814               	incf	_G_BlinkCount+1,w,c
  6813  0010CA  B4D8               	btfsc	status,2,c
  6814  0010CC  D010               	goto	i2l5010
  6815  0010CE                     i2u362_40:
  6816                           
  6817                           ;LedBlink.c: 235: {;LedBlink.c: 236: if(--G_BlinkCounter == 0)
  6818  0010CE  0100               	movlb	0	; () banked
  6819  0010D0  07CA               	decf	_G_BlinkCounter& (0+255),f,b
  6820  0010D2  A0D8               	btfss	status,0,c
  6821  0010D4  07CB               	decf	(_G_BlinkCounter+1)& (0+255),f,b
  6822  0010D6  51CA               	movf	_G_BlinkCounter& (0+255),w,b
  6823  0010D8  11CB               	iorwf	(_G_BlinkCounter+1)& (0+255),w,b
  6824  0010DA  A4D8               	btfss	status,2,c
  6825  0010DC  D008               	goto	i2l5010
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;LedBlink.c: 237: {;LedBlink.c: 238: G_Enabled = OFF;
  6829  0010DE  0E00               	movlw	0
  6830  0010E0  6FCF               	movwf	(_G_Enabled+1)& (0+255),b
  6831  0010E2  0E02               	movlw	2
  6832  0010E4  6FCE               	movwf	_G_Enabled& (0+255),b
  6833                           
  6834                           ; BSR set to: 0
  6835  0010E6  D003               	goto	i2l5010
  6836  0010E8                     i2l5008:
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;LedBlink.c: 243: G_StartAfter--;
  6840  0010E8  07CC               	decf	_G_StartAfter& (0+255),f,b
  6841  0010EA  A0D8               	btfss	status,0,c
  6842  0010EC  07CD               	decf	(_G_StartAfter+1)& (0+255),f,b
  6843  0010EE                     i2l5010:
  6844                           
  6845                           ;LedBlink.c: 244: };LedBlink.c: 246: if(B_Enabled == ON) {
  6846  0010EE  0100               	movlb	0	; () banked
  6847  0010F0  05C4               	decf	_B_Enabled& (0+255),w,b
  6848  0010F2  11C5               	iorwf	(_B_Enabled+1)& (0+255),w,b
  6849  0010F4  A4D8               	btfss	status,2,c
  6850  0010F6  D06F               	goto	i2l5052
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;LedBlink.c: 247: if(B_StartAfter == 0)
  6854  0010F8  51C2               	movf	_B_StartAfter& (0+255),w,b
  6855  0010FA  11C3               	iorwf	(_B_StartAfter+1)& (0+255),w,b
  6856  0010FC  A4D8               	btfss	status,2,c
  6857  0010FE  D068               	goto	i2l5050
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;LedBlink.c: 248: {;LedBlink.c: 249: B_Counter++;
  6861  001100  4A11               	infsnz	_B_Counter,f,c
  6862  001102  2A12               	incf	_B_Counter+1,f,c
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;LedBlink.c: 250: if(B_State == UNIDENTIFIED)
  6866  001104  0E03               	movlw	3
  6867  001106  1845               	xorwf	_B_State,w,c
  6868  001108  1046               	iorwf	_B_State+1,w,c
  6869  00110A  A4D8               	btfss	status,2,c
  6870  00110C  D013               	goto	i2l5024
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;LedBlink.c: 251: {;LedBlink.c: 252: B_State = ON;
  6874  00110E  0E00               	movlw	0
  6875  001110  6E46               	movwf	_B_State+1,c
  6876  001112  0E01               	movlw	1
  6877  001114  6E45               	movwf	_B_State,c
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;LedBlink.c: 253: SetLed(B,ON);
  6881  001116  0E00               	movlw	0
  6882  001118  6E2A               	movwf	i2SetLed@ledIndex+1,c
  6883  00111A  0E02               	movlw	2
  6884  00111C  6E29               	movwf	i2SetLed@ledIndex,c
  6885  00111E  0E00               	movlw	0
  6886  001120  6E2C               	movwf	i2SetLed@Mode+1,c
  6887  001122  0E01               	movlw	1
  6888  001124  6E2B               	movwf	i2SetLed@Mode,c
  6889  001126  ECAB  F00F         	call	i2_SetLed	;wreg free
  6890                           
  6891                           ;LedBlink.c: 254: B_Counter = 0;
  6892  00112A  0E00               	movlw	0
  6893  00112C  6E12               	movwf	_B_Counter+1,c
  6894  00112E  0E00               	movlw	0
  6895  001130  6E11               	movwf	_B_Counter,c
  6896                           
  6897                           ;LedBlink.c: 255: }
  6898  001132  D051               	goto	i2l5052
  6899  001134                     i2l5024:
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;LedBlink.c: 256: else if(B_State == OFF && B_Counter == B_OffTime)
  6903  001134  0E02               	movlw	2
  6904  001136  1845               	xorwf	_B_State,w,c
  6905  001138  1046               	iorwf	_B_State+1,w,c
  6906  00113A  A4D8               	btfss	status,2,c
  6907  00113C  D01A               	goto	i2l5034
  6908                           
  6909                           ; BSR set to: 0
  6910  00113E  51C6               	movf	_B_OffTime& (0+255),w,b
  6911  001140  1811               	xorwf	_B_Counter,w,c
  6912  001142  E117               	bnz	i2l5034
  6913  001144  51C7               	movf	(_B_OffTime+1)& (0+255),w,b
  6914  001146  1812               	xorwf	_B_Counter+1,w,c
  6915  001148  A4D8               	btfss	status,2,c
  6916  00114A  D013               	goto	i2l5034
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;LedBlink.c: 257: {;LedBlink.c: 259: SetLed(B, ON);
  6920  00114C  0E00               	movlw	0
  6921  00114E  6E2A               	movwf	i2SetLed@ledIndex+1,c
  6922  001150  0E02               	movlw	2
  6923  001152  6E29               	movwf	i2SetLed@ledIndex,c
  6924  001154  0E00               	movlw	0
  6925  001156  6E2C               	movwf	i2SetLed@Mode+1,c
  6926  001158  0E01               	movlw	1
  6927  00115A  6E2B               	movwf	i2SetLed@Mode,c
  6928  00115C  ECAB  F00F         	call	i2_SetLed	;wreg free
  6929                           
  6930                           ;LedBlink.c: 260: B_Counter = 0;
  6931  001160  0E00               	movlw	0
  6932  001162  6E12               	movwf	_B_Counter+1,c
  6933  001164  0E00               	movlw	0
  6934  001166  6E11               	movwf	_B_Counter,c
  6935                           
  6936                           ;LedBlink.c: 261: B_State = ON;
  6937  001168  0E00               	movlw	0
  6938  00116A  6E46               	movwf	_B_State+1,c
  6939  00116C  0E01               	movlw	1
  6940  00116E  6E45               	movwf	_B_State,c
  6941                           
  6942                           ;LedBlink.c: 262: }
  6943  001170  D032               	goto	i2l5052
  6944  001172                     i2l5034:
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;LedBlink.c: 263: else if (B_State == ON && B_Counter == B_OnTime)
  6948  001172  0445               	decf	_B_State,w,c
  6949  001174  1046               	iorwf	_B_State+1,w,c
  6950  001176  A4D8               	btfss	status,2,c
  6951  001178  D02E               	goto	i2l5052
  6952                           
  6953                           ; BSR set to: 0
  6954  00117A  51C8               	movf	_B_OnTime& (0+255),w,b
  6955  00117C  1811               	xorwf	_B_Counter,w,c
  6956  00117E  E12B               	bnz	i2l5052
  6957  001180  51C9               	movf	(_B_OnTime+1)& (0+255),w,b
  6958  001182  1812               	xorwf	_B_Counter+1,w,c
  6959  001184  A4D8               	btfss	status,2,c
  6960  001186  D027               	goto	i2l5052
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;LedBlink.c: 264: {;LedBlink.c: 266: SetLed(B, OFF);
  6964  001188  0E00               	movlw	0
  6965  00118A  6E2A               	movwf	i2SetLed@ledIndex+1,c
  6966  00118C  0E02               	movlw	2
  6967  00118E  6E29               	movwf	i2SetLed@ledIndex,c
  6968  001190  0E00               	movlw	0
  6969  001192  6E2C               	movwf	i2SetLed@Mode+1,c
  6970  001194  0E02               	movlw	2
  6971  001196  6E2B               	movwf	i2SetLed@Mode,c
  6972  001198  ECAB  F00F         	call	i2_SetLed	;wreg free
  6973                           
  6974                           ;LedBlink.c: 267: B_Counter = 0;
  6975  00119C  0E00               	movlw	0
  6976  00119E  6E12               	movwf	_B_Counter+1,c
  6977  0011A0  0E00               	movlw	0
  6978  0011A2  6E11               	movwf	_B_Counter,c
  6979                           
  6980                           ;LedBlink.c: 268: B_State = OFF;
  6981  0011A4  0E00               	movlw	0
  6982  0011A6  6E46               	movwf	_B_State+1,c
  6983  0011A8  0E02               	movlw	2
  6984  0011AA  6E45               	movwf	_B_State,c
  6985                           
  6986                           ;LedBlink.c: 269: if(B_BlinkCount != -1)
  6987  0011AC  280F               	incf	_B_BlinkCount,w,c
  6988  0011AE  E103               	bnz	i2u371_40
  6989  0011B0  2810               	incf	_B_BlinkCount+1,w,c
  6990  0011B2  B4D8               	btfsc	status,2,c
  6991  0011B4  D010               	goto	i2l5052
  6992  0011B6                     i2u371_40:
  6993                           
  6994                           ;LedBlink.c: 270: {;LedBlink.c: 271: if(--B_BlinkCounter == 0)
  6995  0011B6  0100               	movlb	0	; () banked
  6996  0011B8  07C0               	decf	_B_BlinkCounter& (0+255),f,b
  6997  0011BA  A0D8               	btfss	status,0,c
  6998  0011BC  07C1               	decf	(_B_BlinkCounter+1)& (0+255),f,b
  6999  0011BE  51C0               	movf	_B_BlinkCounter& (0+255),w,b
  7000  0011C0  11C1               	iorwf	(_B_BlinkCounter+1)& (0+255),w,b
  7001  0011C2  A4D8               	btfss	status,2,c
  7002  0011C4  D008               	goto	i2l5052
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;LedBlink.c: 272: {;LedBlink.c: 273: B_Enabled = OFF;
  7006  0011C6  0E00               	movlw	0
  7007  0011C8  6FC5               	movwf	(_B_Enabled+1)& (0+255),b
  7008  0011CA  0E02               	movlw	2
  7009  0011CC  6FC4               	movwf	_B_Enabled& (0+255),b
  7010                           
  7011                           ; BSR set to: 0
  7012  0011CE  D003               	goto	i2l5052
  7013  0011D0                     i2l5050:
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;LedBlink.c: 278: B_StartAfter--;
  7017  0011D0  07C2               	decf	_B_StartAfter& (0+255),f,b
  7018  0011D2  A0D8               	btfss	status,0,c
  7019  0011D4  07C3               	decf	(_B_StartAfter+1)& (0+255),f,b
  7020  0011D6                     i2l5052:
  7021                           
  7022                           ;LedBlink.c: 279: };LedBlink.c: 281: if(RGB_R_Enabled == ON) {
  7023  0011D6  0100               	movlb	0	; () banked
  7024  0011D8  05BA               	decf	_RGB_R_Enabled& (0+255),w,b
  7025  0011DA  11BB               	iorwf	(_RGB_R_Enabled+1)& (0+255),w,b
  7026  0011DC  A4D8               	btfss	status,2,c
  7027  0011DE  D06F               	goto	i2l5094
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;LedBlink.c: 282: if(RGB_R_StartAfter == 0)
  7031  0011E0  51B8               	movf	_RGB_R_StartAfter& (0+255),w,b
  7032  0011E2  11B9               	iorwf	(_RGB_R_StartAfter+1)& (0+255),w,b
  7033  0011E4  A4D8               	btfss	status,2,c
  7034  0011E6  D068               	goto	i2l5092
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;LedBlink.c: 283: {;LedBlink.c: 284: RGB_R_Counter++;
  7038  0011E8  4A0D               	infsnz	_RGB_R_Counter,f,c
  7039  0011EA  2A0E               	incf	_RGB_R_Counter+1,f,c
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;LedBlink.c: 285: if(RGB_R_State == UNIDENTIFIED)
  7043  0011EC  0E03               	movlw	3
  7044  0011EE  1843               	xorwf	_RGB_R_State,w,c
  7045  0011F0  1044               	iorwf	_RGB_R_State+1,w,c
  7046  0011F2  A4D8               	btfss	status,2,c
  7047  0011F4  D013               	goto	i2l5066
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;LedBlink.c: 286: {;LedBlink.c: 287: RGB_R_State = ON;
  7051  0011F6  0E00               	movlw	0
  7052  0011F8  6E44               	movwf	_RGB_R_State+1,c
  7053  0011FA  0E01               	movlw	1
  7054  0011FC  6E43               	movwf	_RGB_R_State,c
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;LedBlink.c: 288: SetLed(RGB_R,ON);
  7058  0011FE  0E00               	movlw	0
  7059  001200  6E2A               	movwf	i2SetLed@ledIndex+1,c
  7060  001202  0E03               	movlw	3
  7061  001204  6E29               	movwf	i2SetLed@ledIndex,c
  7062  001206  0E00               	movlw	0
  7063  001208  6E2C               	movwf	i2SetLed@Mode+1,c
  7064  00120A  0E01               	movlw	1
  7065  00120C  6E2B               	movwf	i2SetLed@Mode,c
  7066  00120E  ECAB  F00F         	call	i2_SetLed	;wreg free
  7067                           
  7068                           ;LedBlink.c: 289: RGB_R_Counter = 0;
  7069  001212  0E00               	movlw	0
  7070  001214  6E0E               	movwf	_RGB_R_Counter+1,c
  7071  001216  0E00               	movlw	0
  7072  001218  6E0D               	movwf	_RGB_R_Counter,c
  7073                           
  7074                           ;LedBlink.c: 290: }
  7075  00121A  D051               	goto	i2l5094
  7076  00121C                     i2l5066:
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;LedBlink.c: 291: else if(RGB_R_State == OFF && RGB_R_Counter == RGB_R_OffTime)
  7080  00121C  0E02               	movlw	2
  7081  00121E  1843               	xorwf	_RGB_R_State,w,c
  7082  001220  1044               	iorwf	_RGB_R_State+1,w,c
  7083  001222  A4D8               	btfss	status,2,c
  7084  001224  D01A               	goto	i2l5076
  7085                           
  7086                           ; BSR set to: 0
  7087  001226  51BC               	movf	_RGB_R_OffTime& (0+255),w,b
  7088  001228  180D               	xorwf	_RGB_R_Counter,w,c
  7089  00122A  E117               	bnz	i2l5076
  7090  00122C  51BD               	movf	(_RGB_R_OffTime+1)& (0+255),w,b
  7091  00122E  180E               	xorwf	_RGB_R_Counter+1,w,c
  7092  001230  A4D8               	btfss	status,2,c
  7093  001232  D013               	goto	i2l5076
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;LedBlink.c: 292: {;LedBlink.c: 294: SetLed(RGB_R, ON);
  7097  001234  0E00               	movlw	0
  7098  001236  6E2A               	movwf	i2SetLed@ledIndex+1,c
  7099  001238  0E03               	movlw	3
  7100  00123A  6E29               	movwf	i2SetLed@ledIndex,c
  7101  00123C  0E00               	movlw	0
  7102  00123E  6E2C               	movwf	i2SetLed@Mode+1,c
  7103  001240  0E01               	movlw	1
  7104  001242  6E2B               	movwf	i2SetLed@Mode,c
  7105  001244  ECAB  F00F         	call	i2_SetLed	;wreg free
  7106                           
  7107                           ;LedBlink.c: 295: RGB_R_Counter = 0;
  7108  001248  0E00               	movlw	0
  7109  00124A  6E0E               	movwf	_RGB_R_Counter+1,c
  7110  00124C  0E00               	movlw	0
  7111  00124E  6E0D               	movwf	_RGB_R_Counter,c
  7112                           
  7113                           ;LedBlink.c: 296: RGB_R_State = ON;
  7114  001250  0E00               	movlw	0
  7115  001252  6E44               	movwf	_RGB_R_State+1,c
  7116  001254  0E01               	movlw	1
  7117  001256  6E43               	movwf	_RGB_R_State,c
  7118                           
  7119                           ;LedBlink.c: 297: }
  7120  001258  D032               	goto	i2l5094
  7121  00125A                     i2l5076:
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;LedBlink.c: 298: else if (RGB_R_State == ON && RGB_R_Counter == RGB_R_OnTime)
  7125  00125A  0443               	decf	_RGB_R_State,w,c
  7126  00125C  1044               	iorwf	_RGB_R_State+1,w,c
  7127  00125E  A4D8               	btfss	status,2,c
  7128  001260  D02E               	goto	i2l5094
  7129                           
  7130                           ; BSR set to: 0
  7131  001262  51BE               	movf	_RGB_R_OnTime& (0+255),w,b
  7132  001264  180D               	xorwf	_RGB_R_Counter,w,c
  7133  001266  E12B               	bnz	i2l5094
  7134  001268  51BF               	movf	(_RGB_R_OnTime+1)& (0+255),w,b
  7135  00126A  180E               	xorwf	_RGB_R_Counter+1,w,c
  7136  00126C  A4D8               	btfss	status,2,c
  7137  00126E  D027               	goto	i2l5094
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;LedBlink.c: 299: {;LedBlink.c: 301: SetLed(RGB_R, OFF);
  7141  001270  0E00               	movlw	0
  7142  001272  6E2A               	movwf	i2SetLed@ledIndex+1,c
  7143  001274  0E03               	movlw	3
  7144  001276  6E29               	movwf	i2SetLed@ledIndex,c
  7145  001278  0E00               	movlw	0
  7146  00127A  6E2C               	movwf	i2SetLed@Mode+1,c
  7147  00127C  0E02               	movlw	2
  7148  00127E  6E2B               	movwf	i2SetLed@Mode,c
  7149  001280  ECAB  F00F         	call	i2_SetLed	;wreg free
  7150                           
  7151                           ;LedBlink.c: 302: RGB_R_Counter = 0;
  7152  001284  0E00               	movlw	0
  7153  001286  6E0E               	movwf	_RGB_R_Counter+1,c
  7154  001288  0E00               	movlw	0
  7155  00128A  6E0D               	movwf	_RGB_R_Counter,c
  7156                           
  7157                           ;LedBlink.c: 303: RGB_R_State = OFF;
  7158  00128C  0E00               	movlw	0
  7159  00128E  6E44               	movwf	_RGB_R_State+1,c
  7160  001290  0E02               	movlw	2
  7161  001292  6E43               	movwf	_RGB_R_State,c
  7162                           
  7163                           ;LedBlink.c: 304: if(RGB_R_BlinkCount != -1)
  7164  001294  280B               	incf	_RGB_R_BlinkCount,w,c
  7165  001296  E103               	bnz	i2u380_40
  7166  001298  280C               	incf	_RGB_R_BlinkCount+1,w,c
  7167  00129A  B4D8               	btfsc	status,2,c
  7168  00129C  D010               	goto	i2l5094
  7169  00129E                     i2u380_40:
  7170                           
  7171                           ;LedBlink.c: 305: {;LedBlink.c: 306: if(--RGB_R_BlinkCounter == 0)
  7172  00129E  0100               	movlb	0	; () banked
  7173  0012A0  07B6               	decf	_RGB_R_BlinkCounter& (0+255),f,b
  7174  0012A2  A0D8               	btfss	status,0,c
  7175  0012A4  07B7               	decf	(_RGB_R_BlinkCounter+1)& (0+255),f,b
  7176  0012A6  51B6               	movf	_RGB_R_BlinkCounter& (0+255),w,b
  7177  0012A8  11B7               	iorwf	(_RGB_R_BlinkCounter+1)& (0+255),w,b
  7178  0012AA  A4D8               	btfss	status,2,c
  7179  0012AC  D008               	goto	i2l5094
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;LedBlink.c: 307: {;LedBlink.c: 308: RGB_R_Enabled = OFF;
  7183  0012AE  0E00               	movlw	0
  7184  0012B0  6FBB               	movwf	(_RGB_R_Enabled+1)& (0+255),b
  7185  0012B2  0E02               	movlw	2
  7186  0012B4  6FBA               	movwf	_RGB_R_Enabled& (0+255),b
  7187                           
  7188                           ; BSR set to: 0
  7189  0012B6  D003               	goto	i2l5094
  7190  0012B8                     i2l5092:
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;LedBlink.c: 313: RGB_R_StartAfter--;
  7194  0012B8  07B8               	decf	_RGB_R_StartAfter& (0+255),f,b
  7195  0012BA  A0D8               	btfss	status,0,c
  7196  0012BC  07B9               	decf	(_RGB_R_StartAfter+1)& (0+255),f,b
  7197  0012BE                     i2l5094:
  7198                           
  7199                           ;LedBlink.c: 314: };LedBlink.c: 316: if(RGB_G_Enabled == ON) {
  7200  0012BE  0100               	movlb	0	; () banked
  7201  0012C0  05B0               	decf	_RGB_G_Enabled& (0+255),w,b
  7202  0012C2  11B1               	iorwf	(_RGB_G_Enabled+1)& (0+255),w,b
  7203  0012C4  A4D8               	btfss	status,2,c
  7204  0012C6  D06F               	goto	i2l5136
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;LedBlink.c: 317: if(RGB_G_StartAfter == 0)
  7208  0012C8  51AE               	movf	_RGB_G_StartAfter& (0+255),w,b
  7209  0012CA  11AF               	iorwf	(_RGB_G_StartAfter+1)& (0+255),w,b
  7210  0012CC  A4D8               	btfss	status,2,c
  7211  0012CE  D068               	goto	i2l5134
  7212                           
  7213                           ; BSR set to: 0
  7214                           ;LedBlink.c: 318: {;LedBlink.c: 319: RGB_G_Counter++;
  7215  0012D0  4A09               	infsnz	_RGB_G_Counter,f,c
  7216  0012D2  2A0A               	incf	_RGB_G_Counter+1,f,c
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;LedBlink.c: 320: if(RGB_G_State == UNIDENTIFIED)
  7220  0012D4  0E03               	movlw	3
  7221  0012D6  1841               	xorwf	_RGB_G_State,w,c
  7222  0012D8  1042               	iorwf	_RGB_G_State+1,w,c
  7223  0012DA  A4D8               	btfss	status,2,c
  7224  0012DC  D013               	goto	i2l5108
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;LedBlink.c: 321: {;LedBlink.c: 322: RGB_G_State = ON;
  7228  0012DE  0E00               	movlw	0
  7229  0012E0  6E42               	movwf	_RGB_G_State+1,c
  7230  0012E2  0E01               	movlw	1
  7231  0012E4  6E41               	movwf	_RGB_G_State,c
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;LedBlink.c: 323: SetLed(RGB_G,ON);
  7235  0012E6  0E00               	movlw	0
  7236  0012E8  6E2A               	movwf	i2SetLed@ledIndex+1,c
  7237  0012EA  0E04               	movlw	4
  7238  0012EC  6E29               	movwf	i2SetLed@ledIndex,c
  7239  0012EE  0E00               	movlw	0
  7240  0012F0  6E2C               	movwf	i2SetLed@Mode+1,c
  7241  0012F2  0E01               	movlw	1
  7242  0012F4  6E2B               	movwf	i2SetLed@Mode,c
  7243  0012F6  ECAB  F00F         	call	i2_SetLed	;wreg free
  7244                           
  7245                           ;LedBlink.c: 324: RGB_G_Counter = 0;
  7246  0012FA  0E00               	movlw	0
  7247  0012FC  6E0A               	movwf	_RGB_G_Counter+1,c
  7248  0012FE  0E00               	movlw	0
  7249  001300  6E09               	movwf	_RGB_G_Counter,c
  7250                           
  7251                           ;LedBlink.c: 325: }
  7252  001302  D051               	goto	i2l5136
  7253  001304                     i2l5108:
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;LedBlink.c: 326: else if(RGB_G_State == OFF && RGB_G_Counter == RGB_G_OffTime)
  7257  001304  0E02               	movlw	2
  7258  001306  1841               	xorwf	_RGB_G_State,w,c
  7259  001308  1042               	iorwf	_RGB_G_State+1,w,c
  7260  00130A  A4D8               	btfss	status,2,c
  7261  00130C  D01A               	goto	i2l5118
  7262                           
  7263                           ; BSR set to: 0
  7264  00130E  51B2               	movf	_RGB_G_OffTime& (0+255),w,b
  7265  001310  1809               	xorwf	_RGB_G_Counter,w,c
  7266  001312  E117               	bnz	i2l5118
  7267  001314  51B3               	movf	(_RGB_G_OffTime+1)& (0+255),w,b
  7268  001316  180A               	xorwf	_RGB_G_Counter+1,w,c
  7269  001318  A4D8               	btfss	status,2,c
  7270  00131A  D013               	goto	i2l5118
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;LedBlink.c: 327: {;LedBlink.c: 329: SetLed(RGB_G, ON);
  7274  00131C  0E00               	movlw	0
  7275  00131E  6E2A               	movwf	i2SetLed@ledIndex+1,c
  7276  001320  0E04               	movlw	4
  7277  001322  6E29               	movwf	i2SetLed@ledIndex,c
  7278  001324  0E00               	movlw	0
  7279  001326  6E2C               	movwf	i2SetLed@Mode+1,c
  7280  001328  0E01               	movlw	1
  7281  00132A  6E2B               	movwf	i2SetLed@Mode,c
  7282  00132C  ECAB  F00F         	call	i2_SetLed	;wreg free
  7283                           
  7284                           ;LedBlink.c: 330: RGB_G_Counter = 0;
  7285  001330  0E00               	movlw	0
  7286  001332  6E0A               	movwf	_RGB_G_Counter+1,c
  7287  001334  0E00               	movlw	0
  7288  001336  6E09               	movwf	_RGB_G_Counter,c
  7289                           
  7290                           ;LedBlink.c: 331: RGB_G_State = ON;
  7291  001338  0E00               	movlw	0
  7292  00133A  6E42               	movwf	_RGB_G_State+1,c
  7293  00133C  0E01               	movlw	1
  7294  00133E  6E41               	movwf	_RGB_G_State,c
  7295                           
  7296                           ;LedBlink.c: 332: }
  7297  001340  D032               	goto	i2l5136
  7298  001342                     i2l5118:
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;LedBlink.c: 333: else if (RGB_G_State == ON && RGB_G_Counter == RGB_G_OnTime)
  7302  001342  0441               	decf	_RGB_G_State,w,c
  7303  001344  1042               	iorwf	_RGB_G_State+1,w,c
  7304  001346  A4D8               	btfss	status,2,c
  7305  001348  D02E               	goto	i2l5136
  7306                           
  7307                           ; BSR set to: 0
  7308  00134A  51B4               	movf	_RGB_G_OnTime& (0+255),w,b
  7309  00134C  1809               	xorwf	_RGB_G_Counter,w,c
  7310  00134E  E12B               	bnz	i2l5136
  7311  001350  51B5               	movf	(_RGB_G_OnTime+1)& (0+255),w,b
  7312  001352  180A               	xorwf	_RGB_G_Counter+1,w,c
  7313  001354  A4D8               	btfss	status,2,c
  7314  001356  D027               	goto	i2l5136
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;LedBlink.c: 334: {;LedBlink.c: 336: SetLed(RGB_G, OFF);
  7318  001358  0E00               	movlw	0
  7319  00135A  6E2A               	movwf	i2SetLed@ledIndex+1,c
  7320  00135C  0E04               	movlw	4
  7321  00135E  6E29               	movwf	i2SetLed@ledIndex,c
  7322  001360  0E00               	movlw	0
  7323  001362  6E2C               	movwf	i2SetLed@Mode+1,c
  7324  001364  0E02               	movlw	2
  7325  001366  6E2B               	movwf	i2SetLed@Mode,c
  7326  001368  ECAB  F00F         	call	i2_SetLed	;wreg free
  7327                           
  7328                           ;LedBlink.c: 337: RGB_G_Counter = 0;
  7329  00136C  0E00               	movlw	0
  7330  00136E  6E0A               	movwf	_RGB_G_Counter+1,c
  7331  001370  0E00               	movlw	0
  7332  001372  6E09               	movwf	_RGB_G_Counter,c
  7333                           
  7334                           ;LedBlink.c: 338: RGB_G_State = OFF;
  7335  001374  0E00               	movlw	0
  7336  001376  6E42               	movwf	_RGB_G_State+1,c
  7337  001378  0E02               	movlw	2
  7338  00137A  6E41               	movwf	_RGB_G_State,c
  7339                           
  7340                           ;LedBlink.c: 339: if(RGB_G_BlinkCount != -1)
  7341  00137C  2807               	incf	_RGB_G_BlinkCount,w,c
  7342  00137E  E103               	bnz	i2u389_40
  7343  001380  2808               	incf	_RGB_G_BlinkCount+1,w,c
  7344  001382  B4D8               	btfsc	status,2,c
  7345  001384  D010               	goto	i2l5136
  7346  001386                     i2u389_40:
  7347                           
  7348                           ;LedBlink.c: 340: {;LedBlink.c: 341: if(--RGB_G_BlinkCounter == 0)
  7349  001386  0100               	movlb	0	; () banked
  7350  001388  07AC               	decf	_RGB_G_BlinkCounter& (0+255),f,b
  7351  00138A  A0D8               	btfss	status,0,c
  7352  00138C  07AD               	decf	(_RGB_G_BlinkCounter+1)& (0+255),f,b
  7353  00138E  51AC               	movf	_RGB_G_BlinkCounter& (0+255),w,b
  7354  001390  11AD               	iorwf	(_RGB_G_BlinkCounter+1)& (0+255),w,b
  7355  001392  A4D8               	btfss	status,2,c
  7356  001394  D008               	goto	i2l5136
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;LedBlink.c: 342: {;LedBlink.c: 343: RGB_G_Enabled = OFF;
  7360  001396  0E00               	movlw	0
  7361  001398  6FB1               	movwf	(_RGB_G_Enabled+1)& (0+255),b
  7362  00139A  0E02               	movlw	2
  7363  00139C  6FB0               	movwf	_RGB_G_Enabled& (0+255),b
  7364                           
  7365                           ; BSR set to: 0
  7366  00139E  D003               	goto	i2l5136
  7367  0013A0                     i2l5134:
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;LedBlink.c: 348: RGB_G_StartAfter--;
  7371  0013A0  07AE               	decf	_RGB_G_StartAfter& (0+255),f,b
  7372  0013A2  A0D8               	btfss	status,0,c
  7373  0013A4  07AF               	decf	(_RGB_G_StartAfter+1)& (0+255),f,b
  7374  0013A6                     i2l5136:
  7375                           
  7376                           ;LedBlink.c: 349: };LedBlink.c: 351: if(RGB_B_Enabled == ON) {
  7377  0013A6  0100               	movlb	0	; () banked
  7378  0013A8  05A6               	decf	_RGB_B_Enabled& (0+255),w,b
  7379  0013AA  11A7               	iorwf	(_RGB_B_Enabled+1)& (0+255),w,b
  7380  0013AC  A4D8               	btfss	status,2,c
  7381  0013AE  0012               	return	
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;LedBlink.c: 352: if(RGB_B_StartAfter == 0)
  7385  0013B0  51A4               	movf	_RGB_B_StartAfter& (0+255),w,b
  7386  0013B2  11A5               	iorwf	(_RGB_B_StartAfter+1)& (0+255),w,b
  7387  0013B4  A4D8               	btfss	status,2,c
  7388  0013B6  D068               	goto	i2l5176
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;LedBlink.c: 353: {;LedBlink.c: 354: RGB_B_Counter++;
  7392  0013B8  4A05               	infsnz	_RGB_B_Counter,f,c
  7393  0013BA  2A06               	incf	_RGB_B_Counter+1,f,c
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;LedBlink.c: 355: if(RGB_B_State == UNIDENTIFIED)
  7397  0013BC  0E03               	movlw	3
  7398  0013BE  183F               	xorwf	_RGB_B_State,w,c
  7399  0013C0  1040               	iorwf	_RGB_B_State+1,w,c
  7400  0013C2  A4D8               	btfss	status,2,c
  7401  0013C4  D013               	goto	i2l5150
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;LedBlink.c: 356: {;LedBlink.c: 357: RGB_B_State = ON;
  7405  0013C6  0E00               	movlw	0
  7406  0013C8  6E40               	movwf	_RGB_B_State+1,c
  7407  0013CA  0E01               	movlw	1
  7408  0013CC  6E3F               	movwf	_RGB_B_State,c
  7409                           
  7410                           ; BSR set to: 0
  7411                           ;LedBlink.c: 358: SetLed(RGB_B,ON);
  7412  0013CE  0E00               	movlw	0
  7413  0013D0  6E2A               	movwf	i2SetLed@ledIndex+1,c
  7414  0013D2  0E05               	movlw	5
  7415  0013D4  6E29               	movwf	i2SetLed@ledIndex,c
  7416  0013D6  0E00               	movlw	0
  7417  0013D8  6E2C               	movwf	i2SetLed@Mode+1,c
  7418  0013DA  0E01               	movlw	1
  7419  0013DC  6E2B               	movwf	i2SetLed@Mode,c
  7420  0013DE  ECAB  F00F         	call	i2_SetLed	;wreg free
  7421                           
  7422                           ;LedBlink.c: 359: RGB_B_Counter = 0;
  7423  0013E2  0E00               	movlw	0
  7424  0013E4  6E06               	movwf	_RGB_B_Counter+1,c
  7425  0013E6  0E00               	movlw	0
  7426  0013E8  6E05               	movwf	_RGB_B_Counter,c
  7427                           
  7428                           ;LedBlink.c: 360: }
  7429  0013EA  0012               	return	
  7430  0013EC                     i2l5150:
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;LedBlink.c: 361: else if(RGB_B_State == OFF && RGB_B_Counter == RGB_B_OffTime)
  7434  0013EC  0E02               	movlw	2
  7435  0013EE  183F               	xorwf	_RGB_B_State,w,c
  7436  0013F0  1040               	iorwf	_RGB_B_State+1,w,c
  7437  0013F2  A4D8               	btfss	status,2,c
  7438  0013F4  D01A               	goto	i2l5160
  7439                           
  7440                           ; BSR set to: 0
  7441  0013F6  51A8               	movf	_RGB_B_OffTime& (0+255),w,b
  7442  0013F8  1805               	xorwf	_RGB_B_Counter,w,c
  7443  0013FA  E117               	bnz	i2l5160
  7444  0013FC  51A9               	movf	(_RGB_B_OffTime+1)& (0+255),w,b
  7445  0013FE  1806               	xorwf	_RGB_B_Counter+1,w,c
  7446  001400  A4D8               	btfss	status,2,c
  7447  001402  D013               	goto	i2l5160
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;LedBlink.c: 362: {;LedBlink.c: 364: SetLed(RGB_B, ON);
  7451  001404  0E00               	movlw	0
  7452  001406  6E2A               	movwf	i2SetLed@ledIndex+1,c
  7453  001408  0E05               	movlw	5
  7454  00140A  6E29               	movwf	i2SetLed@ledIndex,c
  7455  00140C  0E00               	movlw	0
  7456  00140E  6E2C               	movwf	i2SetLed@Mode+1,c
  7457  001410  0E01               	movlw	1
  7458  001412  6E2B               	movwf	i2SetLed@Mode,c
  7459  001414  ECAB  F00F         	call	i2_SetLed	;wreg free
  7460                           
  7461                           ;LedBlink.c: 365: RGB_B_Counter = 0;
  7462  001418  0E00               	movlw	0
  7463  00141A  6E06               	movwf	_RGB_B_Counter+1,c
  7464  00141C  0E00               	movlw	0
  7465  00141E  6E05               	movwf	_RGB_B_Counter,c
  7466                           
  7467                           ;LedBlink.c: 366: RGB_B_State = ON;
  7468  001420  0E00               	movlw	0
  7469  001422  6E40               	movwf	_RGB_B_State+1,c
  7470  001424  0E01               	movlw	1
  7471  001426  6E3F               	movwf	_RGB_B_State,c
  7472                           
  7473                           ;LedBlink.c: 367: }
  7474  001428  0012               	return	
  7475  00142A                     i2l5160:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;LedBlink.c: 368: else if (RGB_B_State == ON && RGB_B_Counter == RGB_B_OnTime)
  7479  00142A  043F               	decf	_RGB_B_State,w,c
  7480  00142C  1040               	iorwf	_RGB_B_State+1,w,c
  7481  00142E  A4D8               	btfss	status,2,c
  7482  001430  0012               	return	
  7483                           
  7484                           ; BSR set to: 0
  7485  001432  51AA               	movf	_RGB_B_OnTime& (0+255),w,b
  7486  001434  1805               	xorwf	_RGB_B_Counter,w,c
  7487  001436  E12B               	bnz	i2l1574
  7488  001438  51AB               	movf	(_RGB_B_OnTime+1)& (0+255),w,b
  7489  00143A  1806               	xorwf	_RGB_B_Counter+1,w,c
  7490  00143C  A4D8               	btfss	status,2,c
  7491  00143E  0012               	return	
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;LedBlink.c: 369: {;LedBlink.c: 371: SetLed(RGB_B, OFF);
  7495  001440  0E00               	movlw	0
  7496  001442  6E2A               	movwf	i2SetLed@ledIndex+1,c
  7497  001444  0E05               	movlw	5
  7498  001446  6E29               	movwf	i2SetLed@ledIndex,c
  7499  001448  0E00               	movlw	0
  7500  00144A  6E2C               	movwf	i2SetLed@Mode+1,c
  7501  00144C  0E02               	movlw	2
  7502  00144E  6E2B               	movwf	i2SetLed@Mode,c
  7503  001450  ECAB  F00F         	call	i2_SetLed	;wreg free
  7504                           
  7505                           ;LedBlink.c: 372: RGB_B_Counter = 0;
  7506  001454  0E00               	movlw	0
  7507  001456  6E06               	movwf	_RGB_B_Counter+1,c
  7508  001458  0E00               	movlw	0
  7509  00145A  6E05               	movwf	_RGB_B_Counter,c
  7510                           
  7511                           ;LedBlink.c: 373: RGB_B_State = OFF;
  7512  00145C  0E00               	movlw	0
  7513  00145E  6E40               	movwf	_RGB_B_State+1,c
  7514  001460  0E02               	movlw	2
  7515  001462  6E3F               	movwf	_RGB_B_State,c
  7516                           
  7517                           ;LedBlink.c: 374: if(RGB_B_BlinkCount != -1)
  7518  001464  2803               	incf	_RGB_B_BlinkCount,w,c
  7519  001466  E103               	bnz	i2u398_40
  7520  001468  2804               	incf	_RGB_B_BlinkCount+1,w,c
  7521  00146A  B4D8               	btfsc	status,2,c
  7522  00146C  0012               	return	
  7523  00146E                     i2u398_40:
  7524                           
  7525                           ;LedBlink.c: 375: {;LedBlink.c: 376: if(--RGB_B_BlinkCounter == 0)
  7526  00146E  0100               	movlb	0	; () banked
  7527  001470  07A2               	decf	_RGB_B_BlinkCounter& (0+255),f,b
  7528  001472  A0D8               	btfss	status,0,c
  7529  001474  07A3               	decf	(_RGB_B_BlinkCounter+1)& (0+255),f,b
  7530  001476  51A2               	movf	_RGB_B_BlinkCounter& (0+255),w,b
  7531  001478  11A3               	iorwf	(_RGB_B_BlinkCounter+1)& (0+255),w,b
  7532  00147A  A4D8               	btfss	status,2,c
  7533  00147C  0012               	return	
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;LedBlink.c: 377: {;LedBlink.c: 378: RGB_B_Enabled = OFF;
  7537  00147E  0E00               	movlw	0
  7538  001480  6FA7               	movwf	(_RGB_B_Enabled+1)& (0+255),b
  7539  001482  0E02               	movlw	2
  7540  001484  6FA6               	movwf	_RGB_B_Enabled& (0+255),b
  7541                           
  7542                           ; BSR set to: 0
  7543  001486  0012               	return	
  7544  001488                     i2l5176:
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;LedBlink.c: 383: RGB_B_StartAfter--;
  7548  001488  07A4               	decf	_RGB_B_StartAfter& (0+255),f,b
  7549  00148A  A0D8               	btfss	status,0,c
  7550  00148C  07A5               	decf	(_RGB_B_StartAfter+1)& (0+255),f,b
  7551  00148E                     i2l1574:
  7552  00148E  0012               	return		;funcret
  7553  001490                     __end_of_TMR2_Custom_ISR:
  7554                           	opt callstack 0
  7555                           
  7556 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  7557 ;; Defined at:
  7558 ;;		line 190 in file "mcc_generated_files/tmr2.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      void 
  7565 ;; Registers used:
  7566 ;;		None
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;Total ram usage:        0 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_TMR2_Initialize
  7582 ;;		_TMR2_CallBack
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text64
  7587  002C5A                     __ptext64:
  7588                           	opt callstack 0
  7589  002C5A                     _TMR2_DefaultInterruptHandler:
  7590                           	opt callstack 21
  7591                           
  7592                           ;incstack = 0
  7593  002C5A  0012               	return		;funcret
  7594  002C5C                     __end_of_TMR2_DefaultInterruptHandler:
  7595                           	opt callstack 0
  7596                           
  7597 ;; *************** function i2_SetLed *****************
  7598 ;; Defined at:
  7599 ;;		line 11 in file "LedBlink.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  ledIndex        2    0[COMRAM] int 
  7602 ;;  Mode            2    2[COMRAM] int 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  SetLed          2    4[COMRAM] int 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      void 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7614 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7617 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7618 ;;Total ram usage:        6 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; This function calls:
  7621 ;;		Nothing
  7622 ;; This function is called by:
  7623 ;;		_TMR2_Custom_ISR
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text65
  7628  001F56                     __ptext65:
  7629                           	opt callstack 0
  7630  001F56                     i2_SetLed:
  7631                           	opt callstack 20
  7632                           
  7633                           ;LedBlink.c: 12: int mode2 = 1;
  7634                           
  7635                           ;incstack = 0
  7636  001F56  0E00               	movlw	0
  7637  001F58  6E2E               	movwf	i2SetLed@mode2+1,c
  7638  001F5A  0E01               	movlw	1
  7639  001F5C  6E2D               	movwf	i2SetLed@mode2,c
  7640                           
  7641                           ;LedBlink.c: 13: if(Mode == ON)
  7642  001F5E  042B               	decf	i2SetLed@Mode,w,c
  7643  001F60  102C               	iorwf	i2SetLed@Mode+1,w,c
  7644  001F62  A4D8               	btfss	status,2,c
  7645  001F64  D004               	goto	i2l4846
  7646                           
  7647                           ;LedBlink.c: 14: mode2 = 0;
  7648  001F66  0E00               	movlw	0
  7649  001F68  6E2E               	movwf	i2SetLed@mode2+1,c
  7650  001F6A  0E00               	movlw	0
  7651  001F6C  6E2D               	movwf	i2SetLed@mode2,c
  7652  001F6E                     i2l4846:
  7653                           
  7654                           ;LedBlink.c: 16: if (ledIndex == R) {
  7655  001F6E  5029               	movf	i2SetLed@ledIndex,w,c
  7656  001F70  102A               	iorwf	i2SetLed@ledIndex+1,w,c
  7657  001F72  A4D8               	btfss	status,2,c
  7658  001F74  D006               	goto	i2l4850
  7659                           
  7660                           ;LedBlink.c: 17: LATDbits.LATD5 = mode2;
  7661  001F76  B02D               	btfsc	i2SetLed@mode2,0,c
  7662  001F78  D002               	bra	i2u333_45
  7663  001F7A  9A86               	bcf	3974,5,c	;volatile
  7664  001F7C  D001               	bra	i2u333_46
  7665  001F7E                     i2u333_45:
  7666  001F7E  8A86               	bsf	3974,5,c	;volatile
  7667  001F80                     i2u333_46:
  7668                           
  7669                           ;LedBlink.c: 18: } else if (ledIndex == G) {
  7670  001F80  0012               	return	
  7671  001F82                     i2l4850:
  7672  001F82  0429               	decf	i2SetLed@ledIndex,w,c
  7673  001F84  102A               	iorwf	i2SetLed@ledIndex+1,w,c
  7674  001F86  A4D8               	btfss	status,2,c
  7675  001F88  D006               	goto	i2l4854
  7676                           
  7677                           ;LedBlink.c: 19: LATDbits.LATD6 = mode2;
  7678  001F8A  B02D               	btfsc	i2SetLed@mode2,0,c
  7679  001F8C  D002               	bra	i2u335_45
  7680  001F8E  9C86               	bcf	3974,6,c	;volatile
  7681  001F90  D001               	bra	i2u335_46
  7682  001F92                     i2u335_45:
  7683  001F92  8C86               	bsf	3974,6,c	;volatile
  7684  001F94                     i2u335_46:
  7685                           
  7686                           ;LedBlink.c: 20: } else if (ledIndex == B) {
  7687  001F94  0012               	return	
  7688  001F96                     i2l4854:
  7689  001F96  0E02               	movlw	2
  7690  001F98  1829               	xorwf	i2SetLed@ledIndex,w,c
  7691  001F9A  102A               	iorwf	i2SetLed@ledIndex+1,w,c
  7692  001F9C  A4D8               	btfss	status,2,c
  7693  001F9E  D006               	goto	i2l4858
  7694                           
  7695                           ;LedBlink.c: 21: LATDbits.LATD7 = mode2;
  7696  001FA0  B02D               	btfsc	i2SetLed@mode2,0,c
  7697  001FA2  D002               	bra	i2u337_45
  7698  001FA4  9E86               	bcf	3974,7,c	;volatile
  7699  001FA6  D001               	bra	i2u337_46
  7700  001FA8                     i2u337_45:
  7701  001FA8  8E86               	bsf	3974,7,c	;volatile
  7702  001FAA                     i2u337_46:
  7703                           
  7704                           ;LedBlink.c: 22: } else if (ledIndex == RGB_R) {
  7705  001FAA  0012               	return	
  7706  001FAC                     i2l4858:
  7707  001FAC  0E03               	movlw	3
  7708  001FAE  1829               	xorwf	i2SetLed@ledIndex,w,c
  7709  001FB0  102A               	iorwf	i2SetLed@ledIndex+1,w,c
  7710  001FB2  A4D8               	btfss	status,2,c
  7711  001FB4  D006               	goto	i2l4862
  7712                           
  7713                           ;LedBlink.c: 23: LATEbits.LATE2 = mode2;
  7714  001FB6  B02D               	btfsc	i2SetLed@mode2,0,c
  7715  001FB8  D002               	bra	i2u339_45
  7716  001FBA  9487               	bcf	3975,2,c	;volatile
  7717  001FBC  D001               	bra	i2u339_46
  7718  001FBE                     i2u339_45:
  7719  001FBE  8487               	bsf	3975,2,c	;volatile
  7720  001FC0                     i2u339_46:
  7721                           
  7722                           ;LedBlink.c: 24: } else if (ledIndex == RGB_G) {
  7723  001FC0  0012               	return	
  7724  001FC2                     i2l4862:
  7725  001FC2  0E04               	movlw	4
  7726  001FC4  1829               	xorwf	i2SetLed@ledIndex,w,c
  7727  001FC6  102A               	iorwf	i2SetLed@ledIndex+1,w,c
  7728  001FC8  A4D8               	btfss	status,2,c
  7729  001FCA  D006               	goto	i2l4866
  7730                           
  7731                           ;LedBlink.c: 25: LATEbits.LATE1 = mode2;
  7732  001FCC  B02D               	btfsc	i2SetLed@mode2,0,c
  7733  001FCE  D002               	bra	i2u341_45
  7734  001FD0  9287               	bcf	3975,1,c	;volatile
  7735  001FD2  D001               	bra	i2u341_46
  7736  001FD4                     i2u341_45:
  7737  001FD4  8287               	bsf	3975,1,c	;volatile
  7738  001FD6                     i2u341_46:
  7739                           
  7740                           ;LedBlink.c: 26: } else if (ledIndex == RGB_B) {
  7741  001FD6  0012               	return	
  7742  001FD8                     i2l4866:
  7743  001FD8  0E05               	movlw	5
  7744  001FDA  1829               	xorwf	i2SetLed@ledIndex,w,c
  7745  001FDC  102A               	iorwf	i2SetLed@ledIndex+1,w,c
  7746  001FDE  A4D8               	btfss	status,2,c
  7747  001FE0  0012               	return	
  7748                           
  7749                           ;LedBlink.c: 27: LATEbits.LATE0 = mode2;
  7750  001FE2  B02D               	btfsc	i2SetLed@mode2,0,c
  7751  001FE4  D002               	bra	i2u343_45
  7752  001FE6  9087               	bcf	3975,0,c	;volatile
  7753  001FE8  D001               	bra	i2u343_46
  7754  001FEA                     i2u343_45:
  7755  001FEA  8087               	bsf	3975,0,c	;volatile
  7756  001FEC                     i2u343_46:
  7757  001FEC  0012               	return	
  7758  001FEE                     __end_ofi2_SetLed:
  7759                           	opt callstack 0
  7760                           
  7761 ;; *************** function _PIN_MANAGER_IOC *****************
  7762 ;; Defined at:
  7763 ;;		line 217 in file "mcc_generated_files/pin_manager.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;		None
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;Total ram usage:        0 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    2
  7784 ;; This function calls:
  7785 ;;		_IOCAF0_ISR
  7786 ;;		_IOCAF1_ISR
  7787 ;;		_IOCAF3_ISR
  7788 ;;		_IOCAF4_ISR
  7789 ;;		_IOCBF5_ISR
  7790 ;;		_IOCCF3_ISR
  7791 ;;		_IOCCF4_ISR
  7792 ;;		_IOCCF5_ISR
  7793 ;;		_IOCCF6_ISR
  7794 ;;		_IOCCF7_ISR
  7795 ;; This function is called by:
  7796 ;;		_INTERRUPT_InterruptManager
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           	psect	text66
  7801  0022E4                     __ptext66:
  7802                           	opt callstack 0
  7803  0022E4                     _PIN_MANAGER_IOC:
  7804                           	opt callstack 21
  7805                           
  7806                           ;pin_manager.c: 220: if(IOCAFbits.IOCAF0 == 1)
  7807                           
  7808                           ;incstack = 0
  7809  0022E4  010F               	movlb	15	; () banked
  7810  0022E6  B10A               	btfsc	10,0,b	;volatile
  7811                           
  7812                           ; BSR set to: 15
  7813                           ;pin_manager.c: 221: {;pin_manager.c: 222: IOCAF0_ISR();
  7814  0022E8  EC2F  F014         	call	_IOCAF0_ISR	;wreg free
  7815                           
  7816                           ;pin_manager.c: 223: };pin_manager.c: 225: if(IOCAFbits.IOCAF1 == 1)
  7817  0022EC  010F               	movlb	15	; () banked
  7818  0022EE  B30A               	btfsc	10,1,b	;volatile
  7819                           
  7820                           ; BSR set to: 15
  7821                           ;pin_manager.c: 226: {;pin_manager.c: 227: IOCAF1_ISR();
  7822  0022F0  EC1C  F014         	call	_IOCAF1_ISR	;wreg free
  7823                           
  7824                           ;pin_manager.c: 228: };pin_manager.c: 230: if(IOCAFbits.IOCAF3 == 1)
  7825  0022F4  010F               	movlb	15	; () banked
  7826  0022F6  B70A               	btfsc	10,3,b	;volatile
  7827                           
  7828                           ; BSR set to: 15
  7829                           ;pin_manager.c: 231: {;pin_manager.c: 232: IOCAF3_ISR();
  7830  0022F8  EC09  F014         	call	_IOCAF3_ISR	;wreg free
  7831                           
  7832                           ;pin_manager.c: 233: };pin_manager.c: 235: if(IOCAFbits.IOCAF4 == 1)
  7833  0022FC  010F               	movlb	15	; () banked
  7834  0022FE  B90A               	btfsc	10,4,b	;volatile
  7835                           
  7836                           ; BSR set to: 15
  7837                           ;pin_manager.c: 236: {;pin_manager.c: 237: IOCAF4_ISR();
  7838  002300  ECF6  F013         	call	_IOCAF4_ISR	;wreg free
  7839                           
  7840                           ;pin_manager.c: 238: };pin_manager.c: 240: if(IOCBFbits.IOCBF5 == 1)
  7841  002304  010F               	movlb	15	; () banked
  7842  002306  BB12               	btfsc	18,5,b	;volatile
  7843                           
  7844                           ; BSR set to: 15
  7845                           ;pin_manager.c: 241: {;pin_manager.c: 242: IOCBF5_ISR();
  7846  002308  ECE3  F013         	call	_IOCBF5_ISR	;wreg free
  7847                           
  7848                           ;pin_manager.c: 243: };pin_manager.c: 245: if(IOCCFbits.IOCCF3 == 1)
  7849  00230C  010F               	movlb	15	; () banked
  7850  00230E  B71A               	btfsc	26,3,b	;volatile
  7851                           
  7852                           ; BSR set to: 15
  7853                           ;pin_manager.c: 246: {;pin_manager.c: 247: IOCCF3_ISR();
  7854  002310  ECD0  F013         	call	_IOCCF3_ISR	;wreg free
  7855                           
  7856                           ;pin_manager.c: 248: };pin_manager.c: 250: if(IOCCFbits.IOCCF4 == 1)
  7857  002314  010F               	movlb	15	; () banked
  7858  002316  B91A               	btfsc	26,4,b	;volatile
  7859                           
  7860                           ; BSR set to: 15
  7861                           ;pin_manager.c: 251: {;pin_manager.c: 252: IOCCF4_ISR();
  7862  002318  ECBD  F013         	call	_IOCCF4_ISR	;wreg free
  7863                           
  7864                           ;pin_manager.c: 253: };pin_manager.c: 255: if(IOCCFbits.IOCCF5 == 1)
  7865  00231C  010F               	movlb	15	; () banked
  7866  00231E  BB1A               	btfsc	26,5,b	;volatile
  7867                           
  7868                           ; BSR set to: 15
  7869                           ;pin_manager.c: 256: {;pin_manager.c: 257: IOCCF5_ISR();
  7870  002320  ECAA  F013         	call	_IOCCF5_ISR	;wreg free
  7871                           
  7872                           ;pin_manager.c: 258: };pin_manager.c: 260: if(IOCCFbits.IOCCF6 == 1)
  7873  002324  010F               	movlb	15	; () banked
  7874  002326  BD1A               	btfsc	26,6,b	;volatile
  7875                           
  7876                           ; BSR set to: 15
  7877                           ;pin_manager.c: 261: {;pin_manager.c: 262: IOCCF6_ISR();
  7878  002328  EC97  F013         	call	_IOCCF6_ISR	;wreg free
  7879                           
  7880                           ;pin_manager.c: 263: };pin_manager.c: 265: if(IOCCFbits.IOCCF7 == 1)
  7881  00232C  010F               	movlb	15	; () banked
  7882  00232E  AF1A               	btfss	26,7,b	;volatile
  7883  002330  0012               	return	
  7884                           
  7885                           ; BSR set to: 15
  7886                           ;pin_manager.c: 266: {;pin_manager.c: 267: IOCCF7_ISR();
  7887  002332  EC84  F013         	call	_IOCCF7_ISR	;wreg free
  7888  002336  0012               	return		;funcret
  7889  002338                     __end_of_PIN_MANAGER_IOC:
  7890                           	opt callstack 0
  7891                           
  7892 ;; *************** function _IOCCF7_ISR *****************
  7893 ;; Defined at:
  7894 ;;		line 544 in file "mcc_generated_files/pin_manager.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;		None
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;		None
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  1    wreg      void 
  7901 ;; Registers used:
  7902 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7912 ;;Total ram usage:        0 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:    1
  7915 ;; This function calls:
  7916 ;;		Absolute function
  7917 ;;		_IOCCF7_DefaultInterruptHandler
  7918 ;; This function is called by:
  7919 ;;		_PIN_MANAGER_IOC
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text67
  7924  002708                     __ptext67:
  7925                           	opt callstack 0
  7926  002708                     _IOCCF7_ISR:
  7927                           	opt callstack 21
  7928                           
  7929                           ;pin_manager.c: 549: if(IOCCF7_InterruptHandler)
  7930                           
  7931                           ;incstack = 0
  7932  002708  0100               	movlb	0	; () banked
  7933  00270A  51E0               	movf	_IOCCF7_InterruptHandler& (0+255),w,b
  7934  00270C  11E1               	iorwf	(_IOCCF7_InterruptHandler+1)& (0+255),w,b
  7935  00270E  B4D8               	btfsc	status,2,c
  7936  002710  D00B               	goto	i2u440_49
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;pin_manager.c: 550: {;pin_manager.c: 551: IOCCF7_InterruptHandler();
  7940  002712  D801               	call	i2u440_48
  7941  002714  D009               	goto	i2u440_49
  7942  002716                     i2u440_48:
  7943  002716  0005               	push	
  7944  002718  6EFA               	movwf	pclath,c
  7945  00271A  51E0               	movf	_IOCCF7_InterruptHandler& (0+255),w,b
  7946  00271C  6EFD               	movwf	tosl,c
  7947  00271E  51E1               	movf	(_IOCCF7_InterruptHandler+1)& (0+255),w,b
  7948  002720  6EFE               	movwf	tosh,c
  7949  002722  6AFF               	clrf	tosu,c
  7950  002724  50FA               	movf	pclath,w,c
  7951  002726  0012               	return		;indir
  7952  002728                     i2u440_49:
  7953                           
  7954                           ;pin_manager.c: 552: };pin_manager.c: 553: IOCCFbits.IOCCF7 = 0;
  7955  002728  010F               	movlb	15	; () banked
  7956  00272A  9F1A               	bcf	26,7,b	;volatile
  7957                           
  7958                           ; BSR set to: 15
  7959  00272C  0012               	return		;funcret
  7960  00272E                     __end_of_IOCCF7_ISR:
  7961                           	opt callstack 0
  7962                           
  7963 ;; *************** function _IOCCF7_DefaultInterruptHandler *****************
  7964 ;; Defined at:
  7965 ;;		line 566 in file "mcc_generated_files/pin_manager.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;		None
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1    wreg      void 
  7972 ;; Registers used:
  7973 ;;		None
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7983 ;;Total ram usage:        0 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; This function calls:
  7986 ;;		Nothing
  7987 ;; This function is called by:
  7988 ;;		_PIN_MANAGER_Initialize
  7989 ;;		_IOCCF7_ISR
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text68
  7994  002C5C                     __ptext68:
  7995                           	opt callstack 0
  7996  002C5C                     _IOCCF7_DefaultInterruptHandler:
  7997                           	opt callstack 21
  7998                           
  7999                           ; BSR set to: 15
  8000                           ;incstack = 0
  8001  002C5C  0012               	return		;funcret
  8002  002C5E                     __end_of_IOCCF7_DefaultInterruptHandler:
  8003                           	opt callstack 0
  8004                           
  8005 ;; *************** function _IOCCF6_ISR *****************
  8006 ;; Defined at:
  8007 ;;		line 514 in file "mcc_generated_files/pin_manager.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;		None
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;		None
  8012 ;; Return value:  Size  Location     Type
  8013 ;;                  1    wreg      void 
  8014 ;; Registers used:
  8015 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8025 ;;Total ram usage:        0 bytes
  8026 ;; Hardware stack levels used:    1
  8027 ;; Hardware stack levels required when called:    1
  8028 ;; This function calls:
  8029 ;;		Absolute function
  8030 ;;		_IOCCF6_DefaultInterruptHandler
  8031 ;; This function is called by:
  8032 ;;		_PIN_MANAGER_IOC
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           	psect	text69
  8037  00272E                     __ptext69:
  8038                           	opt callstack 0
  8039  00272E                     _IOCCF6_ISR:
  8040                           	opt callstack 21
  8041                           
  8042                           ;pin_manager.c: 519: if(IOCCF6_InterruptHandler)
  8043                           
  8044                           ;incstack = 0
  8045  00272E  0100               	movlb	0	; () banked
  8046  002730  51E2               	movf	_IOCCF6_InterruptHandler& (0+255),w,b
  8047  002732  11E3               	iorwf	(_IOCCF6_InterruptHandler+1)& (0+255),w,b
  8048  002734  B4D8               	btfsc	status,2,c
  8049  002736  D00B               	goto	i2u438_49
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;pin_manager.c: 520: {;pin_manager.c: 521: IOCCF6_InterruptHandler();
  8053  002738  D801               	call	i2u438_48
  8054  00273A  D009               	goto	i2u438_49
  8055  00273C                     i2u438_48:
  8056  00273C  0005               	push	
  8057  00273E  6EFA               	movwf	pclath,c
  8058  002740  51E2               	movf	_IOCCF6_InterruptHandler& (0+255),w,b
  8059  002742  6EFD               	movwf	tosl,c
  8060  002744  51E3               	movf	(_IOCCF6_InterruptHandler+1)& (0+255),w,b
  8061  002746  6EFE               	movwf	tosh,c
  8062  002748  6AFF               	clrf	tosu,c
  8063  00274A  50FA               	movf	pclath,w,c
  8064  00274C  0012               	return		;indir
  8065  00274E                     i2u438_49:
  8066                           
  8067                           ;pin_manager.c: 522: };pin_manager.c: 523: IOCCFbits.IOCCF6 = 0;
  8068  00274E  010F               	movlb	15	; () banked
  8069  002750  9D1A               	bcf	26,6,b	;volatile
  8070                           
  8071                           ; BSR set to: 15
  8072  002752  0012               	return		;funcret
  8073  002754                     __end_of_IOCCF6_ISR:
  8074                           	opt callstack 0
  8075                           
  8076 ;; *************** function _IOCCF6_DefaultInterruptHandler *****************
  8077 ;; Defined at:
  8078 ;;		line 536 in file "mcc_generated_files/pin_manager.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;		None
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;		None
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  1    wreg      void 
  8085 ;; Registers used:
  8086 ;;		None
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8096 ;;Total ram usage:        0 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; This function calls:
  8099 ;;		Nothing
  8100 ;; This function is called by:
  8101 ;;		_PIN_MANAGER_Initialize
  8102 ;;		_IOCCF6_ISR
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text70
  8107  002C5E                     __ptext70:
  8108                           	opt callstack 0
  8109  002C5E                     _IOCCF6_DefaultInterruptHandler:
  8110                           	opt callstack 21
  8111                           
  8112                           ; BSR set to: 15
  8113                           ;incstack = 0
  8114  002C5E  0012               	return		;funcret
  8115  002C60                     __end_of_IOCCF6_DefaultInterruptHandler:
  8116                           	opt callstack 0
  8117                           
  8118 ;; *************** function _IOCCF5_ISR *****************
  8119 ;; Defined at:
  8120 ;;		line 484 in file "mcc_generated_files/pin_manager.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;		None
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;		None
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  1    wreg      void 
  8127 ;; Registers used:
  8128 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8138 ;;Total ram usage:        0 bytes
  8139 ;; Hardware stack levels used:    1
  8140 ;; Hardware stack levels required when called:    1
  8141 ;; This function calls:
  8142 ;;		Absolute function
  8143 ;;		_IOCCF5_DefaultInterruptHandler
  8144 ;; This function is called by:
  8145 ;;		_PIN_MANAGER_IOC
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text71
  8150  002754                     __ptext71:
  8151                           	opt callstack 0
  8152  002754                     _IOCCF5_ISR:
  8153                           	opt callstack 21
  8154                           
  8155                           ;pin_manager.c: 489: if(IOCCF5_InterruptHandler)
  8156                           
  8157                           ;incstack = 0
  8158  002754  0100               	movlb	0	; () banked
  8159  002756  51E4               	movf	_IOCCF5_InterruptHandler& (0+255),w,b
  8160  002758  11E5               	iorwf	(_IOCCF5_InterruptHandler+1)& (0+255),w,b
  8161  00275A  B4D8               	btfsc	status,2,c
  8162  00275C  D00B               	goto	i2u436_49
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;pin_manager.c: 490: {;pin_manager.c: 491: IOCCF5_InterruptHandler();
  8166  00275E  D801               	call	i2u436_48
  8167  002760  D009               	goto	i2u436_49
  8168  002762                     i2u436_48:
  8169  002762  0005               	push	
  8170  002764  6EFA               	movwf	pclath,c
  8171  002766  51E4               	movf	_IOCCF5_InterruptHandler& (0+255),w,b
  8172  002768  6EFD               	movwf	tosl,c
  8173  00276A  51E5               	movf	(_IOCCF5_InterruptHandler+1)& (0+255),w,b
  8174  00276C  6EFE               	movwf	tosh,c
  8175  00276E  6AFF               	clrf	tosu,c
  8176  002770  50FA               	movf	pclath,w,c
  8177  002772  0012               	return		;indir
  8178  002774                     i2u436_49:
  8179                           
  8180                           ;pin_manager.c: 492: };pin_manager.c: 493: IOCCFbits.IOCCF5 = 0;
  8181  002774  010F               	movlb	15	; () banked
  8182  002776  9B1A               	bcf	26,5,b	;volatile
  8183                           
  8184                           ; BSR set to: 15
  8185  002778  0012               	return		;funcret
  8186  00277A                     __end_of_IOCCF5_ISR:
  8187                           	opt callstack 0
  8188                           
  8189 ;; *************** function _IOCCF5_DefaultInterruptHandler *****************
  8190 ;; Defined at:
  8191 ;;		line 506 in file "mcc_generated_files/pin_manager.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;		None
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      void 
  8198 ;; Registers used:
  8199 ;;		None
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;Total ram usage:        0 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_PIN_MANAGER_Initialize
  8215 ;;		_IOCCF5_ISR
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text72
  8220  002C60                     __ptext72:
  8221                           	opt callstack 0
  8222  002C60                     _IOCCF5_DefaultInterruptHandler:
  8223                           	opt callstack 21
  8224                           
  8225                           ; BSR set to: 15
  8226                           ;incstack = 0
  8227  002C60  0012               	return		;funcret
  8228  002C62                     __end_of_IOCCF5_DefaultInterruptHandler:
  8229                           	opt callstack 0
  8230                           
  8231 ;; *************** function _IOCCF4_ISR *****************
  8232 ;; Defined at:
  8233 ;;		line 454 in file "mcc_generated_files/pin_manager.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;		None
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;		None
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  1    wreg      void 
  8240 ;; Registers used:
  8241 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8251 ;;Total ram usage:        0 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:    1
  8254 ;; This function calls:
  8255 ;;		Absolute function
  8256 ;;		_IOCCF4_DefaultInterruptHandler
  8257 ;; This function is called by:
  8258 ;;		_PIN_MANAGER_IOC
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text73
  8263  00277A                     __ptext73:
  8264                           	opt callstack 0
  8265  00277A                     _IOCCF4_ISR:
  8266                           	opt callstack 21
  8267                           
  8268                           ;pin_manager.c: 459: if(IOCCF4_InterruptHandler)
  8269                           
  8270                           ;incstack = 0
  8271  00277A  0100               	movlb	0	; () banked
  8272  00277C  51E6               	movf	_IOCCF4_InterruptHandler& (0+255),w,b
  8273  00277E  11E7               	iorwf	(_IOCCF4_InterruptHandler+1)& (0+255),w,b
  8274  002780  B4D8               	btfsc	status,2,c
  8275  002782  D00B               	goto	i2u434_49
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;pin_manager.c: 460: {;pin_manager.c: 461: IOCCF4_InterruptHandler();
  8279  002784  D801               	call	i2u434_48
  8280  002786  D009               	goto	i2u434_49
  8281  002788                     i2u434_48:
  8282  002788  0005               	push	
  8283  00278A  6EFA               	movwf	pclath,c
  8284  00278C  51E6               	movf	_IOCCF4_InterruptHandler& (0+255),w,b
  8285  00278E  6EFD               	movwf	tosl,c
  8286  002790  51E7               	movf	(_IOCCF4_InterruptHandler+1)& (0+255),w,b
  8287  002792  6EFE               	movwf	tosh,c
  8288  002794  6AFF               	clrf	tosu,c
  8289  002796  50FA               	movf	pclath,w,c
  8290  002798  0012               	return		;indir
  8291  00279A                     i2u434_49:
  8292                           
  8293                           ;pin_manager.c: 462: };pin_manager.c: 463: IOCCFbits.IOCCF4 = 0;
  8294  00279A  010F               	movlb	15	; () banked
  8295  00279C  991A               	bcf	26,4,b	;volatile
  8296                           
  8297                           ; BSR set to: 15
  8298  00279E  0012               	return		;funcret
  8299  0027A0                     __end_of_IOCCF4_ISR:
  8300                           	opt callstack 0
  8301                           
  8302 ;; *************** function _IOCCF4_DefaultInterruptHandler *****************
  8303 ;; Defined at:
  8304 ;;		line 476 in file "mcc_generated_files/pin_manager.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;		None
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;		None
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  1    wreg      void 
  8311 ;; Registers used:
  8312 ;;		None
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8322 ;;Total ram usage:        0 bytes
  8323 ;; Hardware stack levels used:    1
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		_PIN_MANAGER_Initialize
  8328 ;;		_IOCCF4_ISR
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           	psect	text74
  8333  002C62                     __ptext74:
  8334                           	opt callstack 0
  8335  002C62                     _IOCCF4_DefaultInterruptHandler:
  8336                           	opt callstack 21
  8337                           
  8338                           ; BSR set to: 15
  8339                           ;incstack = 0
  8340  002C62  0012               	return		;funcret
  8341  002C64                     __end_of_IOCCF4_DefaultInterruptHandler:
  8342                           	opt callstack 0
  8343                           
  8344 ;; *************** function _IOCCF3_ISR *****************
  8345 ;; Defined at:
  8346 ;;		line 424 in file "mcc_generated_files/pin_manager.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;Total ram usage:        0 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    1
  8367 ;; This function calls:
  8368 ;;		Absolute function
  8369 ;;		_IOCCF3_DefaultInterruptHandler
  8370 ;; This function is called by:
  8371 ;;		_PIN_MANAGER_IOC
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           	psect	text75
  8376  0027A0                     __ptext75:
  8377                           	opt callstack 0
  8378  0027A0                     _IOCCF3_ISR:
  8379                           	opt callstack 21
  8380                           
  8381                           ;pin_manager.c: 429: if(IOCCF3_InterruptHandler)
  8382                           
  8383                           ;incstack = 0
  8384  0027A0  0100               	movlb	0	; () banked
  8385  0027A2  51E8               	movf	_IOCCF3_InterruptHandler& (0+255),w,b
  8386  0027A4  11E9               	iorwf	(_IOCCF3_InterruptHandler+1)& (0+255),w,b
  8387  0027A6  B4D8               	btfsc	status,2,c
  8388  0027A8  D00B               	goto	i2u432_49
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;pin_manager.c: 430: {;pin_manager.c: 431: IOCCF3_InterruptHandler();
  8392  0027AA  D801               	call	i2u432_48
  8393  0027AC  D009               	goto	i2u432_49
  8394  0027AE                     i2u432_48:
  8395  0027AE  0005               	push	
  8396  0027B0  6EFA               	movwf	pclath,c
  8397  0027B2  51E8               	movf	_IOCCF3_InterruptHandler& (0+255),w,b
  8398  0027B4  6EFD               	movwf	tosl,c
  8399  0027B6  51E9               	movf	(_IOCCF3_InterruptHandler+1)& (0+255),w,b
  8400  0027B8  6EFE               	movwf	tosh,c
  8401  0027BA  6AFF               	clrf	tosu,c
  8402  0027BC  50FA               	movf	pclath,w,c
  8403  0027BE  0012               	return		;indir
  8404  0027C0                     i2u432_49:
  8405                           
  8406                           ;pin_manager.c: 432: };pin_manager.c: 433: IOCCFbits.IOCCF3 = 0;
  8407  0027C0  010F               	movlb	15	; () banked
  8408  0027C2  971A               	bcf	26,3,b	;volatile
  8409                           
  8410                           ; BSR set to: 15
  8411  0027C4  0012               	return		;funcret
  8412  0027C6                     __end_of_IOCCF3_ISR:
  8413                           	opt callstack 0
  8414                           
  8415 ;; *************** function _IOCCF3_DefaultInterruptHandler *****************
  8416 ;; Defined at:
  8417 ;;		line 446 in file "mcc_generated_files/pin_manager.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;		None
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      void 
  8424 ;; Registers used:
  8425 ;;		None
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8435 ;;Total ram usage:        0 bytes
  8436 ;; Hardware stack levels used:    1
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		_PIN_MANAGER_Initialize
  8441 ;;		_IOCCF3_ISR
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text76
  8446  002C64                     __ptext76:
  8447                           	opt callstack 0
  8448  002C64                     _IOCCF3_DefaultInterruptHandler:
  8449                           	opt callstack 21
  8450                           
  8451                           ; BSR set to: 15
  8452                           ;incstack = 0
  8453  002C64  0012               	return		;funcret
  8454  002C66                     __end_of_IOCCF3_DefaultInterruptHandler:
  8455                           	opt callstack 0
  8456                           
  8457 ;; *************** function _IOCBF5_ISR *****************
  8458 ;; Defined at:
  8459 ;;		line 394 in file "mcc_generated_files/pin_manager.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;		None
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;		None
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  1    wreg      void 
  8466 ;; Registers used:
  8467 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8477 ;;Total ram usage:        0 bytes
  8478 ;; Hardware stack levels used:    1
  8479 ;; Hardware stack levels required when called:    1
  8480 ;; This function calls:
  8481 ;;		Absolute function
  8482 ;;		_IOCBF5_DefaultInterruptHandler
  8483 ;; This function is called by:
  8484 ;;		_PIN_MANAGER_IOC
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text77
  8489  0027C6                     __ptext77:
  8490                           	opt callstack 0
  8491  0027C6                     _IOCBF5_ISR:
  8492                           	opt callstack 21
  8493                           
  8494                           ;pin_manager.c: 399: if(IOCBF5_InterruptHandler)
  8495                           
  8496                           ;incstack = 0
  8497  0027C6  0100               	movlb	0	; () banked
  8498  0027C8  51EA               	movf	_IOCBF5_InterruptHandler& (0+255),w,b
  8499  0027CA  11EB               	iorwf	(_IOCBF5_InterruptHandler+1)& (0+255),w,b
  8500  0027CC  B4D8               	btfsc	status,2,c
  8501  0027CE  D00B               	goto	i2u430_49
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;pin_manager.c: 400: {;pin_manager.c: 401: IOCBF5_InterruptHandler();
  8505  0027D0  D801               	call	i2u430_48
  8506  0027D2  D009               	goto	i2u430_49
  8507  0027D4                     i2u430_48:
  8508  0027D4  0005               	push	
  8509  0027D6  6EFA               	movwf	pclath,c
  8510  0027D8  51EA               	movf	_IOCBF5_InterruptHandler& (0+255),w,b
  8511  0027DA  6EFD               	movwf	tosl,c
  8512  0027DC  51EB               	movf	(_IOCBF5_InterruptHandler+1)& (0+255),w,b
  8513  0027DE  6EFE               	movwf	tosh,c
  8514  0027E0  6AFF               	clrf	tosu,c
  8515  0027E2  50FA               	movf	pclath,w,c
  8516  0027E4  0012               	return		;indir
  8517  0027E6                     i2u430_49:
  8518                           
  8519                           ;pin_manager.c: 402: };pin_manager.c: 403: IOCBFbits.IOCBF5 = 0;
  8520  0027E6  010F               	movlb	15	; () banked
  8521  0027E8  9B12               	bcf	18,5,b	;volatile
  8522                           
  8523                           ; BSR set to: 15
  8524  0027EA  0012               	return		;funcret
  8525  0027EC                     __end_of_IOCBF5_ISR:
  8526                           	opt callstack 0
  8527                           
  8528 ;; *************** function _IOCBF5_DefaultInterruptHandler *****************
  8529 ;; Defined at:
  8530 ;;		line 416 in file "mcc_generated_files/pin_manager.c"
  8531 ;; Parameters:    Size  Location     Type
  8532 ;;		None
  8533 ;; Auto vars:     Size  Location     Type
  8534 ;;		None
  8535 ;; Return value:  Size  Location     Type
  8536 ;;                  1    wreg      void 
  8537 ;; Registers used:
  8538 ;;		None
  8539 ;; Tracked objects:
  8540 ;;		On entry : 0/0
  8541 ;;		On exit  : 0/0
  8542 ;;		Unchanged: 0/0
  8543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8548 ;;Total ram usage:        0 bytes
  8549 ;; Hardware stack levels used:    1
  8550 ;; This function calls:
  8551 ;;		Nothing
  8552 ;; This function is called by:
  8553 ;;		_PIN_MANAGER_Initialize
  8554 ;;		_IOCBF5_ISR
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text78
  8559  002C66                     __ptext78:
  8560                           	opt callstack 0
  8561  002C66                     _IOCBF5_DefaultInterruptHandler:
  8562                           	opt callstack 21
  8563                           
  8564                           ; BSR set to: 15
  8565                           ;incstack = 0
  8566  002C66  0012               	return		;funcret
  8567  002C68                     __end_of_IOCBF5_DefaultInterruptHandler:
  8568                           	opt callstack 0
  8569                           
  8570 ;; *************** function _IOCAF4_ISR *****************
  8571 ;; Defined at:
  8572 ;;		line 364 in file "mcc_generated_files/pin_manager.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;		None
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;		None
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1    wreg      void 
  8579 ;; Registers used:
  8580 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8590 ;;Total ram usage:        0 bytes
  8591 ;; Hardware stack levels used:    1
  8592 ;; Hardware stack levels required when called:    1
  8593 ;; This function calls:
  8594 ;;		Absolute function
  8595 ;;		_IOCAF4_DefaultInterruptHandler
  8596 ;; This function is called by:
  8597 ;;		_PIN_MANAGER_IOC
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text79
  8602  0027EC                     __ptext79:
  8603                           	opt callstack 0
  8604  0027EC                     _IOCAF4_ISR:
  8605                           	opt callstack 21
  8606                           
  8607                           ;pin_manager.c: 369: if(IOCAF4_InterruptHandler)
  8608                           
  8609                           ;incstack = 0
  8610  0027EC  0100               	movlb	0	; () banked
  8611  0027EE  51EC               	movf	_IOCAF4_InterruptHandler& (0+255),w,b
  8612  0027F0  11ED               	iorwf	(_IOCAF4_InterruptHandler+1)& (0+255),w,b
  8613  0027F2  B4D8               	btfsc	status,2,c
  8614  0027F4  D00B               	goto	i2u428_49
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;pin_manager.c: 370: {;pin_manager.c: 371: IOCAF4_InterruptHandler();
  8618  0027F6  D801               	call	i2u428_48
  8619  0027F8  D009               	goto	i2u428_49
  8620  0027FA                     i2u428_48:
  8621  0027FA  0005               	push	
  8622  0027FC  6EFA               	movwf	pclath,c
  8623  0027FE  51EC               	movf	_IOCAF4_InterruptHandler& (0+255),w,b
  8624  002800  6EFD               	movwf	tosl,c
  8625  002802  51ED               	movf	(_IOCAF4_InterruptHandler+1)& (0+255),w,b
  8626  002804  6EFE               	movwf	tosh,c
  8627  002806  6AFF               	clrf	tosu,c
  8628  002808  50FA               	movf	pclath,w,c
  8629  00280A  0012               	return		;indir
  8630  00280C                     i2u428_49:
  8631                           
  8632                           ;pin_manager.c: 372: };pin_manager.c: 373: IOCAFbits.IOCAF4 = 0;
  8633  00280C  010F               	movlb	15	; () banked
  8634  00280E  990A               	bcf	10,4,b	;volatile
  8635                           
  8636                           ; BSR set to: 15
  8637  002810  0012               	return		;funcret
  8638  002812                     __end_of_IOCAF4_ISR:
  8639                           	opt callstack 0
  8640                           
  8641 ;; *************** function _IOCAF4_DefaultInterruptHandler *****************
  8642 ;; Defined at:
  8643 ;;		line 386 in file "mcc_generated_files/pin_manager.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;		None
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;		None
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      void 
  8650 ;; Registers used:
  8651 ;;		None
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8661 ;;Total ram usage:        0 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; This function calls:
  8664 ;;		Nothing
  8665 ;; This function is called by:
  8666 ;;		_PIN_MANAGER_Initialize
  8667 ;;		_IOCAF4_ISR
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           	psect	text80
  8672  002C68                     __ptext80:
  8673                           	opt callstack 0
  8674  002C68                     _IOCAF4_DefaultInterruptHandler:
  8675                           	opt callstack 21
  8676                           
  8677                           ; BSR set to: 15
  8678                           ;incstack = 0
  8679  002C68  0012               	return		;funcret
  8680  002C6A                     __end_of_IOCAF4_DefaultInterruptHandler:
  8681                           	opt callstack 0
  8682                           
  8683 ;; *************** function _IOCAF3_ISR *****************
  8684 ;; Defined at:
  8685 ;;		line 334 in file "mcc_generated_files/pin_manager.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:    1
  8706 ;; This function calls:
  8707 ;;		Absolute function
  8708 ;;		_IOCAF3_DefaultInterruptHandler
  8709 ;; This function is called by:
  8710 ;;		_PIN_MANAGER_IOC
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text81
  8715  002812                     __ptext81:
  8716                           	opt callstack 0
  8717  002812                     _IOCAF3_ISR:
  8718                           	opt callstack 21
  8719                           
  8720                           ;pin_manager.c: 339: if(IOCAF3_InterruptHandler)
  8721                           
  8722                           ;incstack = 0
  8723  002812  0100               	movlb	0	; () banked
  8724  002814  51EE               	movf	_IOCAF3_InterruptHandler& (0+255),w,b
  8725  002816  11EF               	iorwf	(_IOCAF3_InterruptHandler+1)& (0+255),w,b
  8726  002818  B4D8               	btfsc	status,2,c
  8727  00281A  D00B               	goto	i2u426_49
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;pin_manager.c: 340: {;pin_manager.c: 341: IOCAF3_InterruptHandler();
  8731  00281C  D801               	call	i2u426_48
  8732  00281E  D009               	goto	i2u426_49
  8733  002820                     i2u426_48:
  8734  002820  0005               	push	
  8735  002822  6EFA               	movwf	pclath,c
  8736  002824  51EE               	movf	_IOCAF3_InterruptHandler& (0+255),w,b
  8737  002826  6EFD               	movwf	tosl,c
  8738  002828  51EF               	movf	(_IOCAF3_InterruptHandler+1)& (0+255),w,b
  8739  00282A  6EFE               	movwf	tosh,c
  8740  00282C  6AFF               	clrf	tosu,c
  8741  00282E  50FA               	movf	pclath,w,c
  8742  002830  0012               	return		;indir
  8743  002832                     i2u426_49:
  8744                           
  8745                           ;pin_manager.c: 342: };pin_manager.c: 343: IOCAFbits.IOCAF3 = 0;
  8746  002832  010F               	movlb	15	; () banked
  8747  002834  970A               	bcf	10,3,b	;volatile
  8748                           
  8749                           ; BSR set to: 15
  8750  002836  0012               	return		;funcret
  8751  002838                     __end_of_IOCAF3_ISR:
  8752                           	opt callstack 0
  8753                           
  8754 ;; *************** function _IOCAF3_DefaultInterruptHandler *****************
  8755 ;; Defined at:
  8756 ;;		line 356 in file "mcc_generated_files/pin_manager.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;		None
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;		None
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		None
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8774 ;;Total ram usage:        0 bytes
  8775 ;; Hardware stack levels used:    1
  8776 ;; This function calls:
  8777 ;;		Nothing
  8778 ;; This function is called by:
  8779 ;;		_PIN_MANAGER_Initialize
  8780 ;;		_IOCAF3_ISR
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text82
  8785  002C6A                     __ptext82:
  8786                           	opt callstack 0
  8787  002C6A                     _IOCAF3_DefaultInterruptHandler:
  8788                           	opt callstack 21
  8789                           
  8790                           ; BSR set to: 15
  8791                           ;incstack = 0
  8792  002C6A  0012               	return		;funcret
  8793  002C6C                     __end_of_IOCAF3_DefaultInterruptHandler:
  8794                           	opt callstack 0
  8795                           
  8796 ;; *************** function _IOCAF1_ISR *****************
  8797 ;; Defined at:
  8798 ;;		line 304 in file "mcc_generated_files/pin_manager.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;		None
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;		None
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  1    wreg      void 
  8805 ;; Registers used:
  8806 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8816 ;;Total ram usage:        0 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:    1
  8819 ;; This function calls:
  8820 ;;		Absolute function
  8821 ;;		_IOCAF1_DefaultInterruptHandler
  8822 ;; This function is called by:
  8823 ;;		_PIN_MANAGER_IOC
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text83
  8828  002838                     __ptext83:
  8829                           	opt callstack 0
  8830  002838                     _IOCAF1_ISR:
  8831                           	opt callstack 21
  8832                           
  8833                           ;pin_manager.c: 309: if(IOCAF1_InterruptHandler)
  8834                           
  8835                           ;incstack = 0
  8836  002838  0100               	movlb	0	; () banked
  8837  00283A  51F0               	movf	_IOCAF1_InterruptHandler& (0+255),w,b
  8838  00283C  11F1               	iorwf	(_IOCAF1_InterruptHandler+1)& (0+255),w,b
  8839  00283E  B4D8               	btfsc	status,2,c
  8840  002840  D00B               	goto	i2u424_49
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;pin_manager.c: 310: {;pin_manager.c: 311: IOCAF1_InterruptHandler();
  8844  002842  D801               	call	i2u424_48
  8845  002844  D009               	goto	i2u424_49
  8846  002846                     i2u424_48:
  8847  002846  0005               	push	
  8848  002848  6EFA               	movwf	pclath,c
  8849  00284A  51F0               	movf	_IOCAF1_InterruptHandler& (0+255),w,b
  8850  00284C  6EFD               	movwf	tosl,c
  8851  00284E  51F1               	movf	(_IOCAF1_InterruptHandler+1)& (0+255),w,b
  8852  002850  6EFE               	movwf	tosh,c
  8853  002852  6AFF               	clrf	tosu,c
  8854  002854  50FA               	movf	pclath,w,c
  8855  002856  0012               	return		;indir
  8856  002858                     i2u424_49:
  8857                           
  8858                           ;pin_manager.c: 312: };pin_manager.c: 313: IOCAFbits.IOCAF1 = 0;
  8859  002858  010F               	movlb	15	; () banked
  8860  00285A  930A               	bcf	10,1,b	;volatile
  8861                           
  8862                           ; BSR set to: 15
  8863  00285C  0012               	return		;funcret
  8864  00285E                     __end_of_IOCAF1_ISR:
  8865                           	opt callstack 0
  8866                           
  8867 ;; *************** function _IOCAF1_DefaultInterruptHandler *****************
  8868 ;; Defined at:
  8869 ;;		line 326 in file "mcc_generated_files/pin_manager.c"
  8870 ;; Parameters:    Size  Location     Type
  8871 ;;		None
  8872 ;; Auto vars:     Size  Location     Type
  8873 ;;		None
  8874 ;; Return value:  Size  Location     Type
  8875 ;;                  1    wreg      void 
  8876 ;; Registers used:
  8877 ;;		None
  8878 ;; Tracked objects:
  8879 ;;		On entry : 0/0
  8880 ;;		On exit  : 0/0
  8881 ;;		Unchanged: 0/0
  8882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8887 ;;Total ram usage:        0 bytes
  8888 ;; Hardware stack levels used:    1
  8889 ;; This function calls:
  8890 ;;		Nothing
  8891 ;; This function is called by:
  8892 ;;		_PIN_MANAGER_Initialize
  8893 ;;		_IOCAF1_ISR
  8894 ;; This function uses a non-reentrant model
  8895 ;;
  8896                           
  8897                           	psect	text84
  8898  002C6C                     __ptext84:
  8899                           	opt callstack 0
  8900  002C6C                     _IOCAF1_DefaultInterruptHandler:
  8901                           	opt callstack 21
  8902                           
  8903                           ; BSR set to: 15
  8904                           ;incstack = 0
  8905  002C6C  0012               	return		;funcret
  8906  002C6E                     __end_of_IOCAF1_DefaultInterruptHandler:
  8907                           	opt callstack 0
  8908                           
  8909 ;; *************** function _IOCAF0_ISR *****************
  8910 ;; Defined at:
  8911 ;;		line 274 in file "mcc_generated_files/pin_manager.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;		None
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;		None
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1    wreg      void 
  8918 ;; Registers used:
  8919 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8929 ;;Total ram usage:        0 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    1
  8932 ;; This function calls:
  8933 ;;		Absolute function
  8934 ;;		_IOCAF0_DefaultInterruptHandler
  8935 ;; This function is called by:
  8936 ;;		_PIN_MANAGER_IOC
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text85
  8941  00285E                     __ptext85:
  8942                           	opt callstack 0
  8943  00285E                     _IOCAF0_ISR:
  8944                           	opt callstack 21
  8945                           
  8946                           ;pin_manager.c: 279: if(IOCAF0_InterruptHandler)
  8947                           
  8948                           ;incstack = 0
  8949  00285E  0100               	movlb	0	; () banked
  8950  002860  51F2               	movf	_IOCAF0_InterruptHandler& (0+255),w,b
  8951  002862  11F3               	iorwf	(_IOCAF0_InterruptHandler+1)& (0+255),w,b
  8952  002864  B4D8               	btfsc	status,2,c
  8953  002866  D00B               	goto	i2u422_49
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;pin_manager.c: 280: {;pin_manager.c: 281: IOCAF0_InterruptHandler();
  8957  002868  D801               	call	i2u422_48
  8958  00286A  D009               	goto	i2u422_49
  8959  00286C                     i2u422_48:
  8960  00286C  0005               	push	
  8961  00286E  6EFA               	movwf	pclath,c
  8962  002870  51F2               	movf	_IOCAF0_InterruptHandler& (0+255),w,b
  8963  002872  6EFD               	movwf	tosl,c
  8964  002874  51F3               	movf	(_IOCAF0_InterruptHandler+1)& (0+255),w,b
  8965  002876  6EFE               	movwf	tosh,c
  8966  002878  6AFF               	clrf	tosu,c
  8967  00287A  50FA               	movf	pclath,w,c
  8968  00287C  0012               	return		;indir
  8969  00287E                     i2u422_49:
  8970                           
  8971                           ;pin_manager.c: 282: };pin_manager.c: 283: IOCAFbits.IOCAF0 = 0;
  8972  00287E  010F               	movlb	15	; () banked
  8973  002880  910A               	bcf	10,0,b	;volatile
  8974                           
  8975                           ; BSR set to: 15
  8976  002882  0012               	return		;funcret
  8977  002884                     __end_of_IOCAF0_ISR:
  8978                           	opt callstack 0
  8979                           
  8980 ;; *************** function _IOCAF0_DefaultInterruptHandler *****************
  8981 ;; Defined at:
  8982 ;;		line 296 in file "mcc_generated_files/pin_manager.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;		None
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;		None
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  1    wreg      void 
  8989 ;; Registers used:
  8990 ;;		None
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9000 ;;Total ram usage:        0 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; This function calls:
  9003 ;;		Nothing
  9004 ;; This function is called by:
  9005 ;;		_PIN_MANAGER_Initialize
  9006 ;;		_IOCAF0_ISR
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           	psect	text86
  9011  002C6E                     __ptext86:
  9012                           	opt callstack 0
  9013  002C6E                     _IOCAF0_DefaultInterruptHandler:
  9014                           	opt callstack 21
  9015                           
  9016                           ; BSR set to: 15
  9017                           ;incstack = 0
  9018  002C6E  0012               	return		;funcret
  9019  002C70                     __end_of_IOCAF0_DefaultInterruptHandler:
  9020                           	opt callstack 0
  9021                           
  9022 ;; *************** function _INT2_ISR *****************
  9023 ;; Defined at:
  9024 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;		None
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;		None
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  1    wreg      void 
  9031 ;; Registers used:
  9032 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9033 ;; Tracked objects:
  9034 ;;		On entry : 0/0
  9035 ;;		On exit  : 0/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9042 ;;Total ram usage:        0 bytes
  9043 ;; Hardware stack levels used:    1
  9044 ;; Hardware stack levels required when called:    2
  9045 ;; This function calls:
  9046 ;;		_INT2_CallBack
  9047 ;; This function is called by:
  9048 ;;		_INTERRUPT_InterruptManager
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           	psect	text87
  9053  002C02                     __ptext87:
  9054                           	opt callstack 0
  9055  002C02                     _INT2_ISR:
  9056                           	opt callstack 21
  9057                           
  9058                           ;ext_int.c: 88: (PIR0bits.INT2IF = 0);
  9059                           
  9060                           ;incstack = 0
  9061  002C02  010E               	movlb	14	; () banked
  9062  002C04  95CA               	bcf	202,2,b	;volatile
  9063                           
  9064                           ; BSR set to: 14
  9065                           ;ext_int.c: 91: INT2_CallBack();
  9066  002C06  EC98  F014         	call	_INT2_CallBack	;wreg free
  9067  002C0A  0012               	return		;funcret
  9068  002C0C                     __end_of_INT2_ISR:
  9069                           	opt callstack 0
  9070                           
  9071 ;; *************** function _INT2_CallBack *****************
  9072 ;; Defined at:
  9073 ;;		line 95 in file "mcc_generated_files/ext_int.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;		None
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;		None
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  1    wreg      void 
  9080 ;; Registers used:
  9081 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9082 ;; Tracked objects:
  9083 ;;		On entry : 0/0
  9084 ;;		On exit  : 0/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9091 ;;Total ram usage:        0 bytes
  9092 ;; Hardware stack levels used:    1
  9093 ;; Hardware stack levels required when called:    1
  9094 ;; This function calls:
  9095 ;;		Absolute function
  9096 ;;		_INT2_DefaultInterruptHandler
  9097 ;; This function is called by:
  9098 ;;		_INT2_ISR
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text88
  9103  002930                     __ptext88:
  9104                           	opt callstack 0
  9105  002930                     _INT2_CallBack:
  9106                           	opt callstack 21
  9107                           
  9108                           ;ext_int.c: 98: if(INT2_InterruptHandler)
  9109                           
  9110                           ;incstack = 0
  9111  002930  0100               	movlb	0	; () banked
  9112  002932  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
  9113  002934  11F9               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
  9114  002936  B4D8               	btfsc	status,2,c
  9115  002938  0012               	return	
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;ext_int.c: 99: {;ext_int.c: 100: INT2_InterruptHandler();
  9119  00293A  D801               	call	i2u407_48
  9120  00293C  0012               	return	
  9121  00293E                     i2u407_48:
  9122  00293E  0005               	push	
  9123  002940  6EFA               	movwf	pclath,c
  9124  002942  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
  9125  002944  6EFD               	movwf	tosl,c
  9126  002946  51F9               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
  9127  002948  6EFE               	movwf	tosh,c
  9128  00294A  6AFF               	clrf	tosu,c
  9129  00294C  50FA               	movf	pclath,w,c
  9130  00294E  0012               	return		;indir
  9131  002950                     __end_of_INT2_CallBack:
  9132                           	opt callstack 0
  9133                           
  9134 ;; *************** function _INT2_DefaultInterruptHandler *****************
  9135 ;; Defined at:
  9136 ;;		line 108 in file "mcc_generated_files/ext_int.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;		None
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;		None
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  1    wreg      void 
  9143 ;; Registers used:
  9144 ;;		None
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9154 ;;Total ram usage:        0 bytes
  9155 ;; Hardware stack levels used:    1
  9156 ;; This function calls:
  9157 ;;		Nothing
  9158 ;; This function is called by:
  9159 ;;		_EXT_INT_Initialize
  9160 ;;		_INT2_CallBack
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           	psect	text89
  9165  002C70                     __ptext89:
  9166                           	opt callstack 0
  9167  002C70                     _INT2_DefaultInterruptHandler:
  9168                           	opt callstack 21
  9169                           
  9170                           ;incstack = 0
  9171  002C70  0012               	return		;funcret
  9172  002C72                     __end_of_INT2_DefaultInterruptHandler:
  9173                           	opt callstack 0
  9174                           
  9175 ;; *************** function _INT1_ISR *****************
  9176 ;; Defined at:
  9177 ;;		line 60 in file "mcc_generated_files/ext_int.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;		None
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      void 
  9184 ;; Registers used:
  9185 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9195 ;;Total ram usage:        0 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; Hardware stack levels required when called:    2
  9198 ;; This function calls:
  9199 ;;		_INT1_CallBack
  9200 ;; This function is called by:
  9201 ;;		_INTERRUPT_InterruptManager
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	text90
  9206  002C0C                     __ptext90:
  9207                           	opt callstack 0
  9208  002C0C                     _INT1_ISR:
  9209                           	opt callstack 21
  9210                           
  9211                           ;ext_int.c: 62: (PIR0bits.INT1IF = 0);
  9212                           
  9213                           ;incstack = 0
  9214  002C0C  010E               	movlb	14	; () banked
  9215  002C0E  93CA               	bcf	202,1,b	;volatile
  9216                           
  9217                           ; BSR set to: 14
  9218                           ;ext_int.c: 65: INT1_CallBack();
  9219  002C10  ECA8  F014         	call	_INT1_CallBack	;wreg free
  9220  002C14  0012               	return		;funcret
  9221  002C16                     __end_of_INT1_ISR:
  9222                           	opt callstack 0
  9223                           
  9224 ;; *************** function _INT1_CallBack *****************
  9225 ;; Defined at:
  9226 ;;		line 69 in file "mcc_generated_files/ext_int.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;		None
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;		None
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  1    wreg      void 
  9233 ;; Registers used:
  9234 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9244 ;;Total ram usage:        0 bytes
  9245 ;; Hardware stack levels used:    1
  9246 ;; Hardware stack levels required when called:    1
  9247 ;; This function calls:
  9248 ;;		Absolute function
  9249 ;;		_INT1_DefaultInterruptHandler
  9250 ;; This function is called by:
  9251 ;;		_INT1_ISR
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           	psect	text91
  9256  002950                     __ptext91:
  9257                           	opt callstack 0
  9258  002950                     _INT1_CallBack:
  9259                           	opt callstack 21
  9260                           
  9261                           ;ext_int.c: 72: if(INT1_InterruptHandler)
  9262                           
  9263                           ;incstack = 0
  9264  002950  0100               	movlb	0	; () banked
  9265  002952  51FA               	movf	_INT1_InterruptHandler& (0+255),w,b
  9266  002954  11FB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  9267  002956  B4D8               	btfsc	status,2,c
  9268  002958  0012               	return	
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;ext_int.c: 73: {;ext_int.c: 74: INT1_InterruptHandler();
  9272  00295A  D801               	call	i2u405_48
  9273  00295C  0012               	return	
  9274  00295E                     i2u405_48:
  9275  00295E  0005               	push	
  9276  002960  6EFA               	movwf	pclath,c
  9277  002962  51FA               	movf	_INT1_InterruptHandler& (0+255),w,b
  9278  002964  6EFD               	movwf	tosl,c
  9279  002966  51FB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  9280  002968  6EFE               	movwf	tosh,c
  9281  00296A  6AFF               	clrf	tosu,c
  9282  00296C  50FA               	movf	pclath,w,c
  9283  00296E  0012               	return		;indir
  9284  002970                     __end_of_INT1_CallBack:
  9285                           	opt callstack 0
  9286                           
  9287 ;; *************** function _INT1_DefaultInterruptHandler *****************
  9288 ;; Defined at:
  9289 ;;		line 82 in file "mcc_generated_files/ext_int.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;		None
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;		None
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1    wreg      void 
  9296 ;; Registers used:
  9297 ;;		None
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9307 ;;Total ram usage:        0 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; This function calls:
  9310 ;;		Nothing
  9311 ;; This function is called by:
  9312 ;;		_EXT_INT_Initialize
  9313 ;;		_INT1_CallBack
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317                           	psect	text92
  9318  002C72                     __ptext92:
  9319                           	opt callstack 0
  9320  002C72                     _INT1_DefaultInterruptHandler:
  9321                           	opt callstack 21
  9322                           
  9323                           ;incstack = 0
  9324  002C72  0012               	return		;funcret
  9325  002C74                     __end_of_INT1_DefaultInterruptHandler:
  9326                           	opt callstack 0
  9327                           
  9328 ;; *************** function _INT0_ISR *****************
  9329 ;; Defined at:
  9330 ;;		line 34 in file "mcc_generated_files/ext_int.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;		None
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;		None
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      void 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9348 ;;Total ram usage:        0 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    9
  9351 ;; This function calls:
  9352 ;;		_INT0_CallBack
  9353 ;; This function is called by:
  9354 ;;		_INTERRUPT_InterruptManager
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text93
  9359  002C16                     __ptext93:
  9360                           	opt callstack 0
  9361  002C16                     _INT0_ISR:
  9362                           	opt callstack 14
  9363                           
  9364                           ;ext_int.c: 36: (PIR0bits.INT0IF = 0);
  9365                           
  9366                           ;incstack = 0
  9367  002C16  010E               	movlb	14	; () banked
  9368  002C18  91CA               	bcf	202,0,b	;volatile
  9369                           
  9370                           ; BSR set to: 14
  9371                           ;ext_int.c: 39: INT0_CallBack();
  9372  002C1A  ECB8  F014         	call	_INT0_CallBack	;wreg free
  9373  002C1E  0012               	return		;funcret
  9374  002C20                     __end_of_INT0_ISR:
  9375                           	opt callstack 0
  9376                           
  9377 ;; *************** function _INT0_CallBack *****************
  9378 ;; Defined at:
  9379 ;;		line 43 in file "mcc_generated_files/ext_int.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;		None
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;		None
  9384 ;; Return value:  Size  Location     Type
  9385 ;;                  1    wreg      void 
  9386 ;; Registers used:
  9387 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9388 ;; Tracked objects:
  9389 ;;		On entry : 0/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9397 ;;Total ram usage:        0 bytes
  9398 ;; Hardware stack levels used:    1
  9399 ;; Hardware stack levels required when called:    8
  9400 ;; This function calls:
  9401 ;;		Absolute function
  9402 ;;		_INT0_Custom_ISR
  9403 ;;		_INT0_DefaultInterruptHandler
  9404 ;; This function is called by:
  9405 ;;		_INT0_ISR
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           	psect	text94
  9410  002970                     __ptext94:
  9411                           	opt callstack 0
  9412  002970                     _INT0_CallBack:
  9413                           	opt callstack 14
  9414                           
  9415                           ;ext_int.c: 46: if(INT0_InterruptHandler)
  9416                           
  9417                           ;incstack = 0
  9418  002970  0100               	movlb	0	; () banked
  9419  002972  51FC               	movf	_INT0_InterruptHandler& (0+255),w,b
  9420  002974  11FD               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
  9421  002976  B4D8               	btfsc	status,2,c
  9422  002978  0012               	return	
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;ext_int.c: 47: {;ext_int.c: 48: INT0_InterruptHandler();
  9426  00297A  D801               	call	i2u403_48
  9427  00297C  0012               	return	
  9428  00297E                     i2u403_48:
  9429  00297E  0005               	push	
  9430  002980  6EFA               	movwf	pclath,c
  9431  002982  51FC               	movf	_INT0_InterruptHandler& (0+255),w,b
  9432  002984  6EFD               	movwf	tosl,c
  9433  002986  51FD               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
  9434  002988  6EFE               	movwf	tosh,c
  9435  00298A  6AFF               	clrf	tosu,c
  9436  00298C  50FA               	movf	pclath,w,c
  9437  00298E  0012               	return		;indir
  9438  002990                     __end_of_INT0_CallBack:
  9439                           	opt callstack 0
  9440                           
  9441 ;; *************** function _INT0_Custom_ISR *****************
  9442 ;; Defined at:
  9443 ;;		line 33 in file "main.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;		None
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  index           1   17[COMRAM] unsigned char 
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  1    wreg      void 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2, status,0, cstack
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9461 ;;Total ram usage:        1 bytes
  9462 ;; Hardware stack levels used:    1
  9463 ;; Hardware stack levels required when called:    7
  9464 ;; This function calls:
  9465 ;;		_I2C_SendCommand
  9466 ;;		_ext_rf_runcmd
  9467 ;; This function is called by:
  9468 ;;		_main
  9469 ;;		_INT0_CallBack
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text95
  9474  002A50                     __ptext95:
  9475                           	opt callstack 0
  9476  002A50                     _INT0_Custom_ISR:
  9477                           	opt callstack 14
  9478                           
  9479                           ;main.c: 35: unsigned char index = I2C_SendCommand(EXT_TARGET_RF_RX,0x50);
  9480                           
  9481                           ;incstack = 0
  9482  002A50  0E50               	movlw	80
  9483  002A52  6E34               	movwf	I2C_SendCommand@CMD,c
  9484  002A54  5022               	movf	_EXT_TARGET_RF_RX,w,c
  9485  002A56  EC83  F010         	call	_I2C_SendCommand
  9486  002A5A  6E3A               	movwf	INT0_Custom_ISR@index,c
  9487                           
  9488                           ;main.c: 37: if(index == 0x01) {
  9489  002A5C  043A               	decf	INT0_Custom_ISR@index,w,c
  9490  002A5E  A4D8               	btfss	status,2,c
  9491  002A60  0012               	return	
  9492                           
  9493                           ;main.c: 38: ext_rf_runcmd();
  9494  002A62  EC08  F00F         	call	_ext_rf_runcmd	;wreg free
  9495  002A66  0012               	return		;funcret
  9496  002A68                     __end_of_INT0_Custom_ISR:
  9497                           	opt callstack 0
  9498                           
  9499 ;; *************** function _INT0_DefaultInterruptHandler *****************
  9500 ;; Defined at:
  9501 ;;		line 56 in file "mcc_generated_files/ext_int.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		None
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9519 ;;Total ram usage:        0 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; This function calls:
  9522 ;;		Nothing
  9523 ;; This function is called by:
  9524 ;;		_EXT_INT_Initialize
  9525 ;;		_INT0_CallBack
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           	psect	text96
  9530  002C74                     __ptext96:
  9531                           	opt callstack 0
  9532  002C74                     _INT0_DefaultInterruptHandler:
  9533                           	opt callstack 21
  9534                           
  9535                           ;incstack = 0
  9536  002C74  0012               	return		;funcret
  9537  002C76                     __end_of_INT0_DefaultInterruptHandler:
  9538                           	opt callstack 0
  9539                           
  9540 ;; *************** function _ext_rf_runcmd *****************
  9541 ;; Defined at:
  9542 ;;		line 19 in file "ext_rf_receiver.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;		None
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;  dx              1   16[COMRAM] unsigned char 
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      void 
  9549 ;; Registers used:
  9550 ;;		wreg, status,2, status,0, cstack
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9560 ;;Total ram usage:        1 bytes
  9561 ;; Hardware stack levels used:    1
  9562 ;; Hardware stack levels required when called:    6
  9563 ;; This function calls:
  9564 ;;		_I2C_SendCommand
  9565 ;;		_MRF89XA_ReadAllConfigs
  9566 ;;		_MRF89XA_SendData
  9567 ;;		_ToggleLed
  9568 ;;		i2_SetLedBlink
  9569 ;; This function is called by:
  9570 ;;		_INT0_Custom_ISR
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           
  9574                           	psect	text97
  9575  001E10                     __ptext97:
  9576                           	opt callstack 0
  9577  001E10                     _ext_rf_runcmd:
  9578                           	opt callstack 14
  9579                           
  9580                           ;ext_rf_receiver.c: 21: unsigned char dx = I2C_SendCommand(EXT_TARGET_RF_RX, 0x51);
  9581                           
  9582                           ;incstack = 0
  9583  001E10  0E51               	movlw	81
  9584  001E12  6E34               	movwf	I2C_SendCommand@CMD,c
  9585  001E14  5022               	movf	_EXT_TARGET_RF_RX,w,c
  9586  001E16  EC83  F010         	call	_I2C_SendCommand
  9587  001E1A  6E39               	movwf	ext_rf_runcmd@dx,c
  9588                           
  9589                           ;ext_rf_receiver.c: 22: if((dx & 0b0001) > 0)
  9590  001E1C  A039               	btfss	ext_rf_runcmd@dx,0,c
  9591  001E1E  D007               	goto	i2l1694
  9592                           
  9593                           ;ext_rf_receiver.c: 23: ToggleLed(RGB_R);
  9594  001E20  0E00               	movlw	0
  9595  001E22  6E2A               	movwf	ToggleLed@ledIndex+1,c
  9596  001E24  0E03               	movlw	3
  9597  001E26  6E29               	movwf	ToggleLed@ledIndex,c
  9598  001E28  EC39  F00E         	call	_ToggleLed	;wreg free
  9599  001E2C  0012               	return	
  9600  001E2E                     i2l1694:
  9601                           
  9602                           ;ext_rf_receiver.c: 24: else if ((dx & 0b0010) > 0)
  9603  001E2E  A239               	btfss	ext_rf_runcmd@dx,1,c
  9604  001E30  D007               	goto	i2l1696
  9605                           
  9606                           ;ext_rf_receiver.c: 25: ToggleLed(RGB_G);
  9607  001E32  0E00               	movlw	0
  9608  001E34  6E2A               	movwf	ToggleLed@ledIndex+1,c
  9609  001E36  0E04               	movlw	4
  9610  001E38  6E29               	movwf	ToggleLed@ledIndex,c
  9611  001E3A  EC39  F00E         	call	_ToggleLed	;wreg free
  9612  001E3E  0012               	return	
  9613  001E40                     i2l1696:
  9614                           
  9615                           ;ext_rf_receiver.c: 26: else if ((dx & 0b0100) > 0)
  9616  001E40  A439               	btfss	ext_rf_runcmd@dx,2,c
  9617  001E42  D007               	goto	i2l1698
  9618                           
  9619                           ;ext_rf_receiver.c: 27: ToggleLed(RGB_B);
  9620  001E44  0E00               	movlw	0
  9621  001E46  6E2A               	movwf	ToggleLed@ledIndex+1,c
  9622  001E48  0E05               	movlw	5
  9623  001E4A  6E29               	movwf	ToggleLed@ledIndex,c
  9624  001E4C  EC39  F00E         	call	_ToggleLed	;wreg free
  9625  001E50  0012               	return	
  9626  001E52                     i2l1698:
  9627                           
  9628                           ;ext_rf_receiver.c: 28: else if ((dx & 0b1000) > 0)
  9629  001E52  A639               	btfss	ext_rf_runcmd@dx,3,c
  9630  001E54  0012               	return	
  9631                           
  9632                           ;ext_rf_receiver.c: 29: {;ext_rf_receiver.c: 30: MRF89XA_ReadAllConfigs();
  9633  001E56  EC42  F014         	call	_MRF89XA_ReadAllConfigs	;wreg free
  9634                           
  9635                           ;ext_rf_receiver.c: 32: SetLedBlink(B,20,20,0,-1);
  9636  001E5A  0E00               	movlw	0
  9637  001E5C  6E2A               	movwf	i2SetLedBlink@ledIndex+1,c
  9638  001E5E  0E02               	movlw	2
  9639  001E60  6E29               	movwf	i2SetLedBlink@ledIndex,c
  9640  001E62  0E00               	movlw	0
  9641  001E64  6E2C               	movwf	i2SetLedBlink@OnTime+1,c
  9642  001E66  0E14               	movlw	20
  9643  001E68  6E2B               	movwf	i2SetLedBlink@OnTime,c
  9644  001E6A  0E00               	movlw	0
  9645  001E6C  6E2E               	movwf	i2SetLedBlink@OffTime+1,c
  9646  001E6E  0E14               	movlw	20
  9647  001E70  6E2D               	movwf	i2SetLedBlink@OffTime,c
  9648  001E72  0E00               	movlw	0
  9649  001E74  6E30               	movwf	i2SetLedBlink@StartAfter+1,c
  9650  001E76  0E00               	movlw	0
  9651  001E78  6E2F               	movwf	i2SetLedBlink@StartAfter,c
  9652  001E7A  0EFF               	movlw	255
  9653  001E7C  6E32               	movwf	i2SetLedBlink@BlinkCount+1,c
  9654  001E7E  6831               	setf	i2SetLedBlink@BlinkCount,c
  9655  001E80  EC30  F00B         	call	i2_SetLedBlink	;wreg free
  9656                           
  9657                           ;ext_rf_receiver.c: 33: MRF89XA_SendData(0x00, 0x55);
  9658  001E84  0E55               	movlw	85
  9659  001E86  6E37               	movwf	MRF89XA_SendData@Data,c
  9660  001E88  0E00               	movlw	0
  9661  001E8A  EC10  F013         	call	_MRF89XA_SendData
  9662                           
  9663                           ;ext_rf_receiver.c: 35: SetLedBlink(B,20,0,0,1);
  9664  001E8E  0E00               	movlw	0
  9665  001E90  6E2A               	movwf	i2SetLedBlink@ledIndex+1,c
  9666  001E92  0E02               	movlw	2
  9667  001E94  6E29               	movwf	i2SetLedBlink@ledIndex,c
  9668  001E96  0E00               	movlw	0
  9669  001E98  6E2C               	movwf	i2SetLedBlink@OnTime+1,c
  9670  001E9A  0E14               	movlw	20
  9671  001E9C  6E2B               	movwf	i2SetLedBlink@OnTime,c
  9672  001E9E  0E00               	movlw	0
  9673  001EA0  6E2E               	movwf	i2SetLedBlink@OffTime+1,c
  9674  001EA2  0E00               	movlw	0
  9675  001EA4  6E2D               	movwf	i2SetLedBlink@OffTime,c
  9676  001EA6  0E00               	movlw	0
  9677  001EA8  6E30               	movwf	i2SetLedBlink@StartAfter+1,c
  9678  001EAA  0E00               	movlw	0
  9679  001EAC  6E2F               	movwf	i2SetLedBlink@StartAfter,c
  9680  001EAE  0E00               	movlw	0
  9681  001EB0  6E32               	movwf	i2SetLedBlink@BlinkCount+1,c
  9682  001EB2  0E01               	movlw	1
  9683  001EB4  6E31               	movwf	i2SetLedBlink@BlinkCount,c
  9684  001EB6  EC30  F00B         	call	i2_SetLedBlink	;wreg free
  9685  001EBA  0012               	return	
  9686  001EBC                     __end_of_ext_rf_runcmd:
  9687                           	opt callstack 0
  9688                           
  9689 ;; *************** function _ToggleLed *****************
  9690 ;; Defined at:
  9691 ;;		line 47 in file "LedBlink.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;  ledIndex        2    0[COMRAM] int 
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;		None
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  2    0[COMRAM] int 
  9698 ;; Registers used:
  9699 ;;		wreg, status,2, status,0
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9708 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9709 ;;Total ram usage:        3 bytes
  9710 ;; Hardware stack levels used:    1
  9711 ;; This function calls:
  9712 ;;		Nothing
  9713 ;; This function is called by:
  9714 ;;		_ext_rf_runcmd
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           	psect	text98
  9719  001C72                     __ptext98:
  9720                           	opt callstack 0
  9721  001C72                     _ToggleLed:
  9722                           	opt callstack 19
  9723                           
  9724                           ;LedBlink.c: 48: if (ledIndex == R) {
  9725                           
  9726                           ;incstack = 0
  9727  001C72  5029               	movf	ToggleLed@ledIndex,w,c
  9728  001C74  102A               	iorwf	ToggleLed@ledIndex+1,w,c
  9729  001C76  A4D8               	btfss	status,2,c
  9730  001C78  D00E               	goto	i2l4766
  9731                           
  9732                           ;LedBlink.c: 49: LATDbits.LATD5 = !LATDbits.LATD5;
  9733  001C7A  BA86               	btfsc	3974,5,c	;volatile
  9734  001C7C  D003               	goto	i2u306_40
  9735  001C7E  6A2B               	clrf	??_ToggleLed& (0+255),c
  9736  001C80  2A2B               	incf	??_ToggleLed& (0+255),f,c
  9737  001C82  D001               	goto	i2u307_48
  9738  001C84                     i2u306_40:
  9739  001C84  6A2B               	clrf	??_ToggleLed& (0+255),c
  9740  001C86                     i2u307_48:
  9741  001C86  3A2B               	swapf	??_ToggleLed,f,c
  9742  001C88  462B               	rlncf	??_ToggleLed,f,c
  9743  001C8A  5086               	movf	3974,w,c	;volatile
  9744  001C8C  182B               	xorwf	??_ToggleLed,w,c
  9745  001C8E  0BDF               	andlw	-33
  9746  001C90  182B               	xorwf	??_ToggleLed,w,c
  9747  001C92  6E86               	movwf	3974,c	;volatile
  9748                           
  9749                           ;LedBlink.c: 50: } else if (ledIndex == G) {
  9750  001C94  0012               	return	
  9751  001C96                     i2l4766:
  9752  001C96  0429               	decf	ToggleLed@ledIndex,w,c
  9753  001C98  102A               	iorwf	ToggleLed@ledIndex+1,w,c
  9754  001C9A  A4D8               	btfss	status,2,c
  9755  001C9C  D00F               	goto	i2l4770
  9756                           
  9757                           ;LedBlink.c: 51: LATDbits.LATD6 = !LATDbits.LATD6;
  9758  001C9E  BC86               	btfsc	3974,6,c	;volatile
  9759  001CA0  D003               	goto	i2u309_40
  9760  001CA2  6A2B               	clrf	??_ToggleLed& (0+255),c
  9761  001CA4  2A2B               	incf	??_ToggleLed& (0+255),f,c
  9762  001CA6  D001               	goto	i2u310_48
  9763  001CA8                     i2u309_40:
  9764  001CA8  6A2B               	clrf	??_ToggleLed& (0+255),c
  9765  001CAA                     i2u310_48:
  9766  001CAA  3A2B               	swapf	??_ToggleLed,f,c
  9767  001CAC  462B               	rlncf	??_ToggleLed,f,c
  9768  001CAE  462B               	rlncf	??_ToggleLed,f,c
  9769  001CB0  5086               	movf	3974,w,c	;volatile
  9770  001CB2  182B               	xorwf	??_ToggleLed,w,c
  9771  001CB4  0BBF               	andlw	-65
  9772  001CB6  182B               	xorwf	??_ToggleLed,w,c
  9773  001CB8  6E86               	movwf	3974,c	;volatile
  9774                           
  9775                           ;LedBlink.c: 52: } else if (ledIndex == B) {
  9776  001CBA  0012               	return	
  9777  001CBC                     i2l4770:
  9778  001CBC  0E02               	movlw	2
  9779  001CBE  1829               	xorwf	ToggleLed@ledIndex,w,c
  9780  001CC0  102A               	iorwf	ToggleLed@ledIndex+1,w,c
  9781  001CC2  A4D8               	btfss	status,2,c
  9782  001CC4  D00E               	goto	i2l4774
  9783                           
  9784                           ;LedBlink.c: 53: LATDbits.LATD7 = !LATDbits.LATD7;
  9785  001CC6  BE86               	btfsc	3974,7,c	;volatile
  9786  001CC8  D003               	goto	i2u312_40
  9787  001CCA  6A2B               	clrf	??_ToggleLed& (0+255),c
  9788  001CCC  2A2B               	incf	??_ToggleLed& (0+255),f,c
  9789  001CCE  D001               	goto	i2u313_48
  9790  001CD0                     i2u312_40:
  9791  001CD0  6A2B               	clrf	??_ToggleLed& (0+255),c
  9792  001CD2                     i2u313_48:
  9793  001CD2  322B               	rrcf	??_ToggleLed,f,c
  9794  001CD4  322B               	rrcf	??_ToggleLed,f,c
  9795  001CD6  5086               	movf	3974,w,c	;volatile
  9796  001CD8  182B               	xorwf	??_ToggleLed,w,c
  9797  001CDA  0B7F               	andlw	-129
  9798  001CDC  182B               	xorwf	??_ToggleLed,w,c
  9799  001CDE  6E86               	movwf	3974,c	;volatile
  9800                           
  9801                           ;LedBlink.c: 54: } else if (ledIndex == RGB_R) {
  9802  001CE0  0012               	return	
  9803  001CE2                     i2l4774:
  9804  001CE2  0E03               	movlw	3
  9805  001CE4  1829               	xorwf	ToggleLed@ledIndex,w,c
  9806  001CE6  102A               	iorwf	ToggleLed@ledIndex+1,w,c
  9807  001CE8  A4D8               	btfss	status,2,c
  9808  001CEA  D00E               	goto	i2l4778
  9809                           
  9810                           ;LedBlink.c: 55: LATEbits.LATE2 = !LATEbits.LATE2;
  9811  001CEC  B487               	btfsc	3975,2,c	;volatile
  9812  001CEE  D003               	goto	i2u315_40
  9813  001CF0  6A2B               	clrf	??_ToggleLed& (0+255),c
  9814  001CF2  2A2B               	incf	??_ToggleLed& (0+255),f,c
  9815  001CF4  D001               	goto	i2u316_48
  9816  001CF6                     i2u315_40:
  9817  001CF6  6A2B               	clrf	??_ToggleLed& (0+255),c
  9818  001CF8                     i2u316_48:
  9819  001CF8  462B               	rlncf	??_ToggleLed,f,c
  9820  001CFA  462B               	rlncf	??_ToggleLed,f,c
  9821  001CFC  5087               	movf	3975,w,c	;volatile
  9822  001CFE  182B               	xorwf	??_ToggleLed,w,c
  9823  001D00  0BFB               	andlw	-5
  9824  001D02  182B               	xorwf	??_ToggleLed,w,c
  9825  001D04  6E87               	movwf	3975,c	;volatile
  9826                           
  9827                           ;LedBlink.c: 56: } else if (ledIndex == RGB_G) {
  9828  001D06  0012               	return	
  9829  001D08                     i2l4778:
  9830  001D08  0E04               	movlw	4
  9831  001D0A  1829               	xorwf	ToggleLed@ledIndex,w,c
  9832  001D0C  102A               	iorwf	ToggleLed@ledIndex+1,w,c
  9833  001D0E  A4D8               	btfss	status,2,c
  9834  001D10  D00D               	goto	i2l4782
  9835                           
  9836                           ;LedBlink.c: 57: LATEbits.LATE1 = !LATEbits.LATE1;
  9837  001D12  B287               	btfsc	3975,1,c	;volatile
  9838  001D14  D003               	goto	i2u318_40
  9839  001D16  6A2B               	clrf	??_ToggleLed& (0+255),c
  9840  001D18  2A2B               	incf	??_ToggleLed& (0+255),f,c
  9841  001D1A  D001               	goto	i2u319_48
  9842  001D1C                     i2u318_40:
  9843  001D1C  6A2B               	clrf	??_ToggleLed& (0+255),c
  9844  001D1E                     i2u319_48:
  9845  001D1E  462B               	rlncf	??_ToggleLed,f,c
  9846  001D20  5087               	movf	3975,w,c	;volatile
  9847  001D22  182B               	xorwf	??_ToggleLed,w,c
  9848  001D24  0BFD               	andlw	-3
  9849  001D26  182B               	xorwf	??_ToggleLed,w,c
  9850  001D28  6E87               	movwf	3975,c	;volatile
  9851                           
  9852                           ;LedBlink.c: 58: } else if (ledIndex == RGB_B) {
  9853  001D2A  0012               	return	
  9854  001D2C                     i2l4782:
  9855  001D2C  0E05               	movlw	5
  9856  001D2E  1829               	xorwf	ToggleLed@ledIndex,w,c
  9857  001D30  102A               	iorwf	ToggleLed@ledIndex+1,w,c
  9858  001D32  A4D8               	btfss	status,2,c
  9859  001D34  0012               	return	
  9860                           
  9861                           ;LedBlink.c: 59: LATEbits.LATE0 = !LATEbits.LATE0;
  9862  001D36  B087               	btfsc	3975,0,c	;volatile
  9863  001D38  D003               	goto	i2u321_40
  9864  001D3A  6A2B               	clrf	??_ToggleLed& (0+255),c
  9865  001D3C  2A2B               	incf	??_ToggleLed& (0+255),f,c
  9866  001D3E  D001               	goto	i2u322_48
  9867  001D40                     i2u321_40:
  9868  001D40  6A2B               	clrf	??_ToggleLed& (0+255),c
  9869  001D42                     i2u322_48:
  9870  001D42  5087               	movf	3975,w,c	;volatile
  9871  001D44  182B               	xorwf	??_ToggleLed,w,c
  9872  001D46  0BFE               	andlw	-2
  9873  001D48  182B               	xorwf	??_ToggleLed,w,c
  9874  001D4A  6E87               	movwf	3975,c	;volatile
  9875  001D4C  0012               	return	
  9876  001D4E                     __end_of_ToggleLed:
  9877                           	opt callstack 0
  9878                           
  9879 ;; *************** function _MRF89XA_SendData *****************
  9880 ;; Defined at:
  9881 ;;		line 123 in file "MRF89XA.c"
  9882 ;; Parameters:    Size  Location     Type
  9883 ;;  TargetAddres    1    wreg     unsigned char 
  9884 ;;  Data            1   14[COMRAM] unsigned char 
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;  TargetAddres    1   15[COMRAM] unsigned char 
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1    wreg      void 
  9889 ;; Registers used:
  9890 ;;		wreg, status,2, status,0, cstack
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9896 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9900 ;;Total ram usage:        2 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; Hardware stack levels required when called:    5
  9903 ;; This function calls:
  9904 ;;		_MRF89XA_IsTxDone
  9905 ;;		i2_Delay_Xms
  9906 ;;		i2_MRF89XA_ExchangeByte
  9907 ;; This function is called by:
  9908 ;;		_ext_rf_runcmd
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           	psect	text99
  9913  002620                     __ptext99:
  9914                           	opt callstack 0
  9915  002620                     _MRF89XA_SendData:
  9916                           	opt callstack 14
  9917                           
  9918                           ;incstack = 0
  9919                           ;MRF89XA_SendData@TargetAddress stored from wreg
  9920  002620  6E38               	movwf	MRF89XA_SendData@TargetAddress,c
  9921                           
  9922                           ;MRF89XA.c: 124: do { LATDbits.LATD4 = 1; } while(0);
  9923  002622  8886               	bsf	3974,4,c	;volatile
  9924                           
  9925                           ;MRF89XA.c: 125: do { LATDbits.LATD3 = 0; } while(0);
  9926  002624  9686               	bcf	3974,3,c	;volatile
  9927                           
  9928                           ;MRF89XA.c: 126: MRF89XA_ExchangeByte(TargetAddress);
  9929  002626  5038               	movf	MRF89XA_SendData@TargetAddress,w,c
  9930  002628  EC10  F016         	call	i2_MRF89XA_ExchangeByte
  9931                           
  9932                           ;MRF89XA.c: 127: MRF89XA_ExchangeByte(Data);
  9933  00262C  5037               	movf	MRF89XA_SendData@Data,w,c
  9934  00262E  EC10  F016         	call	i2_MRF89XA_ExchangeByte
  9935  002632  8686               	bsf	3974,3,c	;volatile
  9936  002634  D00A               	goto	i2l2070
  9937  002636                     i2l4802:
  9938                           
  9939                           ;MRF89XA.c: 131: Delay_Xms(5);
  9940  002636  0E05               	movlw	5
  9941  002638  6E29               	movwf	i2Delay_Xms@delay,c
  9942  00263A  0E00               	movlw	0
  9943  00263C  6E2A               	movwf	i2Delay_Xms@delay+1,c
  9944  00263E  0E00               	movlw	0
  9945  002640  6E2B               	movwf	i2Delay_Xms@delay+2,c
  9946  002642  0E00               	movlw	0
  9947  002644  6E2C               	movwf	i2Delay_Xms@delay+3,c
  9948  002646  ECEC  F011         	call	i2_Delay_Xms	;wreg free
  9949  00264A                     i2l2070:
  9950  00264A  EC56  F015         	call	_MRF89XA_IsTxDone	;wreg free
  9951  00264E  0900               	iorlw	0
  9952  002650  A4D8               	btfss	status,2,c
  9953  002652  0012               	return	
  9954  002654  D7F0               	goto	i2l4802
  9955  002656                     __end_of_MRF89XA_SendData:
  9956                           	opt callstack 0
  9957                           
  9958 ;; *************** function _MRF89XA_IsTxDone *****************
  9959 ;; Defined at:
  9960 ;;		line 184 in file "MRF89XA.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;		None
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;  reg             1   13[COMRAM] unsigned char 
  9965 ;; Return value:  Size  Location     Type
  9966 ;;                  1    wreg      unsigned char 
  9967 ;; Registers used:
  9968 ;;		wreg, status,2, status,0, cstack
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9978 ;;Total ram usage:        1 bytes
  9979 ;; Hardware stack levels used:    1
  9980 ;; Hardware stack levels required when called:    4
  9981 ;; This function calls:
  9982 ;;		_MRF89XA_ReadConfig
  9983 ;; This function is called by:
  9984 ;;		_MRF89XA_SendData
  9985 ;; This function uses a non-reentrant model
  9986 ;;
  9987                           
  9988                           	psect	text100
  9989  002AAC                     __ptext100:
  9990                           	opt callstack 0
  9991  002AAC                     _MRF89XA_IsTxDone:
  9992                           	opt callstack 14
  9993                           
  9994                           ;MRF89XA.c: 185: unsigned char reg = MRF89XA_ReadConfig(0x0E);
  9995                           
  9996                           ;incstack = 0
  9997  002AAC  0E0E               	movlw	14
  9998  002AAE  EC4B  F015         	call	_MRF89XA_ReadConfig
  9999  002AB2  6E36               	movwf	MRF89XA_IsTxDone@reg,c
 10000                           
 10001                           ;MRF89XA.c: 186: return (reg & 0x20) > 0;
 10002  002AB4  AA36               	btfss	MRF89XA_IsTxDone@reg,5,c
 10003  002AB6  D002               	goto	i2u294_40
 10004  002AB8  0E01               	movlw	1
 10005  002ABA  0012               	return	
 10006  002ABC                     i2u294_40:
 10007  002ABC  0E00               	movlw	0
 10008  002ABE  0012               	return		;funcret
 10009  002AC0                     __end_of_MRF89XA_IsTxDone:
 10010                           	opt callstack 0
 10011                           
 10012 ;; *************** function _MRF89XA_ReadAllConfigs *****************
 10013 ;; Defined at:
 10014 ;;		line 83 in file "MRF89XA.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;		None
 10017 ;; Auto vars:     Size  Location     Type
 10018 ;;  counter         1   15[COMRAM] unsigned char 
 10019 ;;  cond            1   14[COMRAM] unsigned char 
 10020 ;;  currentConfi    1    0        unsigned char 
 10021 ;; Return value:  Size  Location     Type
 10022 ;;                  1    wreg      void 
 10023 ;; Registers used:
 10024 ;;		wreg, status,2, status,0, cstack
 10025 ;; Tracked objects:
 10026 ;;		On entry : 0/0
 10027 ;;		On exit  : 0/0
 10028 ;;		Unchanged: 0/0
 10029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10031 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10033 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10034 ;;Total ram usage:        3 bytes
 10035 ;; Hardware stack levels used:    1
 10036 ;; Hardware stack levels required when called:    4
 10037 ;; This function calls:
 10038 ;;		_MRF89XA_ReadConfig
 10039 ;; This function is called by:
 10040 ;;		_ext_rf_runcmd
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           	psect	text101
 10045  002884                     __ptext101:
 10046                           	opt callstack 0
 10047  002884                     _MRF89XA_ReadAllConfigs:
 10048                           	opt callstack 15
 10049                           
 10050                           ;MRF89XA.c: 85: unsigned char cond = 1;
 10051                           
 10052                           ;incstack = 0
 10053  002884  0E01               	movlw	1
 10054  002886  6E37               	movwf	MRF89XA_ReadAllConfigs@cond,c
 10055                           
 10056                           ;MRF89XA.c: 86: unsigned char counter = 0;
 10057  002888  0E00               	movlw	0
 10058  00288A  6E38               	movwf	MRF89XA_ReadAllConfigs@counter,c
 10059                           
 10060                           ;MRF89XA.c: 88: while(cond == 1) {
 10061  00288C  D00A               	goto	i2l4796
 10062  00288E                     i2l4788:
 10063  00288E  5038               	movf	MRF89XA_ReadAllConfigs@counter,w,c
 10064  002890  EC4B  F015         	call	_MRF89XA_ReadConfig
 10065                           
 10066                           ;MRF89XA.c: 90: counter++;
 10067  002894  2A38               	incf	MRF89XA_ReadAllConfigs@counter,f,c
 10068  002896  F000               	nop		;# 
 10069                           
 10070                           ;MRF89XA.c: 93: if(counter > 0x1F) {
 10071  002898  0E1F               	movlw	31
 10072  00289A  6438               	cpfsgt	MRF89XA_ReadAllConfigs@counter,c
 10073  00289C  D002               	goto	i2l4796
 10074                           
 10075                           ;MRF89XA.c: 94: cond = 0;
 10076  00289E  0E00               	movlw	0
 10077  0028A0  6E37               	movwf	MRF89XA_ReadAllConfigs@cond,c
 10078  0028A2                     i2l4796:
 10079  0028A2  0437               	decf	MRF89XA_ReadAllConfigs@cond,w,c
 10080  0028A4  A4D8               	btfss	status,2,c
 10081  0028A6  0012               	return	
 10082  0028A8  D7F2               	goto	i2l4788
 10083  0028AA                     __end_of_MRF89XA_ReadAllConfigs:
 10084                           	opt callstack 0
 10085                           
 10086 ;; *************** function _MRF89XA_ReadConfig *****************
 10087 ;; Defined at:
 10088 ;;		line 103 in file "MRF89XA.c"
 10089 ;; Parameters:    Size  Location     Type
 10090 ;;  Address         1    wreg     unsigned char 
 10091 ;; Auto vars:     Size  Location     Type
 10092 ;;  Address         1   12[COMRAM] unsigned char 
 10093 ;; Return value:  Size  Location     Type
 10094 ;;                  1    wreg      unsigned char 
 10095 ;; Registers used:
 10096 ;;		wreg, status,2, status,0, cstack
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 0/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10105 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10106 ;;Total ram usage:        1 bytes
 10107 ;; Hardware stack levels used:    1
 10108 ;; Hardware stack levels required when called:    3
 10109 ;; This function calls:
 10110 ;;		i2_MRF89XA_GetAddress
 10111 ;;		i2_MRF89XA_SendConfig
 10112 ;; This function is called by:
 10113 ;;		_MRF89XA_ReadAllConfigs
 10114 ;;		_MRF89XA_IsTxDone
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           
 10118                           	psect	text102
 10119  002A96                     __ptext102:
 10120                           	opt callstack 0
 10121  002A96                     _MRF89XA_ReadConfig:
 10122                           	opt callstack 14
 10123                           
 10124                           ;incstack = 0
 10125                           ;MRF89XA_ReadConfig@Address stored from wreg
 10126  002A96  6E35               	movwf	MRF89XA_ReadConfig@Address,c
 10127                           
 10128                           ;MRF89XA.c: 104: return MRF89XA_SendConfig(MRF89XA_GetAddress(Address, 1), 0xFF);
 10129  002A98  0EFF               	movlw	255
 10130  002A9A  6E32               	movwf	i2MRF89XA_SendConfig@Data,c
 10131  002A9C  0E01               	movlw	1
 10132  002A9E  6E29               	movwf	i2MRF89XA_GetAddress@Read,c
 10133  002AA0  5035               	movf	MRF89XA_ReadConfig@Address,w,c
 10134  002AA2  EC34  F015         	call	i2_MRF89XA_GetAddress
 10135  002AA6  EC1D  F011         	call	i2_MRF89XA_SendConfig
 10136  002AAA  0012               	return		;funcret
 10137  002AAC                     __end_of_MRF89XA_ReadConfig:
 10138                           	opt callstack 0
 10139                           
 10140 ;; *************** function i2_MRF89XA_SendConfig *****************
 10141 ;; Defined at:
 10142 ;;		line 158 in file "MRF89XA.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;  Address         1    wreg     unsigned char 
 10145 ;;  Data            1    9[COMRAM] unsigned char 
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;  Address         1   10[COMRAM] unsigned char 
 10148 ;;  MRF89XA_Send    1   11[COMRAM] unsigned char 
 10149 ;; Return value:  Size  Location     Type
 10150 ;;                  1    wreg      unsigned char 
 10151 ;; Registers used:
 10152 ;;		wreg, status,2, status,0, cstack
 10153 ;; Tracked objects:
 10154 ;;		On entry : 0/0
 10155 ;;		On exit  : 0/0
 10156 ;;		Unchanged: 0/0
 10157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10158 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10161 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10162 ;;Total ram usage:        3 bytes
 10163 ;; Hardware stack levels used:    1
 10164 ;; Hardware stack levels required when called:    2
 10165 ;; This function calls:
 10166 ;;		i2_Delay_Xus
 10167 ;;		i2_MRF89XA_ExchangeByte
 10168 ;; This function is called by:
 10169 ;;		_MRF89XA_ReadConfig
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           	psect	text103
 10174  00223A                     __ptext103:
 10175                           	opt callstack 0
 10176  00223A                     i2_MRF89XA_SendConfig:
 10177                           	opt callstack 14
 10178                           
 10179                           ;incstack = 0
 10180                           ;i2MRF89XA_SendConfig@Address stored from wreg
 10181  00223A  6E33               	movwf	i2MRF89XA_SendConfig@Address,c
 10182                           
 10183                           ;MRF89XA.c: 159: do { LATDbits.LATD3 = 1; } while(0);
 10184  00223C  8686               	bsf	3974,3,c	;volatile
 10185                           
 10186                           ;MRF89XA.c: 160: do { LATDbits.LATD4 = 0; } while(0);
 10187  00223E  9886               	bcf	3974,4,c	;volatile
 10188                           
 10189                           ;MRF89XA.c: 161: Delay_Xus(100);
 10190  002240  0E64               	movlw	100
 10191  002242  6E29               	movwf	i2Delay_Xus@delay,c
 10192  002244  0E00               	movlw	0
 10193  002246  6E2A               	movwf	i2Delay_Xus@delay+1,c
 10194  002248  0E00               	movlw	0
 10195  00224A  6E2B               	movwf	i2Delay_Xus@delay+2,c
 10196  00224C  0E00               	movlw	0
 10197  00224E  6E2C               	movwf	i2Delay_Xus@delay+3,c
 10198  002250  EC78  F012         	call	i2_Delay_Xus	;wreg free
 10199                           
 10200                           ;MRF89XA.c: 162: MRF89XA_ExchangeByte(Address);
 10201  002254  5033               	movf	i2MRF89XA_SendConfig@Address,w,c
 10202  002256  EC10  F016         	call	i2_MRF89XA_ExchangeByte
 10203                           
 10204                           ;MRF89XA.c: 163: Delay_Xus(100);
 10205  00225A  0E64               	movlw	100
 10206  00225C  6E29               	movwf	i2Delay_Xus@delay,c
 10207  00225E  0E00               	movlw	0
 10208  002260  6E2A               	movwf	i2Delay_Xus@delay+1,c
 10209  002262  0E00               	movlw	0
 10210  002264  6E2B               	movwf	i2Delay_Xus@delay+2,c
 10211  002266  0E00               	movlw	0
 10212  002268  6E2C               	movwf	i2Delay_Xus@delay+3,c
 10213  00226A  EC78  F012         	call	i2_Delay_Xus	;wreg free
 10214                           
 10215                           ;MRF89XA.c: 164: unsigned char ret = MRF89XA_ExchangeByte(Data);
 10216  00226E  5032               	movf	i2MRF89XA_SendConfig@Data,w,c
 10217  002270  EC10  F016         	call	i2_MRF89XA_ExchangeByte
 10218  002274  6E34               	movwf	i2MRF89XA_SendConfig@ret,c
 10219                           
 10220                           ;MRF89XA.c: 165: Delay_Xus(100);
 10221  002276  0E64               	movlw	100
 10222  002278  6E29               	movwf	i2Delay_Xus@delay,c
 10223  00227A  0E00               	movlw	0
 10224  00227C  6E2A               	movwf	i2Delay_Xus@delay+1,c
 10225  00227E  0E00               	movlw	0
 10226  002280  6E2B               	movwf	i2Delay_Xus@delay+2,c
 10227  002282  0E00               	movlw	0
 10228  002284  6E2C               	movwf	i2Delay_Xus@delay+3,c
 10229  002286  EC78  F012         	call	i2_Delay_Xus	;wreg free
 10230  00228A  8886               	bsf	3974,4,c	;volatile
 10231                           
 10232                           ;MRF89XA.c: 167: return ret;
 10233  00228C  5034               	movf	i2MRF89XA_SendConfig@ret,w,c
 10234  00228E  0012               	return		;funcret
 10235  002290                     __end_ofi2_MRF89XA_SendConfig:
 10236                           	opt callstack 0
 10237                           
 10238 ;; *************** function i2_MRF89XA_ExchangeByte *****************
 10239 ;; Defined at:
 10240 ;;		line 75 in file "MRF89XA.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;  byte            1    wreg     unsigned char 
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;  byte            1    1[COMRAM] unsigned char 
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      unsigned char 
 10247 ;; Registers used:
 10248 ;;		wreg, status,2, cstack
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10258 ;;Total ram usage:        1 bytes
 10259 ;; Hardware stack levels used:    1
 10260 ;; Hardware stack levels required when called:    1
 10261 ;; This function calls:
 10262 ;;		i2_spi2_exchangeByte
 10263 ;; This function is called by:
 10264 ;;		_MRF89XA_SendData
 10265 ;;		i2_MRF89XA_SendConfig
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           	psect	text104
 10270  002C20                     __ptext104:
 10271                           	opt callstack 0
 10272  002C20                     i2_MRF89XA_ExchangeByte:
 10273                           	opt callstack 17
 10274                           
 10275                           ;incstack = 0
 10276                           ;i2MRF89XA_ExchangeByte@byte stored from wreg
 10277  002C20  6E2A               	movwf	i2MRF89XA_ExchangeByte@byte,c
 10278                           
 10279                           ;MRF89XA.c: 76: return spi2_exchangeByte(byte);
 10280  002C22  502A               	movf	i2MRF89XA_ExchangeByte@byte,w,c
 10281  002C24  EC60  F015         	call	i2_spi2_exchangeByte
 10282  002C28  0012               	return		;funcret
 10283  002C2A                     __end_ofi2_MRF89XA_ExchangeByte:
 10284                           	opt callstack 0
 10285                           
 10286 ;; *************** function i2_spi2_exchangeByte *****************
 10287 ;; Defined at:
 10288 ;;		line 69 in file "mcc_generated_files/spi2_driver.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;  b               1    wreg     unsigned char 
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;  b               1    0[COMRAM] unsigned char 
 10293 ;; Return value:  Size  Location     Type
 10294 ;;                  1    wreg      unsigned char 
 10295 ;; Registers used:
 10296 ;;		wreg, status,2
 10297 ;; Tracked objects:
 10298 ;;		On entry : 0/0
 10299 ;;		On exit  : 0/0
 10300 ;;		Unchanged: 0/0
 10301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10305 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10306 ;;Total ram usage:        1 bytes
 10307 ;; Hardware stack levels used:    1
 10308 ;; This function calls:
 10309 ;;		Nothing
 10310 ;; This function is called by:
 10311 ;;		i2_MRF89XA_ExchangeByte
 10312 ;; This function uses a non-reentrant model
 10313 ;;
 10314                           
 10315                           	psect	text105
 10316  002AC0                     __ptext105:
 10317                           	opt callstack 0
 10318  002AC0                     i2_spi2_exchangeByte:
 10319                           	opt callstack 17
 10320                           
 10321                           ;incstack = 0
 10322                           ;i2spi2_exchangeByte@b stored from wreg
 10323  002AC0  6E29               	movwf	i2spi2_exchangeByte@b,c
 10324                           
 10325                           ;spi2_driver.c: 71: SSP2BUF = b;
 10326  002AC2  C029  FE92         	movff	i2spi2_exchangeByte@b,3730	;volatile
 10327  002AC6                     i2l1097:
 10328  002AC6  010E               	movlb	14	; () banked
 10329  002AC8  A5CD               	btfss	205,2,b	;volatile
 10330  002ACA  D7FD               	goto	i2l1097
 10331                           
 10332                           ; BSR set to: 14
 10333                           ;spi2_driver.c: 73: PIR3bits.SSP2IF = 0;
 10334  002ACC  95CD               	bcf	205,2,b	;volatile
 10335                           
 10336                           ;spi2_driver.c: 74: return SSP2BUF;
 10337  002ACE  5192               	movf	146,w,b	;volatile
 10338                           
 10339                           ; BSR set to: 14
 10340  002AD0  0012               	return		;funcret
 10341  002AD2                     __end_ofi2_spi2_exchangeByte:
 10342                           	opt callstack 0
 10343                           
 10344 ;; *************** function i2_Delay_Xus *****************
 10345 ;; Defined at:
 10346 ;;		line 27 in file "main.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  delay           4    0[COMRAM] long 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  Delay_Xus       4    5[COMRAM] long 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg, status,2, status,0
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10360 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10361 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10363 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10364 ;;Total ram usage:        9 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; This function calls:
 10367 ;;		Nothing
 10368 ;; This function is called by:
 10369 ;;		i2_MRF89XA_SendConfig
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           	psect	text106
 10374  0024F0                     __ptext106:
 10375                           	opt callstack 0
 10376  0024F0                     i2_Delay_Xus:
 10377                           	opt callstack 15
 10378                           
 10379                           ;main.c: 28: for(long i = 0; i < delay; i++) {
 10380                           
 10381                           ; BSR set to: 14
 10382                           ;incstack = 0
 10383  0024F0  0E00               	movlw	0
 10384  0024F2  6E2E               	movwf	i2Delay_Xus@i,c
 10385  0024F4  0E00               	movlw	0
 10386  0024F6  6E2F               	movwf	i2Delay_Xus@i+1,c
 10387  0024F8  0E00               	movlw	0
 10388  0024FA  6E30               	movwf	i2Delay_Xus@i+2,c
 10389  0024FC  0E00               	movlw	0
 10390  0024FE  6E31               	movwf	i2Delay_Xus@i+3,c
 10391  002500  D009               	goto	i2l1283
 10392  002502                     i2l1284:
 10393                           
 10394                           ;main.c: 29: _delay((unsigned long)((1)*(24000000/4000000.0)));
 10395  002502  D000               	nop2		;2 cycle nop
 10396  002504  D000               	nop2		;2 cycle nop
 10397  002506  D000               	nop2		;2 cycle nop
 10398  002508  0E01               	movlw	1
 10399  00250A  262E               	addwf	i2Delay_Xus@i,f,c
 10400  00250C  0E00               	movlw	0
 10401  00250E  222F               	addwfc	i2Delay_Xus@i+1,f,c
 10402  002510  2230               	addwfc	i2Delay_Xus@i+2,f,c
 10403  002512  2231               	addwfc	i2Delay_Xus@i+3,f,c
 10404  002514                     i2l1283:
 10405  002514  5029               	movf	i2Delay_Xus@delay,w,c
 10406  002516  5C2E               	subwf	i2Delay_Xus@i,w,c
 10407  002518  502A               	movf	i2Delay_Xus@delay+1,w,c
 10408  00251A  582F               	subwfb	i2Delay_Xus@i+1,w,c
 10409  00251C  502B               	movf	i2Delay_Xus@delay+2,w,c
 10410  00251E  5830               	subwfb	i2Delay_Xus@i+2,w,c
 10411  002520  5031               	movf	i2Delay_Xus@i+3,w,c
 10412  002522  0A80               	xorlw	128
 10413  002524  6E2D               	movwf	??i2_Delay_Xus& (0+255),c
 10414  002526  502C               	movf	i2Delay_Xus@delay+3,w,c
 10415  002528  0A80               	xorlw	128
 10416  00252A  582D               	subwfb	??i2_Delay_Xus& (0+255),w,c
 10417  00252C  B0D8               	btfsc	status,0,c
 10418  00252E  0012               	return	
 10419  002530  D7E8               	goto	i2l1284
 10420  002532                     __end_ofi2_Delay_Xus:
 10421                           	opt callstack 0
 10422                           
 10423 ;; *************** function i2_MRF89XA_GetAddress *****************
 10424 ;; Defined at:
 10425 ;;		line 148 in file "MRF89XA.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;  Address         1    wreg     unsigned char 
 10428 ;;  Read            1    0[COMRAM] unsigned char 
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;  Address         1    1[COMRAM] unsigned char 
 10431 ;;  MRF89XA_GetA    1    2[COMRAM] unsigned char 
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  1    wreg      unsigned char 
 10434 ;; Registers used:
 10435 ;;		wreg, status,2, status,0
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10444 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10445 ;;Total ram usage:        3 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; This function calls:
 10448 ;;		Nothing
 10449 ;; This function is called by:
 10450 ;;		_MRF89XA_ReadConfig
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           	psect	text107
 10455  002A68                     __ptext107:
 10456                           	opt callstack 0
 10457  002A68                     i2_MRF89XA_GetAddress:
 10458                           	opt callstack 16
 10459                           
 10460                           ;incstack = 0
 10461                           ;i2MRF89XA_GetAddress@Address stored from wreg
 10462  002A68  6E2A               	movwf	i2MRF89XA_GetAddress@Address,c
 10463                           
 10464                           ;MRF89XA.c: 149: unsigned char ret = Address << 1;
 10465  002A6A  502A               	movf	i2MRF89XA_GetAddress@Address,w,c
 10466  002A6C  242A               	addwf	i2MRF89XA_GetAddress@Address,w,c
 10467  002A6E  6E2B               	movwf	i2MRF89XA_GetAddress@ret,c
 10468                           
 10469                           ;MRF89XA.c: 150: if(Read != 0) {
 10470  002A70  5029               	movf	i2MRF89XA_GetAddress@Read,w,c
 10471  002A72  B4D8               	btfsc	status,2,c
 10472  002A74  D003               	goto	i2l4602
 10473                           
 10474                           ;MRF89XA.c: 151: ret = ret | 0b01000000;
 10475  002A76  502B               	movf	i2MRF89XA_GetAddress@ret,w,c
 10476  002A78  0940               	iorlw	64
 10477  002A7A  6E2B               	movwf	i2MRF89XA_GetAddress@ret,c
 10478  002A7C                     i2l4602:
 10479                           
 10480                           ;MRF89XA.c: 154: };MRF89XA.c: 155: return ret;
 10481  002A7C  502B               	movf	i2MRF89XA_GetAddress@ret,w,c
 10482  002A7E  0012               	return		;funcret
 10483  002A80                     __end_ofi2_MRF89XA_GetAddress:
 10484                           	opt callstack 0
 10485                           
 10486 ;; *************** function _I2C_SendCommand *****************
 10487 ;; Defined at:
 10488 ;;		line 328 in file "iic.c"
 10489 ;; Parameters:    Size  Location     Type
 10490 ;;  Target          1    wreg     unsigned char 
 10491 ;;  CMD             1   11[COMRAM] unsigned char 
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;  Target          1   13[COMRAM] unsigned char 
 10494 ;;  result          1   12[COMRAM] unsigned char 
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  1    wreg      unsigned char 
 10497 ;; Registers used:
 10498 ;;		wreg, status,2, status,0, cstack
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10504 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10507 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10508 ;;Total ram usage:        3 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; Hardware stack levels required when called:    2
 10511 ;; This function calls:
 10512 ;;		_I2C_Master_Send_ACK
 10513 ;;		_I2C_Master_Start
 10514 ;;		_I2C_Master_Stop
 10515 ;;		_I2C_Master_Write
 10516 ;;		i2_Delay_Xms
 10517 ;; This function is called by:
 10518 ;;		_INT0_Custom_ISR
 10519 ;;		_ext_rf_runcmd
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           	psect	text108
 10524  002106                     __ptext108:
 10525                           	opt callstack 0
 10526  002106                     _I2C_SendCommand:
 10527                           	opt callstack 17
 10528                           
 10529                           ;incstack = 0
 10530                           ;I2C_SendCommand@Target stored from wreg
 10531  002106  6E36               	movwf	I2C_SendCommand@Target,c
 10532                           
 10533                           ;iic.c: 330: I2C_Master_Start();
 10534  002108  EC88  F015         	call	_I2C_Master_Start	;wreg free
 10535                           
 10536                           ;iic.c: 333: I2C_Master_Write(Target);
 10537  00210C  5036               	movf	I2C_SendCommand@Target,w,c
 10538  00210E  EC99  F012         	call	_I2C_Master_Write
 10539                           
 10540                           ;iic.c: 334: if(SSP1CON2bits.ACKSTAT) {
 10541  002112  AC97               	btfss	3991,6,c	;volatile
 10542  002114  D005               	goto	i2l4730
 10543                           
 10544                           ;iic.c: 336: SSP1CON2bits.PEN = 1;
 10545  002116  8497               	bsf	3991,2,c	;volatile
 10546  002118                     i2l1930:
 10547  002118  B497               	btfsc	3991,2,c	;volatile
 10548  00211A  D7FE               	goto	i2l1930
 10549  00211C                     i2u299_40:
 10550                           
 10551                           ;iic.c: 338: return 0xFF;
 10552  00211C  0EFF               	movlw	255
 10553  00211E  0012               	return	
 10554  002120                     i2l4730:
 10555                           
 10556                           ;iic.c: 339: };iic.c: 342: I2C_Master_Write(CMD);
 10557  002120  5034               	movf	I2C_SendCommand@CMD,w,c
 10558  002122  EC99  F012         	call	_I2C_Master_Write
 10559                           
 10560                           ;iic.c: 343: if(SSP1CON2bits.ACKSTAT) {
 10561  002126  AC97               	btfss	3991,6,c	;volatile
 10562  002128  D004               	goto	i2l4740
 10563                           
 10564                           ;iic.c: 345: SSP1CON2bits.PEN = 1;
 10565  00212A  8497               	bsf	3991,2,c	;volatile
 10566  00212C                     i2l1935:
 10567  00212C  A497               	btfss	3991,2,c	;volatile
 10568  00212E  D7F6               	goto	i2u299_40
 10569  002130  D7FD               	goto	i2l1935
 10570  002132                     i2l4740:
 10571                           
 10572                           ;iic.c: 348: };iic.c: 350: I2C_Master_Stop();
 10573  002132  EC82  F015         	call	_I2C_Master_Stop	;wreg free
 10574                           
 10575                           ;iic.c: 352: Delay_Xms(5);
 10576  002136  0E05               	movlw	5
 10577  002138  6E29               	movwf	i2Delay_Xms@delay,c
 10578  00213A  0E00               	movlw	0
 10579  00213C  6E2A               	movwf	i2Delay_Xms@delay+1,c
 10580  00213E  0E00               	movlw	0
 10581  002140  6E2B               	movwf	i2Delay_Xms@delay+2,c
 10582  002142  0E00               	movlw	0
 10583  002144  6E2C               	movwf	i2Delay_Xms@delay+3,c
 10584  002146  ECEC  F011         	call	i2_Delay_Xms	;wreg free
 10585                           
 10586                           ;iic.c: 354: I2C_Master_Start();
 10587  00214A  EC88  F015         	call	_I2C_Master_Start	;wreg free
 10588                           
 10589                           ;iic.c: 356: I2C_Master_Write(Target | 0x01);
 10590  00214E  5036               	movf	I2C_SendCommand@Target,w,c
 10591  002150  0901               	iorlw	1
 10592  002152  EC99  F012         	call	_I2C_Master_Write
 10593                           
 10594                           ;iic.c: 357: if(SSP1CON2bits.ACKSTAT) {
 10595  002156  AC97               	btfss	3991,6,c	;volatile
 10596  002158  D004               	goto	i2l1938
 10597                           
 10598                           ;iic.c: 359: SSP1CON2bits.PEN = 1;
 10599  00215A  8497               	bsf	3991,2,c	;volatile
 10600  00215C                     i2l1939:
 10601  00215C  A497               	btfss	3991,2,c	;volatile
 10602  00215E  D7DE               	goto	i2u299_40
 10603  002160  D7FD               	goto	i2l1939
 10604  002162                     i2l1938:
 10605                           
 10606                           ;iic.c: 362: };iic.c: 365: SSP1CON2bits.RCEN = 1;
 10607  002162  8697               	bsf	3991,3,c	;volatile
 10608  002164                     i2l1942:
 10609  002164  A095               	btfss	3989,0,c	;volatile
 10610  002166  D7FE               	goto	i2l1942
 10611                           
 10612                           ;iic.c: 369: PIR3bits.SSP1IF = 0;
 10613  002168  010E               	movlb	14	; () banked
 10614  00216A  91CD               	bcf	205,0,b	;volatile
 10615                           
 10616                           ;iic.c: 371: unsigned char result = SSP1BUF;
 10617  00216C  CF92 F035          	movff	3986,I2C_SendCommand@result	;volatile
 10618                           
 10619                           ; BSR set to: 14
 10620                           ;iic.c: 373: I2C_Master_Send_ACK(1);
 10621  002170  0E01               	movlw	1
 10622  002172  EC6F  F013         	call	_I2C_Master_Send_ACK
 10623                           
 10624                           ;iic.c: 375: I2C_Master_Stop();
 10625  002176  EC82  F015         	call	_I2C_Master_Stop	;wreg free
 10626                           
 10627                           ;iic.c: 376: return result;
 10628  00217A  5035               	movf	I2C_SendCommand@result,w,c
 10629  00217C  0012               	return		;funcret
 10630  00217E                     __end_of_I2C_SendCommand:
 10631                           	opt callstack 0
 10632                           
 10633 ;; *************** function i2_Delay_Xms *****************
 10634 ;; Defined at:
 10635 ;;		line 21 in file "main.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;  delay           4    0[COMRAM] long 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;  Delay_Xms       4    5[COMRAM] long 
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg, status,2, status,0
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10650 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10652 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10653 ;;Total ram usage:        9 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; This function calls:
 10656 ;;		Nothing
 10657 ;; This function is called by:
 10658 ;;		_I2C_SendCommand
 10659 ;;		_MRF89XA_SendData
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           	psect	text109
 10664  0023D8                     __ptext109:
 10665                           	opt callstack 0
 10666  0023D8                     i2_Delay_Xms:
 10667                           	opt callstack 18
 10668                           
 10669                           ;main.c: 22: for(long i = 0; i < delay; i++) {
 10670                           
 10671                           ;incstack = 0
 10672  0023D8  0E00               	movlw	0
 10673  0023DA  6E2E               	movwf	i2Delay_Xms@i,c
 10674  0023DC  0E00               	movlw	0
 10675  0023DE  6E2F               	movwf	i2Delay_Xms@i+1,c
 10676  0023E0  0E00               	movlw	0
 10677  0023E2  6E30               	movwf	i2Delay_Xms@i+2,c
 10678  0023E4  0E00               	movlw	0
 10679  0023E6  6E31               	movwf	i2Delay_Xms@i+3,c
 10680  0023E8  D00D               	goto	i2l4712
 10681  0023EA                     i2l4708:
 10682                           
 10683                           ;main.c: 23: _delay((unsigned long)((1)*(24000000/4000.0)));
 10684  0023EA  0E08               	movlw	8
 10685  0023EC  6E2D               	movwf	??i2_Delay_Xms& (0+255),c
 10686  0023EE  0ECA               	movlw	202
 10687  0023F0                     i2u606_47:
 10688  0023F0  2EE8               	decfsz	wreg,f,c
 10689  0023F2  D7FE               	bra	i2u606_47
 10690  0023F4  2E2D               	decfsz	??i2_Delay_Xms& (0+255),f,c
 10691  0023F6  D7FC               	bra	i2u606_47
 10692  0023F8  0E01               	movlw	1
 10693  0023FA  262E               	addwf	i2Delay_Xms@i,f,c
 10694  0023FC  0E00               	movlw	0
 10695  0023FE  222F               	addwfc	i2Delay_Xms@i+1,f,c
 10696  002400  2230               	addwfc	i2Delay_Xms@i+2,f,c
 10697  002402  2231               	addwfc	i2Delay_Xms@i+3,f,c
 10698  002404                     i2l4712:
 10699  002404  5029               	movf	i2Delay_Xms@delay,w,c
 10700  002406  5C2E               	subwf	i2Delay_Xms@i,w,c
 10701  002408  502A               	movf	i2Delay_Xms@delay+1,w,c
 10702  00240A  582F               	subwfb	i2Delay_Xms@i+1,w,c
 10703  00240C  502B               	movf	i2Delay_Xms@delay+2,w,c
 10704  00240E  5830               	subwfb	i2Delay_Xms@i+2,w,c
 10705  002410  5031               	movf	i2Delay_Xms@i+3,w,c
 10706  002412  0A80               	xorlw	128
 10707  002414  6E2D               	movwf	??i2_Delay_Xms& (0+255),c
 10708  002416  502C               	movf	i2Delay_Xms@delay+3,w,c
 10709  002418  0A80               	xorlw	128
 10710  00241A  582D               	subwfb	??i2_Delay_Xms& (0+255),w,c
 10711  00241C  B0D8               	btfsc	status,0,c
 10712  00241E  0012               	return	
 10713  002420  D7E4               	goto	i2l4708
 10714  002422                     __end_ofi2_Delay_Xms:
 10715                           	opt callstack 0
 10716                           
 10717 ;; *************** function _I2C_Master_Write *****************
 10718 ;; Defined at:
 10719 ;;		line 187 in file "iic.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;  data            1    wreg     unsigned char 
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;  data            1   10[COMRAM] unsigned char 
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  1    wreg      void 
 10726 ;; Registers used:
 10727 ;;		wreg, status,2, status,0, cstack
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10736 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10737 ;;Total ram usage:        1 bytes
 10738 ;; Hardware stack levels used:    1
 10739 ;; Hardware stack levels required when called:    1
 10740 ;; This function calls:
 10741 ;;		i2_SetLedBlink
 10742 ;; This function is called by:
 10743 ;;		_I2C_SendCommand
 10744 ;;		_I2C_WriteData
 10745 ;;		_I2C_WriteLength
 10746 ;;		_I2C_ReadData
 10747 ;;		_I2C_ReadLength
 10748 ;;		_I2C_SendCommand_L
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           	psect	text110
 10753  002532                     __ptext110:
 10754                           	opt callstack 0
 10755  002532                     _I2C_Master_Write:
 10756                           	opt callstack 17
 10757                           
 10758                           ;incstack = 0
 10759                           ;I2C_Master_Write@data stored from wreg
 10760  002532  6E33               	movwf	I2C_Master_Write@data,c
 10761                           
 10762                           ;iic.c: 188: SSP1BUF = data;
 10763  002534  C033  FF92         	movff	I2C_Master_Write@data,3986	;volatile
 10764                           
 10765                           ;iic.c: 189: if(SSP1CON1bits.WCOL) {
 10766  002538  AE96               	btfss	3990,7,c	;volatile
 10767  00253A  D018               	goto	i2l1894
 10768                           
 10769                           ;iic.c: 190: SSP1CON1bits.WCOL = 0;
 10770  00253C  9E96               	bcf	3990,7,c	;volatile
 10771                           
 10772                           ;iic.c: 191: SetLedBlink(R,1000,0,0,1);
 10773  00253E  0E00               	movlw	0
 10774  002540  6E2A               	movwf	i2SetLedBlink@ledIndex+1,c
 10775  002542  0E00               	movlw	0
 10776  002544  6E29               	movwf	i2SetLedBlink@ledIndex,c
 10777  002546  0E03               	movlw	3
 10778  002548  6E2C               	movwf	i2SetLedBlink@OnTime+1,c
 10779  00254A  0EE8               	movlw	232
 10780  00254C  6E2B               	movwf	i2SetLedBlink@OnTime,c
 10781  00254E  0E00               	movlw	0
 10782  002550  6E2E               	movwf	i2SetLedBlink@OffTime+1,c
 10783  002552  0E00               	movlw	0
 10784  002554  6E2D               	movwf	i2SetLedBlink@OffTime,c
 10785  002556  0E00               	movlw	0
 10786  002558  6E30               	movwf	i2SetLedBlink@StartAfter+1,c
 10787  00255A  0E00               	movlw	0
 10788  00255C  6E2F               	movwf	i2SetLedBlink@StartAfter,c
 10789  00255E  0E00               	movlw	0
 10790  002560  6E32               	movwf	i2SetLedBlink@BlinkCount+1,c
 10791  002562  0E01               	movlw	1
 10792  002564  6E31               	movwf	i2SetLedBlink@BlinkCount,c
 10793  002566  EC30  F00B         	call	i2_SetLedBlink	;wreg free
 10794                           
 10795                           ;iic.c: 192: } else {
 10796  00256A  0012               	return	
 10797  00256C                     i2l1894:
 10798  00256C  010E               	movlb	14	; () banked
 10799  00256E  B1CD               	btfsc	205,0,b	;volatile
 10800  002570  0012               	return	
 10801  002572  D7FC               	goto	i2l1894
 10802  002574                     __end_of_I2C_Master_Write:
 10803                           	opt callstack 0
 10804                           
 10805 ;; *************** function i2_SetLedBlink *****************
 10806 ;; Defined at:
 10807 ;;		line 64 in file "LedBlink.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;  ledIndex        2    0[COMRAM] int 
 10810 ;;  OnTime          2    2[COMRAM] int 
 10811 ;;  OffTime         2    4[COMRAM] int 
 10812 ;;  StartAfter      2    6[COMRAM] int 
 10813 ;;  BlinkCount      2    8[COMRAM] int 
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;		None
 10816 ;; Return value:  Size  Location     Type
 10817 ;;                  1    wreg      void 
 10818 ;; Registers used:
 10819 ;;		wreg, status,2, status,0
 10820 ;; Tracked objects:
 10821 ;;		On entry : 0/0
 10822 ;;		On exit  : 0/0
 10823 ;;		Unchanged: 0/0
 10824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10825 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10828 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10829 ;;Total ram usage:       10 bytes
 10830 ;; Hardware stack levels used:    1
 10831 ;; This function calls:
 10832 ;;		Nothing
 10833 ;; This function is called by:
 10834 ;;		_ext_rf_runcmd
 10835 ;;		_I2C_Master_Write
 10836 ;; This function uses a non-reentrant model
 10837 ;;
 10838                           
 10839                           	psect	text111
 10840  001660                     __ptext111:
 10841                           	opt callstack 0
 10842  001660                     i2_SetLedBlink:
 10843                           	opt callstack 19
 10844                           
 10845                           ;LedBlink.c: 65: if (ledIndex == R) {
 10846                           
 10847                           ;incstack = 0
 10848  001660  5029               	movf	i2SetLedBlink@ledIndex,w,c
 10849  001662  102A               	iorwf	i2SetLedBlink@ledIndex+1,w,c
 10850  001664  A4D8               	btfss	status,2,c
 10851  001666  D021               	goto	i2l4634
 10852                           
 10853                           ;LedBlink.c: 66: R_OnTime = OnTime;
 10854  001668  C02B  F01F         	movff	i2SetLedBlink@OnTime,_R_OnTime
 10855  00166C  C02C  F020         	movff	i2SetLedBlink@OnTime+1,_R_OnTime+1
 10856                           
 10857                           ;LedBlink.c: 67: R_OffTime = OffTime;
 10858  001670  C02D  F01D         	movff	i2SetLedBlink@OffTime,_R_OffTime
 10859  001674  C02E  F01E         	movff	i2SetLedBlink@OffTime+1,_R_OffTime+1
 10860                           
 10861                           ;LedBlink.c: 68: R_StartAfter = StartAfter;
 10862  001678  C02F  F0D6         	movff	i2SetLedBlink@StartAfter,_R_StartAfter
 10863  00167C  C030  F0D7         	movff	i2SetLedBlink@StartAfter+1,_R_StartAfter+1
 10864                           
 10865                           ;LedBlink.c: 69: R_Enabled = ON;
 10866  001680  0E00               	movlw	0
 10867  001682  6E1C               	movwf	_R_Enabled+1,c
 10868  001684  0E01               	movlw	1
 10869  001686  6E1B               	movwf	_R_Enabled,c
 10870                           
 10871                           ;LedBlink.c: 70: R_BlinkCount = BlinkCount;
 10872  001688  C031  F017         	movff	i2SetLedBlink@BlinkCount,_R_BlinkCount
 10873  00168C  C032  F018         	movff	i2SetLedBlink@BlinkCount+1,_R_BlinkCount+1
 10874                           
 10875                           ;LedBlink.c: 71: R_BlinkCounter = BlinkCount;
 10876  001690  C031  F0D4         	movff	i2SetLedBlink@BlinkCount,_R_BlinkCounter
 10877  001694  C032  F0D5         	movff	i2SetLedBlink@BlinkCount+1,_R_BlinkCounter+1
 10878                           
 10879                           ;LedBlink.c: 72: R_Counter = 0;
 10880  001698  0E00               	movlw	0
 10881  00169A  6E1A               	movwf	_R_Counter+1,c
 10882  00169C  0E00               	movlw	0
 10883  00169E  6E19               	movwf	_R_Counter,c
 10884                           
 10885                           ;LedBlink.c: 73: R_State = UNIDENTIFIED;
 10886  0016A0  0E00               	movlw	0
 10887  0016A2  6E4A               	movwf	_R_State+1,c
 10888  0016A4  0E03               	movlw	3
 10889  0016A6  6E49               	movwf	_R_State,c
 10890                           
 10891                           ;LedBlink.c: 74: } else if (ledIndex == G) {
 10892  0016A8  0012               	return	
 10893  0016AA                     i2l4634:
 10894  0016AA  0429               	decf	i2SetLedBlink@ledIndex,w,c
 10895  0016AC  102A               	iorwf	i2SetLedBlink@ledIndex+1,w,c
 10896  0016AE  A4D8               	btfss	status,2,c
 10897  0016B0  D022               	goto	i2l4644
 10898                           
 10899                           ;LedBlink.c: 75: G_OnTime = OnTime;
 10900  0016B2  C02B  F0D2         	movff	i2SetLedBlink@OnTime,_G_OnTime
 10901  0016B6  C02C  F0D3         	movff	i2SetLedBlink@OnTime+1,_G_OnTime+1
 10902                           
 10903                           ;LedBlink.c: 76: G_OffTime = OffTime;
 10904  0016BA  C02D  F0D0         	movff	i2SetLedBlink@OffTime,_G_OffTime
 10905  0016BE  C02E  F0D1         	movff	i2SetLedBlink@OffTime+1,_G_OffTime+1
 10906                           
 10907                           ;LedBlink.c: 77: G_StartAfter = StartAfter;
 10908  0016C2  C02F  F0CC         	movff	i2SetLedBlink@StartAfter,_G_StartAfter
 10909  0016C6  C030  F0CD         	movff	i2SetLedBlink@StartAfter+1,_G_StartAfter+1
 10910                           
 10911                           ;LedBlink.c: 78: G_Enabled = ON;
 10912  0016CA  0E00               	movlw	0
 10913  0016CC  0100               	movlb	0	; () banked
 10914  0016CE  6FCF               	movwf	(_G_Enabled+1)& (0+255),b
 10915  0016D0  0E01               	movlw	1
 10916  0016D2  6FCE               	movwf	_G_Enabled& (0+255),b
 10917                           
 10918                           ; BSR set to: 0
 10919                           ;LedBlink.c: 79: G_BlinkCount = BlinkCount;
 10920  0016D4  C031  F013         	movff	i2SetLedBlink@BlinkCount,_G_BlinkCount
 10921  0016D8  C032  F014         	movff	i2SetLedBlink@BlinkCount+1,_G_BlinkCount+1
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;LedBlink.c: 80: G_BlinkCounter = BlinkCount;
 10925  0016DC  C031  F0CA         	movff	i2SetLedBlink@BlinkCount,_G_BlinkCounter
 10926  0016E0  C032  F0CB         	movff	i2SetLedBlink@BlinkCount+1,_G_BlinkCounter+1
 10927                           
 10928                           ;LedBlink.c: 81: G_Counter = 0;
 10929  0016E4  0E00               	movlw	0
 10930  0016E6  6E16               	movwf	_G_Counter+1,c
 10931  0016E8  0E00               	movlw	0
 10932  0016EA  6E15               	movwf	_G_Counter,c
 10933                           
 10934                           ;LedBlink.c: 82: G_State = UNIDENTIFIED;
 10935  0016EC  0E00               	movlw	0
 10936  0016EE  6E48               	movwf	_G_State+1,c
 10937  0016F0  0E03               	movlw	3
 10938  0016F2  6E47               	movwf	_G_State,c
 10939                           
 10940                           ;LedBlink.c: 83: } else if (ledIndex == B) {
 10941  0016F4  0012               	return	
 10942  0016F6                     i2l4644:
 10943  0016F6  0E02               	movlw	2
 10944  0016F8  1829               	xorwf	i2SetLedBlink@ledIndex,w,c
 10945  0016FA  102A               	iorwf	i2SetLedBlink@ledIndex+1,w,c
 10946  0016FC  A4D8               	btfss	status,2,c
 10947  0016FE  D022               	goto	i2l4654
 10948                           
 10949                           ;LedBlink.c: 84: B_OnTime = OnTime;
 10950  001700  C02B  F0C8         	movff	i2SetLedBlink@OnTime,_B_OnTime
 10951  001704  C02C  F0C9         	movff	i2SetLedBlink@OnTime+1,_B_OnTime+1
 10952                           
 10953                           ;LedBlink.c: 85: B_OffTime = OffTime;
 10954  001708  C02D  F0C6         	movff	i2SetLedBlink@OffTime,_B_OffTime
 10955  00170C  C02E  F0C7         	movff	i2SetLedBlink@OffTime+1,_B_OffTime+1
 10956                           
 10957                           ;LedBlink.c: 86: B_StartAfter = StartAfter;
 10958  001710  C02F  F0C2         	movff	i2SetLedBlink@StartAfter,_B_StartAfter
 10959  001714  C030  F0C3         	movff	i2SetLedBlink@StartAfter+1,_B_StartAfter+1
 10960                           
 10961                           ;LedBlink.c: 87: B_Enabled = ON;
 10962  001718  0E00               	movlw	0
 10963  00171A  0100               	movlb	0	; () banked
 10964  00171C  6FC5               	movwf	(_B_Enabled+1)& (0+255),b
 10965  00171E  0E01               	movlw	1
 10966  001720  6FC4               	movwf	_B_Enabled& (0+255),b
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;LedBlink.c: 88: B_BlinkCount = BlinkCount;
 10970  001722  C031  F00F         	movff	i2SetLedBlink@BlinkCount,_B_BlinkCount
 10971  001726  C032  F010         	movff	i2SetLedBlink@BlinkCount+1,_B_BlinkCount+1
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;LedBlink.c: 89: B_BlinkCounter = BlinkCount;
 10975  00172A  C031  F0C0         	movff	i2SetLedBlink@BlinkCount,_B_BlinkCounter
 10976  00172E  C032  F0C1         	movff	i2SetLedBlink@BlinkCount+1,_B_BlinkCounter+1
 10977                           
 10978                           ;LedBlink.c: 90: B_Counter = 0;
 10979  001732  0E00               	movlw	0
 10980  001734  6E12               	movwf	_B_Counter+1,c
 10981  001736  0E00               	movlw	0
 10982  001738  6E11               	movwf	_B_Counter,c
 10983                           
 10984                           ;LedBlink.c: 91: B_State = UNIDENTIFIED;
 10985  00173A  0E00               	movlw	0
 10986  00173C  6E46               	movwf	_B_State+1,c
 10987  00173E  0E03               	movlw	3
 10988  001740  6E45               	movwf	_B_State,c
 10989                           
 10990                           ;LedBlink.c: 92: } else if (ledIndex == RGB_R) {
 10991  001742  0012               	return	
 10992  001744                     i2l4654:
 10993  001744  0E03               	movlw	3
 10994  001746  1829               	xorwf	i2SetLedBlink@ledIndex,w,c
 10995  001748  102A               	iorwf	i2SetLedBlink@ledIndex+1,w,c
 10996  00174A  A4D8               	btfss	status,2,c
 10997  00174C  D022               	goto	i2l4664
 10998                           
 10999                           ;LedBlink.c: 93: RGB_R_OnTime = OnTime;
 11000  00174E  C02B  F0BE         	movff	i2SetLedBlink@OnTime,_RGB_R_OnTime
 11001  001752  C02C  F0BF         	movff	i2SetLedBlink@OnTime+1,_RGB_R_OnTime+1
 11002                           
 11003                           ;LedBlink.c: 94: RGB_R_OffTime = OffTime;
 11004  001756  C02D  F0BC         	movff	i2SetLedBlink@OffTime,_RGB_R_OffTime
 11005  00175A  C02E  F0BD         	movff	i2SetLedBlink@OffTime+1,_RGB_R_OffTime+1
 11006                           
 11007                           ;LedBlink.c: 95: RGB_R_StartAfter = StartAfter;
 11008  00175E  C02F  F0B8         	movff	i2SetLedBlink@StartAfter,_RGB_R_StartAfter
 11009  001762  C030  F0B9         	movff	i2SetLedBlink@StartAfter+1,_RGB_R_StartAfter+1
 11010                           
 11011                           ;LedBlink.c: 96: RGB_R_Enabled = ON;
 11012  001766  0E00               	movlw	0
 11013  001768  0100               	movlb	0	; () banked
 11014  00176A  6FBB               	movwf	(_RGB_R_Enabled+1)& (0+255),b
 11015  00176C  0E01               	movlw	1
 11016  00176E  6FBA               	movwf	_RGB_R_Enabled& (0+255),b
 11017                           
 11018                           ; BSR set to: 0
 11019                           ;LedBlink.c: 97: RGB_R_BlinkCount = BlinkCount;
 11020  001770  C031  F00B         	movff	i2SetLedBlink@BlinkCount,_RGB_R_BlinkCount
 11021  001774  C032  F00C         	movff	i2SetLedBlink@BlinkCount+1,_RGB_R_BlinkCount+1
 11022                           
 11023                           ; BSR set to: 0
 11024                           ;LedBlink.c: 98: RGB_R_BlinkCounter = BlinkCount;
 11025  001778  C031  F0B6         	movff	i2SetLedBlink@BlinkCount,_RGB_R_BlinkCounter
 11026  00177C  C032  F0B7         	movff	i2SetLedBlink@BlinkCount+1,_RGB_R_BlinkCounter+1
 11027                           
 11028                           ;LedBlink.c: 99: RGB_R_Counter = 0;
 11029  001780  0E00               	movlw	0
 11030  001782  6E0E               	movwf	_RGB_R_Counter+1,c
 11031  001784  0E00               	movlw	0
 11032  001786  6E0D               	movwf	_RGB_R_Counter,c
 11033                           
 11034                           ;LedBlink.c: 100: RGB_R_State = UNIDENTIFIED;
 11035  001788  0E00               	movlw	0
 11036  00178A  6E44               	movwf	_RGB_R_State+1,c
 11037  00178C  0E03               	movlw	3
 11038  00178E  6E43               	movwf	_RGB_R_State,c
 11039                           
 11040                           ;LedBlink.c: 101: } else if (ledIndex == RGB_G) {
 11041  001790  0012               	return	
 11042  001792                     i2l4664:
 11043  001792  0E04               	movlw	4
 11044  001794  1829               	xorwf	i2SetLedBlink@ledIndex,w,c
 11045  001796  102A               	iorwf	i2SetLedBlink@ledIndex+1,w,c
 11046  001798  A4D8               	btfss	status,2,c
 11047  00179A  D022               	goto	i2l4674
 11048                           
 11049                           ;LedBlink.c: 102: RGB_G_OnTime = OnTime;
 11050  00179C  C02B  F0B4         	movff	i2SetLedBlink@OnTime,_RGB_G_OnTime
 11051  0017A0  C02C  F0B5         	movff	i2SetLedBlink@OnTime+1,_RGB_G_OnTime+1
 11052                           
 11053                           ;LedBlink.c: 103: RGB_G_OffTime = OffTime;
 11054  0017A4  C02D  F0B2         	movff	i2SetLedBlink@OffTime,_RGB_G_OffTime
 11055  0017A8  C02E  F0B3         	movff	i2SetLedBlink@OffTime+1,_RGB_G_OffTime+1
 11056                           
 11057                           ;LedBlink.c: 104: RGB_G_StartAfter = StartAfter;
 11058  0017AC  C02F  F0AE         	movff	i2SetLedBlink@StartAfter,_RGB_G_StartAfter
 11059  0017B0  C030  F0AF         	movff	i2SetLedBlink@StartAfter+1,_RGB_G_StartAfter+1
 11060                           
 11061                           ;LedBlink.c: 105: RGB_G_Enabled = ON;
 11062  0017B4  0E00               	movlw	0
 11063  0017B6  0100               	movlb	0	; () banked
 11064  0017B8  6FB1               	movwf	(_RGB_G_Enabled+1)& (0+255),b
 11065  0017BA  0E01               	movlw	1
 11066  0017BC  6FB0               	movwf	_RGB_G_Enabled& (0+255),b
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;LedBlink.c: 106: RGB_G_BlinkCount = BlinkCount;
 11070  0017BE  C031  F007         	movff	i2SetLedBlink@BlinkCount,_RGB_G_BlinkCount
 11071  0017C2  C032  F008         	movff	i2SetLedBlink@BlinkCount+1,_RGB_G_BlinkCount+1
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;LedBlink.c: 107: RGB_G_BlinkCounter = BlinkCount;
 11075  0017C6  C031  F0AC         	movff	i2SetLedBlink@BlinkCount,_RGB_G_BlinkCounter
 11076  0017CA  C032  F0AD         	movff	i2SetLedBlink@BlinkCount+1,_RGB_G_BlinkCounter+1
 11077                           
 11078                           ;LedBlink.c: 108: RGB_G_Counter = 0;
 11079  0017CE  0E00               	movlw	0
 11080  0017D0  6E0A               	movwf	_RGB_G_Counter+1,c
 11081  0017D2  0E00               	movlw	0
 11082  0017D4  6E09               	movwf	_RGB_G_Counter,c
 11083                           
 11084                           ;LedBlink.c: 109: RGB_G_State = UNIDENTIFIED;
 11085  0017D6  0E00               	movlw	0
 11086  0017D8  6E42               	movwf	_RGB_G_State+1,c
 11087  0017DA  0E03               	movlw	3
 11088  0017DC  6E41               	movwf	_RGB_G_State,c
 11089                           
 11090                           ;LedBlink.c: 110: } else if (ledIndex == RGB_B) {
 11091  0017DE  0012               	return	
 11092  0017E0                     i2l4674:
 11093  0017E0  0E05               	movlw	5
 11094  0017E2  1829               	xorwf	i2SetLedBlink@ledIndex,w,c
 11095  0017E4  102A               	iorwf	i2SetLedBlink@ledIndex+1,w,c
 11096  0017E6  A4D8               	btfss	status,2,c
 11097  0017E8  0012               	return	
 11098                           
 11099                           ;LedBlink.c: 111: RGB_B_OnTime = OnTime;
 11100  0017EA  C02B  F0AA         	movff	i2SetLedBlink@OnTime,_RGB_B_OnTime
 11101  0017EE  C02C  F0AB         	movff	i2SetLedBlink@OnTime+1,_RGB_B_OnTime+1
 11102                           
 11103                           ;LedBlink.c: 112: RGB_B_OffTime = OffTime;
 11104  0017F2  C02D  F0A8         	movff	i2SetLedBlink@OffTime,_RGB_B_OffTime
 11105  0017F6  C02E  F0A9         	movff	i2SetLedBlink@OffTime+1,_RGB_B_OffTime+1
 11106                           
 11107                           ;LedBlink.c: 113: RGB_B_StartAfter = StartAfter;
 11108  0017FA  C02F  F0A4         	movff	i2SetLedBlink@StartAfter,_RGB_B_StartAfter
 11109  0017FE  C030  F0A5         	movff	i2SetLedBlink@StartAfter+1,_RGB_B_StartAfter+1
 11110                           
 11111                           ;LedBlink.c: 114: RGB_B_Enabled = ON;
 11112  001802  0E00               	movlw	0
 11113  001804  0100               	movlb	0	; () banked
 11114  001806  6FA7               	movwf	(_RGB_B_Enabled+1)& (0+255),b
 11115  001808  0E01               	movlw	1
 11116  00180A  6FA6               	movwf	_RGB_B_Enabled& (0+255),b
 11117                           
 11118                           ; BSR set to: 0
 11119                           ;LedBlink.c: 115: RGB_B_BlinkCount = BlinkCount;
 11120  00180C  C031  F003         	movff	i2SetLedBlink@BlinkCount,_RGB_B_BlinkCount
 11121  001810  C032  F004         	movff	i2SetLedBlink@BlinkCount+1,_RGB_B_BlinkCount+1
 11122                           
 11123                           ; BSR set to: 0
 11124                           ;LedBlink.c: 116: RGB_B_BlinkCounter = BlinkCount;
 11125  001814  C031  F0A2         	movff	i2SetLedBlink@BlinkCount,_RGB_B_BlinkCounter
 11126  001818  C032  F0A3         	movff	i2SetLedBlink@BlinkCount+1,_RGB_B_BlinkCounter+1
 11127                           
 11128                           ;LedBlink.c: 117: RGB_B_Counter = 0;
 11129  00181C  0E00               	movlw	0
 11130  00181E  6E06               	movwf	_RGB_B_Counter+1,c
 11131  001820  0E00               	movlw	0
 11132  001822  6E05               	movwf	_RGB_B_Counter,c
 11133                           
 11134                           ;LedBlink.c: 118: RGB_B_State = UNIDENTIFIED;
 11135  001824  0E00               	movlw	0
 11136  001826  6E40               	movwf	_RGB_B_State+1,c
 11137  001828  0E03               	movlw	3
 11138  00182A  6E3F               	movwf	_RGB_B_State,c
 11139  00182C  0012               	return	
 11140  00182E                     __end_ofi2_SetLedBlink:
 11141                           	opt callstack 0
 11142                           
 11143 ;; *************** function _I2C_Master_Stop *****************
 11144 ;; Defined at:
 11145 ;;		line 168 in file "iic.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;		None
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;		None
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  1    wreg      void 
 11152 ;; Registers used:
 11153 ;;		None
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11163 ;;Total ram usage:        0 bytes
 11164 ;; Hardware stack levels used:    1
 11165 ;; This function calls:
 11166 ;;		Nothing
 11167 ;; This function is called by:
 11168 ;;		_I2C_SendCommand
 11169 ;;		_I2C_WriteData
 11170 ;;		_I2C_WriteLength
 11171 ;;		_I2C_ReadData
 11172 ;;		_I2C_ReadLength
 11173 ;;		_I2C_SendCommand_L
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177                           	psect	text112
 11178  002B04                     __ptext112:
 11179                           	opt callstack 0
 11180  002B04                     _I2C_Master_Stop:
 11181                           	opt callstack 18
 11182                           
 11183                           ;iic.c: 169: SSP1CON2bits.PEN = 1;
 11184                           
 11185                           ;incstack = 0
 11186  002B04  8497               	bsf	3991,2,c	;volatile
 11187  002B06                     i2l1880:
 11188  002B06  B497               	btfsc	3991,2,c	;volatile
 11189  002B08  D7FE               	goto	i2l1880
 11190                           
 11191                           ;iic.c: 171: PIR3bits.SSP1IF = 0;
 11192  002B0A  010E               	movlb	14	; () banked
 11193  002B0C  91CD               	bcf	205,0,b	;volatile
 11194                           
 11195                           ; BSR set to: 14
 11196  002B0E  0012               	return		;funcret
 11197  002B10                     __end_of_I2C_Master_Stop:
 11198                           	opt callstack 0
 11199                           
 11200 ;; *************** function _I2C_Master_Start *****************
 11201 ;; Defined at:
 11202 ;;		line 159 in file "iic.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;		None
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;		None
 11207 ;; Return value:  Size  Location     Type
 11208 ;;                  1    wreg      void 
 11209 ;; Registers used:
 11210 ;;		None
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11220 ;;Total ram usage:        0 bytes
 11221 ;; Hardware stack levels used:    1
 11222 ;; This function calls:
 11223 ;;		Nothing
 11224 ;; This function is called by:
 11225 ;;		_I2C_SendCommand
 11226 ;;		_I2C_WriteData
 11227 ;;		_I2C_WriteLength
 11228 ;;		_I2C_ReadData
 11229 ;;		_I2C_ReadLength
 11230 ;;		_I2C_SendCommand_L
 11231 ;; This function uses a non-reentrant model
 11232 ;;
 11233                           
 11234                           	psect	text113
 11235  002B10                     __ptext113:
 11236                           	opt callstack 0
 11237  002B10                     _I2C_Master_Start:
 11238                           	opt callstack 18
 11239                           
 11240                           ;iic.c: 160: SSP1CON2bits.SEN = 1;
 11241                           
 11242                           ; BSR set to: 14
 11243                           ;incstack = 0
 11244  002B10  8097               	bsf	3991,0,c	;volatile
 11245  002B12                     i2l1874:
 11246  002B12  B097               	btfsc	3991,0,c	;volatile
 11247  002B14  D7FE               	goto	i2l1874
 11248                           
 11249                           ;iic.c: 162: PIR3bits.SSP1IF = 0;
 11250  002B16  010E               	movlb	14	; () banked
 11251  002B18  91CD               	bcf	205,0,b	;volatile
 11252                           
 11253                           ; BSR set to: 14
 11254  002B1A  0012               	return		;funcret
 11255  002B1C                     __end_of_I2C_Master_Start:
 11256                           	opt callstack 0
 11257                           
 11258 ;; *************** function _I2C_Master_Send_ACK *****************
 11259 ;; Defined at:
 11260 ;;		line 177 in file "iic.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  Ack             1    wreg     unsigned char 
 11263 ;; Auto vars:     Size  Location     Type
 11264 ;;  Ack             1    1[COMRAM] unsigned char 
 11265 ;; Return value:  Size  Location     Type
 11266 ;;                  1    wreg      void 
 11267 ;; Registers used:
 11268 ;;		wreg, status,2, status,0
 11269 ;; Tracked objects:
 11270 ;;		On entry : 0/0
 11271 ;;		On exit  : 0/0
 11272 ;;		Unchanged: 0/0
 11273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11278 ;;Total ram usage:        2 bytes
 11279 ;; Hardware stack levels used:    1
 11280 ;; This function calls:
 11281 ;;		Nothing
 11282 ;; This function is called by:
 11283 ;;		_I2C_SendCommand
 11284 ;;		_I2C_ReadData
 11285 ;;		_I2C_ReadLength
 11286 ;;		_I2C_SendCommand_L
 11287 ;; This function uses a non-reentrant model
 11288 ;;
 11289                           
 11290                           	psect	text114
 11291  0026DE                     __ptext114:
 11292                           	opt callstack 0
 11293  0026DE                     _I2C_Master_Send_ACK:
 11294                           	opt callstack 18
 11295                           
 11296                           ; BSR set to: 14
 11297                           ;incstack = 0
 11298                           ;I2C_Master_Send_ACK@Ack stored from wreg
 11299  0026DE  6E2A               	movwf	I2C_Master_Send_ACK@Ack,c
 11300                           
 11301                           ;iic.c: 178: SSP1CON2bits.ACKDT = Ack == 0 ? 0 : 1;
 11302  0026E0  502A               	movf	I2C_Master_Send_ACK@Ack,w,c
 11303  0026E2  B4D8               	btfsc	status,2,c
 11304  0026E4  D003               	goto	i2u289_40
 11305  0026E6  6A29               	clrf	??_I2C_Master_Send_ACK& (0+255),c
 11306  0026E8  2A29               	incf	??_I2C_Master_Send_ACK& (0+255),f,c
 11307  0026EA  D001               	goto	i2u290_48
 11308  0026EC                     i2u289_40:
 11309  0026EC  6A29               	clrf	??_I2C_Master_Send_ACK& (0+255),c
 11310  0026EE                     i2u290_48:
 11311  0026EE  3A29               	swapf	??_I2C_Master_Send_ACK,f,c
 11312  0026F0  4629               	rlncf	??_I2C_Master_Send_ACK,f,c
 11313  0026F2  5097               	movf	3991,w,c	;volatile
 11314  0026F4  1829               	xorwf	??_I2C_Master_Send_ACK,w,c
 11315  0026F6  0BDF               	andlw	-33
 11316  0026F8  1829               	xorwf	??_I2C_Master_Send_ACK,w,c
 11317  0026FA  6E97               	movwf	3991,c	;volatile
 11318                           
 11319                           ;iic.c: 179: SSP1CON2bits.ACKEN = 1;
 11320  0026FC  8897               	bsf	3991,4,c	;volatile
 11321  0026FE                     i2l1886:
 11322  0026FE  B897               	btfsc	3991,4,c	;volatile
 11323  002700  D7FE               	goto	i2l1886
 11324                           
 11325                           ;iic.c: 181: PIR3bits.SSP1IF = 0;
 11326  002702  010E               	movlb	14	; () banked
 11327  002704  91CD               	bcf	205,0,b	;volatile
 11328                           
 11329                           ; BSR set to: 14
 11330  002706  0012               	return		;funcret
 11331  002708                     __end_of_I2C_Master_Send_ACK:
 11332                           	opt callstack 0
 11333                           
 11334 ;; *************** function _I2C_BusCollisionISR *****************
 11335 ;; Defined at:
 11336 ;;		line 439 in file "iic.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;		None
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;		None
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		None
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11354 ;;Total ram usage:        0 bytes
 11355 ;; Hardware stack levels used:    1
 11356 ;; This function calls:
 11357 ;;		Nothing
 11358 ;; This function is called by:
 11359 ;;		_INTERRUPT_InterruptManager
 11360 ;; This function uses a non-reentrant model
 11361 ;;
 11362                           
 11363                           	psect	text115
 11364  002C3A                     __ptext115:
 11365                           	opt callstack 0
 11366  002C3A                     _I2C_BusCollisionISR:
 11367                           	opt callstack 23
 11368                           
 11369                           ;iic.c: 441: PIR3bits.BCL1IF = 0;
 11370                           
 11371                           ; BSR set to: 14
 11372                           ;incstack = 0
 11373  002C3A  010E               	movlb	14	; () banked
 11374  002C3C  93CD               	bcf	205,1,b	;volatile
 11375                           
 11376                           ; BSR set to: 14
 11377  002C3E  0012               	return		;funcret
 11378  002C40                     __end_of_I2C_BusCollisionISR:
 11379                           	opt callstack 0
 11380                           
 11381 ;; *************** function _EUSART1_Transmit_ISR *****************
 11382 ;; Defined at:
 11383 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 11384 ;; Parameters:    Size  Location     Type
 11385 ;;		None
 11386 ;; Auto vars:     Size  Location     Type
 11387 ;;		None
 11388 ;; Return value:  Size  Location     Type
 11389 ;;                  1    wreg      void 
 11390 ;; Registers used:
 11391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11401 ;;Total ram usage:        0 bytes
 11402 ;; Hardware stack levels used:    1
 11403 ;; This function calls:
 11404 ;;		Nothing
 11405 ;; This function is called by:
 11406 ;;		_EUSART1_Initialize
 11407 ;;		_INTERRUPT_InterruptManager
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           	psect	text116
 11412  0026B2                     __ptext116:
 11413                           	opt callstack 0
 11414  0026B2                     _EUSART1_Transmit_ISR:
 11415                           	opt callstack 23
 11416                           
 11417                           ;eusart1.c: 199: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
 11418                           
 11419                           ; BSR set to: 14
 11420                           ;incstack = 0
 11421  0026B2  0E40               	movlw	64
 11422  0026B4  604B               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
 11423  0026B6  D010               	goto	i2l902
 11424                           
 11425                           ;eusart1.c: 200: {;eusart1.c: 201: TX1REG = eusart1TxBuffer[eusart1TxTail++];
 11426  0026B8  0E40               	movlw	low _eusart1TxBuffer
 11427  0026BA  2427               	addwf	_eusart1TxTail,w,c	;volatile
 11428  0026BC  6ED9               	movwf	fsr2l,c
 11429  0026BE  6ADA               	clrf	fsr2h,c
 11430  0026C0  0E01               	movlw	high _eusart1TxBuffer
 11431  0026C2  22DA               	addwfc	fsr2h,f,c
 11432  0026C4  50DF               	movf	indf2,w,c
 11433  0026C6  6E9A               	movwf	3994,c	;volatile
 11434  0026C8  2A27               	incf	_eusart1TxTail,f,c	;volatile
 11435                           
 11436                           ;eusart1.c: 202: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
 11437  0026CA  0E3F               	movlw	63
 11438  0026CC  6427               	cpfsgt	_eusart1TxTail,c	;volatile
 11439  0026CE  D002               	goto	i2l5686
 11440                           
 11441                           ;eusart1.c: 203: {;eusart1.c: 204: eusart1TxTail = 0;
 11442  0026D0  0E00               	movlw	0
 11443  0026D2  6E27               	movwf	_eusart1TxTail,c	;volatile
 11444  0026D4                     i2l5686:
 11445                           
 11446                           ;eusart1.c: 205: };eusart1.c: 206: eusart1TxBufferRemaining++;
 11447  0026D4  2A4B               	incf	_eusart1TxBufferRemaining,f,c	;volatile
 11448                           
 11449                           ;eusart1.c: 207: }
 11450  0026D6  0012               	return	
 11451  0026D8                     i2l902:
 11452                           
 11453                           ;eusart1.c: 208: else;eusart1.c: 209: {;eusart1.c: 210: PIE3bits.TX1IE = 0;
 11454  0026D8  010E               	movlb	14	; () banked
 11455  0026DA  99C5               	bcf	197,4,b	;volatile
 11456  0026DC  0012               	return		;funcret
 11457  0026DE                     __end_of_EUSART1_Transmit_ISR:
 11458                           	opt callstack 0
 11459                           
 11460 ;; *************** function _EUSART1_Receive_ISR *****************
 11461 ;; Defined at:
 11462 ;;		line 214 in file "mcc_generated_files/eusart1.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;		None
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;		None
 11467 ;; Return value:  Size  Location     Type
 11468 ;;                  1    wreg      void 
 11469 ;; Registers used:
 11470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11471 ;; Tracked objects:
 11472 ;;		On entry : 0/0
 11473 ;;		On exit  : 0/0
 11474 ;;		Unchanged: 0/0
 11475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11480 ;;Total ram usage:        0 bytes
 11481 ;; Hardware stack levels used:    1
 11482 ;; Hardware stack levels required when called:    2
 11483 ;; This function calls:
 11484 ;;		Absolute function
 11485 ;;		_EUSART1_DefaultErrorHandler
 11486 ;;		_EUSART1_DefaultFramingErrorHandler
 11487 ;;		_EUSART1_DefaultOverrunErrorHandler
 11488 ;;		_EUSART1_RxDataHandler
 11489 ;; This function is called by:
 11490 ;;		_EUSART1_Initialize
 11491 ;;		_INTERRUPT_InterruptManager
 11492 ;; This function uses a non-reentrant model
 11493 ;;
 11494                           
 11495                           	psect	text117
 11496  001FEE                     __ptext117:
 11497                           	opt callstack 0
 11498  001FEE                     _EUSART1_Receive_ISR:
 11499                           	opt callstack 21
 11500                           
 11501                           ;eusart1.c: 217: eusart1RxStatusBuffer[eusart1RxHead].status = 0;
 11502                           
 11503                           ;incstack = 0
 11504  001FEE  0E60               	movlw	low _eusart1RxStatusBuffer
 11505  001FF0  2426               	addwf	_eusart1RxHead,w,c	;volatile
 11506  001FF2  6ED9               	movwf	fsr2l,c
 11507  001FF4  6ADA               	clrf	fsr2h,c
 11508  001FF6  0E00               	movlw	high _eusart1RxStatusBuffer
 11509  001FF8  22DA               	addwfc	fsr2h,f,c
 11510  001FFA  0E00               	movlw	0
 11511  001FFC  6EDF               	movwf	indf2,c
 11512                           
 11513                           ;eusart1.c: 219: if(RC1STAbits.FERR){
 11514  001FFE  A49D               	btfss	3997,2,c	;volatile
 11515  002000  D013               	goto	i2u474_49
 11516                           
 11517                           ;eusart1.c: 220: eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
 11518  002002  0E60               	movlw	low _eusart1RxStatusBuffer
 11519  002004  2426               	addwf	_eusart1RxHead,w,c	;volatile
 11520  002006  6ED9               	movwf	fsr2l,c
 11521  002008  6ADA               	clrf	fsr2h,c
 11522  00200A  0E00               	movlw	high _eusart1RxStatusBuffer
 11523  00200C  22DA               	addwfc	fsr2h,f,c
 11524  00200E  0100               	movlb	0	; () banked
 11525  002010  82DF               	bsf	indf2,1,c
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;eusart1.c: 221: EUSART1_FramingErrorHandler();
 11529  002012  D801               	call	i2u474_48
 11530  002014  D009               	goto	i2u474_49
 11531  002016                     i2u474_48:
 11532  002016  0005               	push	
 11533  002018  6EFA               	movwf	pclath,c
 11534  00201A  51DE               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 11535  00201C  6EFD               	movwf	tosl,c
 11536  00201E  51DF               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 11537  002020  6EFE               	movwf	tosh,c
 11538  002022  6AFF               	clrf	tosu,c
 11539  002024  50FA               	movf	pclath,w,c
 11540  002026  0012               	return		;indir
 11541  002028                     i2u474_49:
 11542                           
 11543                           ;eusart1.c: 222: };eusart1.c: 224: if(RC1STAbits.OERR){
 11544  002028  A29D               	btfss	3997,1,c	;volatile
 11545  00202A  D013               	goto	i2u476_49
 11546                           
 11547                           ;eusart1.c: 225: eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
 11548  00202C  0E60               	movlw	low _eusart1RxStatusBuffer
 11549  00202E  2426               	addwf	_eusart1RxHead,w,c	;volatile
 11550  002030  6ED9               	movwf	fsr2l,c
 11551  002032  6ADA               	clrf	fsr2h,c
 11552  002034  0E00               	movlw	high _eusart1RxStatusBuffer
 11553  002036  22DA               	addwfc	fsr2h,f,c
 11554  002038  0100               	movlb	0	; () banked
 11555  00203A  84DF               	bsf	indf2,2,c
 11556                           
 11557                           ; BSR set to: 0
 11558                           ;eusart1.c: 226: EUSART1_OverrunErrorHandler();
 11559  00203C  D801               	call	i2u476_48
 11560  00203E  D009               	goto	i2u476_49
 11561  002040                     i2u476_48:
 11562  002040  0005               	push	
 11563  002042  6EFA               	movwf	pclath,c
 11564  002044  51DC               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 11565  002046  6EFD               	movwf	tosl,c
 11566  002048  51DD               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 11567  00204A  6EFE               	movwf	tosh,c
 11568  00204C  6AFF               	clrf	tosu,c
 11569  00204E  50FA               	movf	pclath,w,c
 11570  002050  0012               	return		;indir
 11571  002052                     i2u476_49:
 11572                           
 11573                           ;eusart1.c: 227: };eusart1.c: 229: if(eusart1RxStatusBuffer[eusart1RxHead].status){
 11574  002052  0E60               	movlw	low _eusart1RxStatusBuffer
 11575  002054  2426               	addwf	_eusart1RxHead,w,c	;volatile
 11576  002056  6ED9               	movwf	fsr2l,c
 11577  002058  6ADA               	clrf	fsr2h,c
 11578  00205A  0E00               	movlw	high _eusart1RxStatusBuffer
 11579  00205C  22DA               	addwfc	fsr2h,f,c
 11580  00205E  50DF               	movf	indf2,w,c
 11581  002060  B4D8               	btfsc	status,2,c
 11582  002062  D00C               	goto	i2l5706
 11583                           
 11584                           ;eusart1.c: 230: EUSART1_ErrorHandler();
 11585  002064  D801               	call	i2u478_48
 11586  002066  0012               	return	
 11587  002068                     i2u478_48:
 11588  002068  0005               	push	
 11589  00206A  6EFA               	movwf	pclath,c
 11590  00206C  0100               	movlb	0	; () banked
 11591  00206E  51DA               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 11592  002070  6EFD               	movwf	tosl,c
 11593  002072  51DB               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 11594  002074  6EFE               	movwf	tosh,c
 11595  002076  6AFF               	clrf	tosu,c
 11596  002078  50FA               	movf	pclath,w,c
 11597  00207A  0012               	return		;indir
 11598  00207C                     i2l5706:
 11599                           
 11600                           ;eusart1.c: 232: EUSART1_RxDataHandler();
 11601  00207C  ECC8  F014         	call	_EUSART1_RxDataHandler	;wreg free
 11602  002080  0012               	return		;funcret
 11603  002082                     __end_of_EUSART1_Receive_ISR:
 11604                           	opt callstack 0
 11605                           
 11606 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 11607 ;; Defined at:
 11608 ;;		line 251 in file "mcc_generated_files/eusart1.c"
 11609 ;; Parameters:    Size  Location     Type
 11610 ;;		None
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;		None
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  1    wreg      void 
 11615 ;; Registers used:
 11616 ;;		None
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11626 ;;Total ram usage:        0 bytes
 11627 ;; Hardware stack levels used:    1
 11628 ;; This function calls:
 11629 ;;		Nothing
 11630 ;; This function is called by:
 11631 ;;		_EUSART1_Initialize
 11632 ;;		_EUSART1_Receive_ISR
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           	psect	text118
 11637  002C40                     __ptext118:
 11638                           	opt callstack 0
 11639  002C40                     _EUSART1_DefaultOverrunErrorHandler:
 11640                           	opt callstack 22
 11641                           
 11642                           ;eusart1.c: 254: RC1STAbits.CREN = 0;
 11643                           
 11644                           ;incstack = 0
 11645  002C40  989D               	bcf	3997,4,c	;volatile
 11646                           
 11647                           ;eusart1.c: 255: RC1STAbits.CREN = 1;
 11648  002C42  889D               	bsf	3997,4,c	;volatile
 11649  002C44  0012               	return		;funcret
 11650  002C46                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 11651                           	opt callstack 0
 11652                           
 11653 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 11654 ;; Defined at:
 11655 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 11656 ;; Parameters:    Size  Location     Type
 11657 ;;		None
 11658 ;; Auto vars:     Size  Location     Type
 11659 ;;		None
 11660 ;; Return value:  Size  Location     Type
 11661 ;;                  1    wreg      void 
 11662 ;; Registers used:
 11663 ;;		None
 11664 ;; Tracked objects:
 11665 ;;		On entry : 0/0
 11666 ;;		On exit  : 0/0
 11667 ;;		Unchanged: 0/0
 11668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11673 ;;Total ram usage:        0 bytes
 11674 ;; Hardware stack levels used:    1
 11675 ;; This function calls:
 11676 ;;		Nothing
 11677 ;; This function is called by:
 11678 ;;		_EUSART1_Initialize
 11679 ;;		_EUSART1_Receive_ISR
 11680 ;; This function uses a non-reentrant model
 11681 ;;
 11682                           
 11683                           	psect	text119
 11684  002C76                     __ptext119:
 11685                           	opt callstack 0
 11686  002C76                     _EUSART1_DefaultFramingErrorHandler:
 11687                           	opt callstack 22
 11688                           
 11689                           ;incstack = 0
 11690  002C76  0012               	return		;funcret
 11691  002C78                     __end_of_EUSART1_DefaultFramingErrorHandler:
 11692                           	opt callstack 0
 11693                           
 11694 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 11695 ;; Defined at:
 11696 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 11697 ;; Parameters:    Size  Location     Type
 11698 ;;		None
 11699 ;; Auto vars:     Size  Location     Type
 11700 ;;		None
 11701 ;; Return value:  Size  Location     Type
 11702 ;;                  1    wreg      void 
 11703 ;; Registers used:
 11704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11705 ;; Tracked objects:
 11706 ;;		On entry : 0/0
 11707 ;;		On exit  : 0/0
 11708 ;;		Unchanged: 0/0
 11709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11714 ;;Total ram usage:        0 bytes
 11715 ;; Hardware stack levels used:    1
 11716 ;; Hardware stack levels required when called:    1
 11717 ;; This function calls:
 11718 ;;		_EUSART1_RxDataHandler
 11719 ;; This function is called by:
 11720 ;;		_EUSART1_Initialize
 11721 ;;		_EUSART1_Receive_ISR
 11722 ;; This function uses a non-reentrant model
 11723 ;;
 11724                           
 11725                           	psect	text120
 11726  002C46                     __ptext120:
 11727                           	opt callstack 0
 11728  002C46                     _EUSART1_DefaultErrorHandler:
 11729                           	opt callstack 21
 11730                           
 11731                           ;eusart1.c: 260: EUSART1_RxDataHandler();
 11732                           
 11733                           ;incstack = 0
 11734  002C46  ECC8  F014         	call	_EUSART1_RxDataHandler	;wreg free
 11735  002C4A  0012               	return		;funcret
 11736  002C4C                     __end_of_EUSART1_DefaultErrorHandler:
 11737                           	opt callstack 0
 11738                           
 11739 ;; *************** function _EUSART1_RxDataHandler *****************
 11740 ;; Defined at:
 11741 ;;		line 239 in file "mcc_generated_files/eusart1.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;		None
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;		None
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  1    wreg      void 
 11748 ;; Registers used:
 11749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11759 ;;Total ram usage:        0 bytes
 11760 ;; Hardware stack levels used:    1
 11761 ;; This function calls:
 11762 ;;		Nothing
 11763 ;; This function is called by:
 11764 ;;		_EUSART1_Receive_ISR
 11765 ;;		_EUSART1_DefaultErrorHandler
 11766 ;; This function uses a non-reentrant model
 11767 ;;
 11768                           
 11769                           	psect	text121
 11770  002990                     __ptext121:
 11771                           	opt callstack 0
 11772  002990                     _EUSART1_RxDataHandler:
 11773                           	opt callstack 22
 11774                           
 11775                           ;eusart1.c: 241: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 11776                           
 11777                           ;incstack = 0
 11778  002990  0E00               	movlw	low _eusart1RxBuffer
 11779  002992  2426               	addwf	_eusart1RxHead,w,c	;volatile
 11780  002994  6ED9               	movwf	fsr2l,c
 11781  002996  6ADA               	clrf	fsr2h,c
 11782  002998  0E01               	movlw	high _eusart1RxBuffer
 11783  00299A  22DA               	addwfc	fsr2h,f,c
 11784  00299C  CF99 FFDF          	movff	3993,indf2	;volatile
 11785  0029A0  2A26               	incf	_eusart1RxHead,f,c	;volatile
 11786                           
 11787                           ;eusart1.c: 242: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 11788  0029A2  0E3F               	movlw	63
 11789  0029A4  6426               	cpfsgt	_eusart1RxHead,c	;volatile
 11790  0029A6  D002               	goto	i2l4916
 11791                           
 11792                           ;eusart1.c: 243: {;eusart1.c: 244: eusart1RxHead = 0;
 11793  0029A8  0E00               	movlw	0
 11794  0029AA  6E26               	movwf	_eusart1RxHead,c	;volatile
 11795  0029AC                     i2l4916:
 11796                           
 11797                           ;eusart1.c: 245: };eusart1.c: 246: eusart1RxCount++;
 11798  0029AC  2A24               	incf	_eusart1RxCount,f,c	;volatile
 11799  0029AE  0012               	return		;funcret
 11800  0029B0                     __end_of_EUSART1_RxDataHandler:
 11801                           	opt callstack 0
 11802                           
 11803                           	psect	text122
 11804  000000                     __ptext122:
 11805                           	opt callstack 0
 11806                           
 11807                           	psect	rparam
 11808  0000                     
 11809                           	psect	temp
 11810  00004C                     btemp:
 11811                           	opt callstack 0
 11812  00004C                     	ds	1
 11813  0000                     int$flags	set	btemp
 11814  0000                     wtemp8	set	btemp+1
 11815  0000                     ttemp5	set	btemp+1
 11816  0000                     ttemp6	set	btemp+4
 11817  0000                     ttemp7	set	btemp+8
 11818                           tosu	equ	0xFFF
 11819                           tosh	equ	0xFFE
 11820                           tosl	equ	0xFFD
 11821                           stkptr	equ	0xFFC
 11822                           pclatu	equ	0xFFB
 11823                           pclath	equ	0xFFA
 11824                           pcl	equ	0xFF9
 11825                           tblptru	equ	0xFF8
 11826                           tblptrh	equ	0xFF7
 11827                           tblptrl	equ	0xFF6
 11828                           tablat	equ	0xFF5
 11829                           prodh	equ	0xFF4
 11830                           prodl	equ	0xFF3
 11831                           indf0	equ	0xFEF
 11832                           postinc0	equ	0xFEE
 11833                           postdec0	equ	0xFED
 11834                           preinc0	equ	0xFEC
 11835                           plusw0	equ	0xFEB
 11836                           fsr0h	equ	0xFEA
 11837                           fsr0l	equ	0xFE9
 11838                           wreg	equ	0xFE8
 11839                           indf1	equ	0xFE7
 11840                           postinc1	equ	0xFE6
 11841                           postdec1	equ	0xFE5
 11842                           preinc1	equ	0xFE4
 11843                           plusw1	equ	0xFE3
 11844                           fsr1h	equ	0xFE2
 11845                           fsr1l	equ	0xFE1
 11846                           bsr	equ	0xFE0
 11847                           indf2	equ	0xFDF
 11848                           postinc2	equ	0xFDE
 11849                           postdec2	equ	0xFDD
 11850                           preinc2	equ	0xFDC
 11851                           plusw2	equ	0xFDB
 11852                           fsr2h	equ	0xFDA
 11853                           fsr2l	equ	0xFD9
 11854                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    28
    Data        12
    BSS         288
    Persistent  41
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      75
    BANK0           160      0     160
    BANK1           256     19     147
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    S35$3$0	PTR void  size(2) Largest target is 0

    S35$4$0	PTR void  size(2) Largest target is 0

    S35$5$0	PTR void  size(2) Largest target is 0

    S35$8$0	PTR FTN()void  size(2) Largest target is 0

    spi2_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCCF7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF7_DefaultInterruptHandler(), 

    IOCCF7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF7_DefaultInterruptHandler(), Absolute function(), 

    IOCCF6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF6_DefaultInterruptHandler(), 

    IOCCF6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF6_DefaultInterruptHandler(), Absolute function(), 

    IOCCF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), 

    IOCCF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF5_DefaultInterruptHandler(), Absolute function(), 

    IOCCF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF4_DefaultInterruptHandler(), 

    IOCCF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF4_DefaultInterruptHandler(), Absolute function(), 

    IOCCF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF3_DefaultInterruptHandler(), 

    IOCCF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCCF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF5_DefaultInterruptHandler(), 

    IOCBF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF5_DefaultInterruptHandler(), Absolute function(), 

    IOCAF4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF4_DefaultInterruptHandler(), 

    IOCAF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF4_DefaultInterruptHandler(), Absolute function(), 

    IOCAF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF3_DefaultInterruptHandler(), 

    IOCAF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF3_DefaultInterruptHandler(), Absolute function(), 

    IOCAF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF1_DefaultInterruptHandler(), 

    IOCAF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF1_DefaultInterruptHandler(), Absolute function(), 

    IOCAF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF0_DefaultInterruptHandler(), 

    IOCAF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF0_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_Custom_ISR(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_Custom_ISR(), INT0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Custom_ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Custom_ISR(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    S35$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> spi2_isr(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> spi2_isr(), 

    S35$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> spi2_setSpiISR(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> spi2_setSpiISR(), 

    S35$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> spi2_readByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> spi2_readByte(), 

    S35$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> spi2_writeByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> spi2_writeByte(), 

    S35$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi2_readBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi2_readBlock(), 

    S35$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi2_writeBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi2_writeBlock(), 

    S35$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi2_exchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> spi2_exchangeBlock(), 

    S35$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> spi2_exchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> i2_spi2_exchangeByte(), spi2_exchangeByte(), 

    S35$spiOpen	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> MASTER_open(), 

    spiMaster.spiOpen	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> MASTER_open(), 

    S35$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> spi2_close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> spi2_close(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_Custom_ISR->i2_SetLed
    _INT0_CallBack->_INT0_Custom_ISR
    _INT0_Custom_ISR->_ext_rf_runcmd
    _ext_rf_runcmd->_MRF89XA_ReadAllConfigs
    _ext_rf_runcmd->_MRF89XA_SendData
    _MRF89XA_SendData->_MRF89XA_IsTxDone
    _MRF89XA_IsTxDone->_MRF89XA_ReadConfig
    _MRF89XA_ReadAllConfigs->_MRF89XA_ReadConfig
    _MRF89XA_ReadConfig->i2_MRF89XA_SendConfig
    i2_MRF89XA_SendConfig->i2_Delay_Xus
    i2_MRF89XA_ExchangeByte->i2_spi2_exchangeByte
    _I2C_SendCommand->_I2C_Master_Write
    _I2C_Master_Write->i2_SetLedBlink

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MRF89XA_Initialize
    _ext_rf_initialize->_GetTarget
    _SYSTEM_Initialize->_SetLed
    _MASTER_open->_spi2_open
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF3_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF5_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF3_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF5_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF6_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF7_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _RunLoop->_SetLedBlink
    _MRF89XA_Initialize->_MRF89XA_SetMode
    _MRF89XA_Initialize->_MRF89XA_SetModulation
    _MRF89XA_SetModulation->_MRF89XA_WriteConfig
    _MRF89XA_SetMode->_MRF89XA_WriteConfig
    _MRF89XA_WriteConfig->_MRF89XA_SendConfig
    _MRF89XA_SendConfig->_Delay_Xus
    _MRF89XA_ExchangeByte->_spi2_exchangeByte

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   29401
                          _Delay_Xms
           _INT0_SetInterruptHandler
                 _MRF89XA_Initialize
                            _RunLoop
                  _SYSTEM_Initialize
                        _SetLedBlink
           _TMR2_SetInterruptHandler
                  _ext_rf_initialize
 ---------------------------------------------------------------------------------
 (1) _ext_rf_initialize                                    0     0      0      68
                          _GetTarget
 ---------------------------------------------------------------------------------
 (2) _GetTarget                                            2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    6359
                  _CLKREF_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _I2C_Master_Init
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                             _SetLed
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (2) _spi_master_open                                      1     1      0     110
                                              2 BANK1      1     1      0
                        _MASTER_open
 ---------------------------------------------------------------------------------
 (3) _MASTER_open                                          0     0      0      88
                          _spi2_open
 ---------------------------------------------------------------------------------
 (4) _spi2_open                                            2     2      0      88
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     121
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SetLed                                               6     2      4    3649
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0    1210
         _IOCAF0_SetInterruptHandler
         _IOCAF1_SetInterruptHandler
         _IOCAF3_SetInterruptHandler
         _IOCAF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
         _IOCCF3_SetInterruptHandler
         _IOCCF4_SetInterruptHandler
         _IOCCF5_SetInterruptHandler
         _IOCCF6_SetInterruptHandler
         _IOCCF7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF7_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCCF6_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCCF5_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCCF4_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCCF3_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF5_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF4_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF3_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF1_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF0_SetInterruptHandler                           2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     453
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RunLoop                                              0     0      0    5640
                       _EUSART1_Read
                      _EUSART1_Write
                _EUSART1_is_rx_ready
                _EUSART1_is_tx_ready
                        _SetLedBlink
 ---------------------------------------------------------------------------------
 (1) _SetLedBlink                                         10     0     10    5541
                                              0 BANK1     10     0     10
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MRF89XA_Initialize                                   3     1      2   10653
                                             16 BANK1      3     1      2
                    _MRF89XA_SetMode
              _MRF89XA_SetModulation
                _MRF89XA_WriteConfig
 ---------------------------------------------------------------------------------
 (2) _MRF89XA_SetModulation                                2     2      0    3461
                                             14 BANK1      2     2      0
                _MRF89XA_WriteConfig
 ---------------------------------------------------------------------------------
 (2) _MRF89XA_SetMode                                      2     2      0    3529
                                             14 BANK1      2     2      0
                _MRF89XA_WriteConfig
 ---------------------------------------------------------------------------------
 (2) _MRF89XA_WriteConfig                                  2     1      1    3390
                                             12 BANK1      2     1      1
                 _MRF89XA_GetAddress
                 _MRF89XA_SendConfig
 ---------------------------------------------------------------------------------
 (3) _MRF89XA_SendConfig                                   3     2      1     983
                                              9 BANK1      3     2      1
                          _Delay_Xus
               _MRF89XA_ExchangeByte
                 _MRF89XA_GetAddress (ARG)
 ---------------------------------------------------------------------------------
 (4) _MRF89XA_ExchangeByte                                 1     1      0      44
                                              1 BANK1      1     1      0
                  _spi2_exchangeByte
 ---------------------------------------------------------------------------------
 (5) _spi2_exchangeByte                                    1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Delay_Xus                                            9     5      4     698
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (3) _MRF89XA_GetAddress                                   3     2      1     275
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Delay_Xms                                            9     5      4     718
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           4     4      0    7163
                                             18 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _I2C_BusCollisionISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR2_ISR
                           _TMR4_ISR
                           _spi2_isr
 ---------------------------------------------------------------------------------
 (8) _spi2_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR4_ISR                                             0     0      0       0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR4_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0    1224
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        0     0      0    1224
                   Absolute function *
                    _TMR2_Custom_ISR *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR2_Custom_ISR                                     0     0      0    1224
                           i2_SetLed
 ---------------------------------------------------------------------------------
 (11) i2_SetLed                                            6     2      4    1224
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF0_ISR
                         _IOCAF1_ISR
                         _IOCAF3_ISR
                         _IOCAF4_ISR
                         _IOCBF5_ISR
                         _IOCCF3_ISR
                         _IOCCF4_ISR
                         _IOCCF5_ISR
                         _IOCCF6_ISR
                         _IOCCF7_ISR
 ---------------------------------------------------------------------------------
 (9) _IOCCF7_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF7_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCCF7_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCCF6_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCCF6_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCCF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCCF5_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCCF4_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCCF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCCF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCCF3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCCF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCBF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCBF5_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCAF4_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCAF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCAF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCAF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCAF1_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCAF1_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IOCAF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _IOCAF0_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT2_CallBack                                        0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0    5939
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT0_CallBack                                        0     0      0    5939
                   Absolute function *
                    _INT0_Custom_ISR *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT0_Custom_ISR                                     1     1      0    5939
                                             17 COMRAM     1     1      0
                    _I2C_SendCommand
                      _ext_rf_runcmd
 ---------------------------------------------------------------------------------
 (11) _ext_rf_runcmd                                       1     1      0    4351
                                             16 COMRAM     1     1      0
                    _I2C_SendCommand
             _MRF89XA_ReadAllConfigs
                   _MRF89XA_SendData
                          _ToggleLed
                      i2_SetLedBlink
 ---------------------------------------------------------------------------------
 (12) _ToggleLed                                           3     1      2     360
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _MRF89XA_SendData                                    2     1      1     684
                                             14 COMRAM     2     1      1
                   _MRF89XA_IsTxDone
                        i2_Delay_Xms
             i2_MRF89XA_ExchangeByte
 ---------------------------------------------------------------------------------
 (13) _MRF89XA_IsTxDone                                    1     1      0     422
                                             13 COMRAM     1     1      0
                 _MRF89XA_ReadConfig
 ---------------------------------------------------------------------------------
 (12) _MRF89XA_ReadAllConfigs                              3     3      0     471
                                             13 COMRAM     3     3      0
                 _MRF89XA_ReadConfig
 ---------------------------------------------------------------------------------
 (14) _MRF89XA_ReadConfig                                  1     1      0     399
                                             12 COMRAM     1     1      0
               i2_MRF89XA_GetAddress
               i2_MRF89XA_SendConfig
 ---------------------------------------------------------------------------------
 (15) i2_MRF89XA_SendConfig                                3     2      1     261
                                              9 COMRAM     3     2      1
                        i2_Delay_Xus
             i2_MRF89XA_ExchangeByte
               i2_MRF89XA_GetAddress (ARG)
 ---------------------------------------------------------------------------------
 (13) i2_MRF89XA_ExchangeByte                              1     1      0      44
                                              1 COMRAM     1     1      0
                i2_spi2_exchangeByte
 ---------------------------------------------------------------------------------
 (14) i2_spi2_exchangeByte                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_Delay_Xus                                         9     5      4     124
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (15) i2_MRF89XA_GetAddress                                3     2      1     116
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (12) _I2C_SendCommand                                     3     2      1    1565
                                             11 COMRAM     3     2      1
                _I2C_Master_Send_ACK
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                        i2_Delay_Xms
 ---------------------------------------------------------------------------------
 (13) i2_Delay_Xms                                         9     5      4      98
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (13) _I2C_Master_Write                                    1     1      0    1204
                                             10 COMRAM     1     1      0
                      i2_SetLedBlink
 ---------------------------------------------------------------------------------
 (12) i2_SetLedBlink                                      10     0     10    1182
                                              0 COMRAM    10     0     10
 ---------------------------------------------------------------------------------
 (13) _I2C_Master_Stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_Master_Start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C_Master_Send_ACK                                 2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_Xms
   _INT0_SetInterruptHandler
   _MRF89XA_Initialize
     _MRF89XA_SetMode
       _MRF89XA_WriteConfig
         _MRF89XA_GetAddress
         _MRF89XA_SendConfig
           _Delay_Xus
           _MRF89XA_ExchangeByte
             _spi2_exchangeByte
           _MRF89XA_GetAddress (ARG)
     _MRF89XA_SetModulation
       _MRF89XA_WriteConfig
         _MRF89XA_GetAddress
         _MRF89XA_SendConfig
           _Delay_Xus
           _MRF89XA_ExchangeByte
             _spi2_exchangeByte
           _MRF89XA_GetAddress (ARG)
     _MRF89XA_WriteConfig
       _MRF89XA_GetAddress
       _MRF89XA_SendConfig
         _Delay_Xus
         _MRF89XA_ExchangeByte
           _spi2_exchangeByte
         _MRF89XA_GetAddress (ARG)
   _RunLoop
     _EUSART1_Read
     _EUSART1_Write
     _EUSART1_is_rx_ready
     _EUSART1_is_tx_ready
     _SetLedBlink
   _SYSTEM_Initialize
     _CLKREF_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _FVR_Initialize
     _I2C_Master_Init
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF0_SetInterruptHandler
       _IOCAF1_SetInterruptHandler
       _IOCAF3_SetInterruptHandler
       _IOCAF4_SetInterruptHandler
       _IOCBF5_SetInterruptHandler
       _IOCCF3_SetInterruptHandler
       _IOCCF4_SetInterruptHandler
       _IOCCF5_SetInterruptHandler
       _IOCCF6_SetInterruptHandler
       _IOCCF7_SetInterruptHandler
     _PMD_Initialize
     _SetLed
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _spi_master_open
       _MASTER_open
         _spi2_open
   _SetLedBlink
   _TMR2_SetInterruptHandler
   _ext_rf_initialize
     _GetTarget

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C_BusCollisionISR *
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_Custom_ISR *
         _I2C_SendCommand
           _I2C_Master_Send_ACK
           _I2C_Master_Start
           _I2C_Master_Stop
           _I2C_Master_Write
             i2_SetLedBlink
           i2_Delay_Xms
         _ext_rf_runcmd
           _I2C_SendCommand
             _I2C_Master_Send_ACK
             _I2C_Master_Start
             _I2C_Master_Stop
             _I2C_Master_Write
               i2_SetLedBlink
             i2_Delay_Xms
           _MRF89XA_ReadAllConfigs
             _MRF89XA_ReadConfig
               i2_MRF89XA_GetAddress
               i2_MRF89XA_SendConfig
                 i2_Delay_Xus
                 i2_MRF89XA_ExchangeByte
                   i2_spi2_exchangeByte
                 i2_MRF89XA_GetAddress (ARG)
           _MRF89XA_SendData
             _MRF89XA_IsTxDone
               _MRF89XA_ReadConfig
                 i2_MRF89XA_GetAddress
                 i2_MRF89XA_SendConfig
                   i2_Delay_Xus
                   i2_MRF89XA_ExchangeByte
                     i2_spi2_exchangeByte
                   i2_MRF89XA_GetAddress (ARG)
             i2_Delay_Xms
             i2_MRF89XA_ExchangeByte
               i2_spi2_exchangeByte
           _ToggleLed
           i2_SetLedBlink
       _INT0_DefaultInterruptHandler *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC *
     _IOCAF0_ISR
       Absolute function(Fake) *
       _IOCAF0_DefaultInterruptHandler *
     _IOCAF1_ISR
       Absolute function(Fake) *
       _IOCAF1_DefaultInterruptHandler *
     _IOCAF3_ISR
       Absolute function(Fake) *
       _IOCAF3_DefaultInterruptHandler *
     _IOCAF4_ISR
       Absolute function(Fake) *
       _IOCAF4_DefaultInterruptHandler *
     _IOCBF5_ISR
       Absolute function(Fake) *
       _IOCBF5_DefaultInterruptHandler *
     _IOCCF3_ISR
       Absolute function(Fake) *
       _IOCCF3_DefaultInterruptHandler *
     _IOCCF4_ISR
       Absolute function(Fake) *
       _IOCCF4_DefaultInterruptHandler *
     _IOCCF5_ISR
       Absolute function(Fake) *
       _IOCCF5_DefaultInterruptHandler *
     _IOCCF6_ISR
       Absolute function(Fake) *
       _IOCCF6_DefaultInterruptHandler *
     _IOCCF7_ISR
       Absolute function(Fake) *
       _IOCCF7_DefaultInterruptHandler *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_Custom_ISR *
         i2_SetLed
       _TMR2_DefaultInterruptHandler *
   _TMR4_ISR *
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
   _spi2_isr *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     13      93       8       57.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      4B       1       79.8%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17E       6        0.0%
DATA                 0      0     17E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 08 17:45:22 2019

              __end_of_TMR2_SetInterruptHandler 2B3A                        _eusart1TxBufferRemaining 004B  
                   __end_ofi2_spi2_exchangeByte 2AD2          __end_of_IOCCF4_DefaultInterruptHandler 2C64  
       __size_of_IOCCF4_DefaultInterruptHandler 0002                  _IOCCF4_DefaultInterruptHandler 2C62  
                             ??_INT0_Custom_ISR 003A                                     __CFG_CP$OFF 000000  
                                _spi2_setSpiISR 000000                          __end_of_FVR_Initialize 2C3A  
                         SetLedBlink@StartAfter 0186                    __size_of_I2C_Master_Send_ACK 002A  
                                   __CFG_LVP$ON 000000                                 _DAC1_Initialize 2AEC  
                                           l896 25C4                                             _PR2 000FBC  
                                           _PR4 000FB6                                    __CFG_CPD$OFF 000000  
                    ??_INT0_SetInterruptHandler 0000                 __size_of_MRF89XA_ReadAllConfigs 0026  
                       __size_of_PMD_Initialize 001C                                 _TMR2_Initialize 2684  
                                           tosl 000FFD                                 _TMR2_Custom_ISR 0F1E  
                                           wreg 000FE8                                   _INT0_CallBack 2970  
        __end_of_IOCCF7_DefaultInterruptHandler 2C5E         __size_of_IOCCF7_DefaultInterruptHandler 0002  
                _IOCCF7_DefaultInterruptHandler 2C5C                                    ?_MASTER_open 0029  
            __end_of_IOCCF3_SetInterruptHandler 2B6C                      _IOCCF3_SetInterruptHandler 2B62  
            __end_of_IOCCF6_SetInterruptHandler 2B4E                      _IOCCF6_SetInterruptHandler 2B44  
                                 _INT1_CallBack 2950                                    __CFG_ZCD$OFF 000000  
                      __size_of_MRF89XA_SetMode 0038                                            l1097 2A2C  
                                          l1283 2490                                            l1284 247C  
                                          l6134 29B6                                            l6056 1E0C  
                                          l6144 29C0                                            l6066 2A00  
                                          l6410 14DC                                            l6138 29BC  
                                          l6420 1528                                            l6340 1F14  
                                          l6332 1EEA                                            l6430 1576  
                                          l6440 15C4                                            l6344 1F2A  
                                          l6336 1EFE                                            l6328 1ED6  
                                          l6450 1612                                            l6524 234C  
                                          l6372 24E2                                            l6348 1F40  
                                          l6382 25B2                                            l6534 221C  
                                          l6528 236C                                            l6480 260E  
                                          l6472 25F8                                            l6490 28BC  
                                          l6538 222E                                            l6626 19DA  
                                          l6476 2602                                            l6396 25E2  
                                          l6398 25E4                         i2SetLedBlink@BlinkCount 0031  
                                          _LATA 000F83                                            _LATB 000F84  
                                          _LATC 000F85                                            _LATD 000F86  
                                          _LATE 000F87                                            _T2PR 000FBC  
                                          _T4PR 000FB6                                            _PMD0 000EE1  
                                          _PMD1 000EE2                                            _PMD2 000EE3  
                                          _PMD3 000EE4                                            _PMD4 000EE5  
                                          u6057 2354                                            _PMD5 000EE6  
                                          u5515 1F10                                            u5516 1F12  
                                          u5535 1F26                                            u5536 1F28  
                                          u5555 1F3C                                            u5475 1EE6  
                                          u5556 1F3E                                            u5476 1EE8  
                                          u5575 1F52                                            u5495 1EFA  
                                          u5576 1F54                                            u5496 1EFC  
                                          _TMR2 000FBB                                            _TMR4 000FB5  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                                   _INT2_CallBack 2930  
                                 _EUSART1_Write 25AE                                   __CFG_FCMEN$ON 000000  
                        MRF89XA_Initialize@Mode 0190                                            _main 182E  
                                 ?_EUSART1_Read 0029                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          fsr2l 000FD9                                            btemp 004C  
              ??_IOCCF5_DefaultInterruptHandler 0029                 ?_IOCCF5_DefaultInterruptHandler 0029  
             __size_of_INT2_SetInterruptHandler 000A                       ?_INT2_SetInterruptHandler 0180  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00C8                                  _spi2_writeByte 000000  
                                 __CFG_CSWEN$ON 000000                      ??_TMR4_SetInterruptHandler 0000  
                                  ___param_bank 000000                                    _G_StartAfter 00CC  
                                 __CFG_SCANE$ON 000000                          ??i2_MRF89XA_SendConfig 0033  
                              __end_of_INT0_ISR 2C20                                __end_of_INT1_ISR 2C16  
                              ?_I2C_Master_Init 0029                                __end_of_INT2_ISR 2C0C  
                               ?_FVR_Initialize 0029                             __size_of_IOCAF0_ISR 0026  
                           __size_of_IOCAF1_ISR 0026                                ?_I2C_Master_Stop 0029  
                __size_of_OSCILLATOR_Initialize 0018                             __size_of_IOCAF3_ISR 0026  
                    __end_of_MRF89XA_GetAddress 2A04                             __size_of_IOCAF4_ISR 0026  
                 __end_of_OSCILLATOR_Initialize 2A50                                 __end_of_RunLoop 223A  
                    __size_of_spi2_exchangeByte 001A                             __size_of_IOCBF5_ISR 0026  
                           __size_of_IOCCF3_ISR 0026                             __size_of_IOCCF4_ISR 0026  
                           __size_of_IOCCF5_ISR 0026                             __size_of_IOCCF6_ISR 0026  
                         _eusart1RxStatusBuffer 0060                             __size_of_IOCCF7_ISR 0026  
                                         ?_main 0029                                   __CFG_WDTE$OFF 000000  
                                         _T2CON 000FBD                                           _T4CON 000FB7  
                                         _T2HLT 000FBE                                           _T4HLT 000FB8  
                                __CFG_DEBUG$OFF 000000                                           _T2TMR 000FBB  
                                         _T2RST 000FC0                                           _T4TMR 000FB5  
                                         i2l222 0028                                           i2l231 005C  
                                         i2l224 0034                                           i2l233 0074  
                                         i2l226 0040                                           _T4RST 000FBA  
                                         i2l235 0092                                           i2l228 004C  
                                         i2l237 009E                                           i2l238 00B4  
                                         i2l239 00AA                        __end_of_MRF89XA_IsTxDone 2AC0  
                                         i2l902 26D8                          ?_MRF89XA_SetModulation 0029  
                                         _OSCEN 000EDC                                           _TRISA 000F88  
                                         _TRISB 000F89                                  ?_INT0_CallBack 0029  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                         i2MRF89XA_SendConfig@ret 0034  
                                 __CFG_WRT0$OFF 000000                                 _TMR4_Initialize 2656  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 26B2  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                _R_BlinkCounter 00D4                                __end_of_TMR2_ISR 2C02  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                              __end_of_TMR4_ISR 28F0                                   __CFG_WRTD$OFF 000000  
                                ?_INT1_CallBack 0029                                  __CFG_EBTRB$OFF 000000  
                      __end_of_MRF89XA_SendData 2656                         __end_of_PIN_MANAGER_IOC 2338  
                ??_INT1_DefaultInterruptHandler 0029                                __end_ofi2_SetLed 1FEE  
                            __CFG_MCLRE$EXTMCLR 000000                                  ?_INT2_CallBack 0029  
                      _INT1_SetInterruptHandler 2BA8                                  ?_EUSART1_Write 0029  
                                    SetLed@Mode 0182                                           pclath 000FFA  
                                         tablat 000FF5                                  ??_EUSART1_Read 0000  
                               _spi2_writeBlock 000000                                           ttemp5 004D  
                                         ttemp6 0050                                           ttemp7 0054  
                                         status 000FD8                              _RGB_R_BlinkCounter 00B6  
                                         wtemp8 004D      __end_of_EUSART1_DefaultFramingErrorHandler 2C78  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0029  
           ?_EUSART1_DefaultFramingErrorHandler 0029              _EUSART1_DefaultFramingErrorHandler 2C76  
                        _MRF89XA_ReadAllConfigs 2884                                 ??i2_SetLedBlink 0033  
                         spi_master_open@config 0182                                ?_I2C_SendCommand 0034  
                                 ??_SetLedBlink 0000                        ??i2_MRF89XA_ExchangeByte 002A  
                             _ext_rf_initialize 2B1C                                 __initialization 238A  
               spi2_open@spiUniqueConfiguration 0181                           MRF89XA_GetAddress@ret 0182  
                    __end_of_EUSART1_Initialize 2106                                    __end_of_main 19F6  
                       __end_of_DAC1_Initialize 2AF8                              ?_ext_rf_initialize 0029  
                       __end_of_TMR2_Initialize 26B2                     ?_INTERRUPT_InterruptManager 0029  
                       __end_of_TMR2_Custom_ISR 1490                              __size_of_Delay_Xms 0052  
                            __size_of_Delay_Xus 0046                         MRF89XA_WriteConfig@Data 018C  
                      _TMR2_SetInterruptHandler 2B30                                          ??_main 0000  
                                 __activetblptr 000003                      __end_of_MRF89XA_ReadConfig 2AAC  
                           ??_ext_rf_initialize 0000                              __size_of_GetTarget 0016  
                       _IOCAF4_InterruptHandler 00EC                           ?_EUSART1_Transmit_ISR 0029  
                             ?_I2C_Master_Start 0029                               ?_I2C_Master_Write 0029  
                                    _SentI2CCmd 0021                    ??_IOCAF0_SetInterruptHandler 0000  
                    __end_of_MRF89XA_Initialize 1C72                    ??_IOCAF3_SetInterruptHandler 0000  
                            ??_I2C_Master_Start 0029                              ??_I2C_Master_Write 0033  
                  ??_IOCBF5_SetInterruptHandler 0000                    ??_IOCCF4_SetInterruptHandler 0000  
                           _MRF89XA_WriteConfig 2A04                                          _ANSELA 000F11  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                  ??_IOCCF7_SetInterruptHandler 0000                                          _RC1REG 000F99  
                                        _RB1PPS 000EF0                                          _RB2PPS 000EF1  
                                        _RB3PPS 000EF2                                          _RC1STA 000F9D  
                                        _RB4PPS 000EF3                                          _RD0PPS 000EFF  
                                        _RD2PPS 000F01                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0004                                          i2l2070 264A  
                                        i2l1097 2AC6                                  __CFG_WDTCCS$SC 000000  
                                        i2l1283 2514                                          i2l1284 2502  
                                        i2l5010 10EE                                          i2l1574 148E  
                                        i2l5024 1134                                          i2l5008 10E8  
                                        i2l1930 2118                                          i2l5034 1172  
                                        i2l5050 11D0                                          i2l5108 1304  
                                        i2l5052 11D6                                          i2l1942 2164  
                                        i2l1694 1E2E                                          i2l5150 13EC  
                                        i2l5118 1342                                          i2l5134 13A0  
                                        i2l1935 212C                                          i2l1880 2B06  
                                        i2l1696 1E40                                          i2l5160 142A  
                                        i2l5136 13A6                                          i2l1874 2B12  
                                        i2l1938 2162                                          i2l4602 2A7C  
                                        i2l1698 1E52                                          i2l5066 121C  
                                        i2l1939 215C                                          i2l5076 125A  
                                        i2l5092 12B8                                          i2l1886 26FE  
                                        i2l1894 256C                                          i2l5094 12BE  
                                        i2l4712 2404                                          i2l5176 1488  
                                        i2l4634 16AA                                          i2l4730 2120  
                                        i2l4802 2636                                          i2l4644 16F6  
                                        i2l4708 23EA                                          i2l4740 2132  
                                        i2l4654 1744                                          i2l4664 1792  
                                        i2l5706 207C                                          i2l4674 17E0  
                                        i2l4770 1CBC                                          i2l4850 1F82  
                                        i2l4916 29AC                                          i2l4940 0F64  
                                        i2l4782 1D2C                                          i2l4774 1CE2  
                                        i2l4766 1C96                                          i2l4862 1FC2  
                                        i2l4854 1F96                                          i2l4846 1F6E  
                                        i2l4950 0FA2                                          i2l4778 1D08  
                                        i2l4866 1FD8                                          i2l4858 1FAC  
                                        i2l4788 288E                                          i2l4796 28A2  
                                        i2l5686 26D4                                          i2l4982 104C  
                                        i2l4966 1000                                          i2l4992 108A  
                                        i2l4968 1006                                          _FVRCON 000F31  
                   i2MRF89XA_GetAddress@Address 002A                                          _OSCFRQ 000EDE  
                  __size_of_EUSART1_is_tx_ready 0004                                          _RX1PPS 000EB5  
                                        _TX1REG 000F9A                        i2MRF89XA_SendConfig@Data 0032  
                                        _TX1STA 000F9E                       __end_of_ext_rf_initialize 2B26  
                    __end_of_MRF89XA_SendConfig 21E2                               ??_MRF89XA_SetMode 0000  
                              i2Delay_Xms@delay 0029                                  __CFG_PWRTE$OFF 000000  
                                  ?i2_Delay_Xms 0029                                    ?i2_Delay_Xus 0029  
                                __CFG_XINST$OFF 000000                                          _SetLed 1EBC  
                             _CLKREF_Initialize 2AF8                                       ??_RunLoop 0000  
                              _EXT_TARGET_RF_RX 0022                              ?_CLKREF_Initialize 0029  
                          ?_MRF89XA_WriteConfig 018C                                  __CFG_STVREN$ON 000000  
                            spi2_exchangeByte@b 0180                                i2Delay_Xus@delay 0029  
                      ?_EUSART1_SetErrorHandler 0180                         i2SetLedBlink@StartAfter 002F  
                       __end_of_TMR4_Initialize 2684                                          clear_0 23B0  
                                        clear_1 23BC                                          clear_2 23C8  
                           __end_of_SetLedBlink 1660             __size_of_IOCAF0_SetInterruptHandler 000A  
           __size_of_IOCAF3_SetInterruptHandler 000A                ??_EUSART1_SetOverrunErrorHandler 0000  
               ?_EUSART1_SetOverrunErrorHandler 0180                                 ??_INT0_CallBack 003B  
                              __end_of_spi2_isr 2BF8             __size_of_IOCBF5_SetInterruptHandler 000A  
           __size_of_IOCCF4_SetInterruptHandler 000A                             ??_CLKREF_Initialize 0000  
           __size_of_IOCCF7_SetInterruptHandler 000A            __end_of_TMR4_DefaultInterruptHandler 2C5A  
         __size_of_TMR4_DefaultInterruptHandler 0002                    _TMR4_DefaultInterruptHandler 2C58  
                                _PMD_Initialize 29CC            __end_of_INT2_DefaultInterruptHandler 2C72  
         __size_of_INT2_DefaultInterruptHandler 0002                    _INT2_DefaultInterruptHandler 2C70  
                                  __pdataCOMRAM 003F                                 ??_INT1_CallBack 0029  
                            __size_of_ToggleLed 00DC                                    __mediumconst 0000  
                                   SetLed@mode2 0184                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                               ??_INT2_CallBack 0029                                 ??_EUSART1_Write 0000  
                              _RGB_B_BlinkCount 0003        TMR4_SetInterruptHandler@InterruptHandler 0180  
    IOCCF7_SetInterruptHandler@InterruptHandler 0180      IOCCF6_SetInterruptHandler@InterruptHandler 0180  
    IOCCF5_SetInterruptHandler@InterruptHandler 0180      IOCCF4_SetInterruptHandler@InterruptHandler 0180  
    IOCCF3_SetInterruptHandler@InterruptHandler 0180      IOCBF5_SetInterruptHandler@InterruptHandler 0180  
    IOCAF4_SetInterruptHandler@InterruptHandler 0180      IOCAF3_SetInterruptHandler@InterruptHandler 0180  
    IOCAF1_SetInterruptHandler@InterruptHandler 0180      IOCAF0_SetInterruptHandler@InterruptHandler 0180  
      INT2_SetInterruptHandler@InterruptHandler 0180        INT1_SetInterruptHandler@InterruptHandler 0180  
      INT0_SetInterruptHandler@InterruptHandler 0180        TMR2_SetInterruptHandler@InterruptHandler 0180  
                              ?_PIN_MANAGER_IOC 0029                                 _eusart1RxBuffer 0100  
                                  ??_IOCAF0_ISR 0029                                    ??_IOCAF1_ISR 0029  
                                  ??_IOCAF3_ISR 0029                             MRF89XA_SetMode@Mode 018F  
                                  ??_IOCAF4_ISR 0029                            __size_of_MASTER_open 0008  
                                  ??_IOCBF5_ISR 0029                   __size_of_INTERRUPT_Initialize 0004  
                                  ??_IOCCF3_ISR 0029                                    ??_IOCCF4_ISR 0029  
                                  ??_IOCCF5_ISR 0029                                    ??_IOCCF6_ISR 0029  
                               _eusart1TxBuffer 0140                                    ??_IOCCF7_ISR 0029  
                           MRF89XA_SetMode@mask 018E                               ToggleLed@ledIndex 0029  
                             _SYSTEM_Initialize 2290                               __end_of_Delay_Xms 238A  
                             __end_of_Delay_Xus 24AE                                      __accesstop 0060  
                       __end_of__initialization 23CE                                GetTarget@Address 0180  
                           _I2C_Master_Send_ACK 26DE                                       ?_INT0_ISR 0029  
                                     ?_INT1_ISR 0029                                       ?_INT2_ISR 0029  
        __end_of_IOCAF1_DefaultInterruptHandler 2C6E         __size_of_IOCAF1_DefaultInterruptHandler 0002  
                               _INT0_Custom_ISR 2A50                  _IOCAF1_DefaultInterruptHandler 2C6C  
                         __end_of_TMR2_CallBack 2930                              ?_SYSTEM_Initialize 0029  
                     __end_of_CLKREF_Initialize 2B04                                   ___rparam_used 000001  
                             __end_of_GetTarget 2A96                            i2SetLedBlink@OffTime 002D  
                __size_of_EUSART1_RxDataHandler 0020                   __end_of_EUSART1_RxDataHandler 29B0  
               __size_ofi2_MRF89XA_ExchangeByte 000A                          MRF89XA_GetAddress@Read 0180  
                    __end_of_spi2_configuration 0F1D                                  __pcstackCOMRAM 0029  
                         ??_MRF89XA_WriteConfig 0000                           __end_of_TMR4_CallBack 2910  
                           ??_SYSTEM_Initialize 0000                                ?_DAC1_Initialize 0029  
                                     ?_TMR2_ISR 0029                                       ?_TMR4_ISR 0029  
                                  _R_BlinkCount 0017          __end_of_IOCAF4_DefaultInterruptHandler 2C6A  
       __size_of_IOCAF4_DefaultInterruptHandler 0002                  _IOCAF4_DefaultInterruptHandler 2C68  
                              ?_TMR2_Initialize 0029                                       ?i2_SetLed 0029  
                              ?_TMR2_Custom_ISR 0029                            ?_I2C_Master_Send_ACK 0029  
                        __end_of_PMD_Initialize 29E8                              __end_of_IOCAF0_ISR 2884  
                            __end_of_IOCAF1_ISR 285E                              __end_of_IOCAF3_ISR 2838  
                            __end_of_IOCAF4_ISR 2812                            __end_of_EUSART1_Read 24F0  
                            __end_of_IOCBF5_ISR 27EC                              __end_of_IOCCF3_ISR 27C6  
                            __end_of_IOCCF4_ISR 27A0                              __end_of_IOCCF5_ISR 277A  
                            __end_of_IOCCF6_ISR 2754                              __end_of_IOCCF7_ISR 272E  
                        ??_EUSART1_Transmit_ISR 0029                     __size_of_EXT_INT_Initialize 0046  
              __end_of_INT2_SetInterruptHandler 2BA8                     __end_of_EUSART1_Receive_ISR 2082  
                 ?_TMR4_DefaultInterruptHandler 0029                   ?_INT2_DefaultInterruptHandler 0029  
                 __size_of_MRF89XA_ExchangeByte 000E                     ?_IOCCF3_SetInterruptHandler 0180  
                        I2C_Master_Send_ACK@Ack 002A                     ?_IOCCF6_SetInterruptHandler 0180  
                     __end_of_SYSTEM_Initialize 22E4                   __size_ofi2_MRF89XA_GetAddress 0018  
                                 _eusart1RxHead 0026                                   _eusart1TxHead 0028  
                                 _eusart1RxTail 0025                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                   _eusart1TxTail 0027  
             _EUSART1_TxDefaultInterruptHandler 00F6                 ??_EUSART1_SetRxInterruptHandler 0000  
                         _INT0_InterruptHandler 00FC                                      ??_INT0_ISR 003B  
                                    ??_INT1_ISR 0029                                      ??_INT2_ISR 0029  
                                    __pnvCOMRAM 004B                           _TMR4_InterruptHandler 00D8  
                      __size_of_spi_master_open 001C                      __size_of_ext_rf_initialize 000A  
                  __size_of_I2C_BusCollisionISR 0006                         _IOCCF3_InterruptHandler 00E8  
                       i2MRF89XA_GetAddress@ret 002B                                         ?_SetLed 0180  
               __end_of_EUSART1_SetErrorHandler 2BEE                               __end_of_ToggleLed 1D4E  
                              ??_FVR_Initialize 0000                                     _SetLedBlink 1490  
                            __size_of_spi2_open 00C2                                 __CFG_PPS1WAY$ON 000000  
                                    ??_TMR2_ISR 002F                                      ??_TMR4_ISR 0029  
                       ??_MRF89XA_SetModulation 0000                           ??_I2C_Master_Send_ACK 0029  
                                    ??i2_SetLed 002D                                ?_TMR4_Initialize 0029  
        __end_of_IOCCF5_DefaultInterruptHandler 2C62         __size_of_IOCCF5_DefaultInterruptHandler 0002  
                _IOCCF5_DefaultInterruptHandler 2C60                                 ?_PMD_Initialize 0029  
                                       _CLKRCLK 000F3F                                         _CLKRCON 000F3E  
                        __size_of_ext_rf_runcmd 00AC          __end_of_EUSART1_SetFramingErrorHandler 2BE4  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2BDA  
                                Delay_Xms@delay 0180                    __size_ofi2_spi2_exchangeByte 0012  
                    ??_INT1_SetInterruptHandler 0000                                         _INT0PPS 000EA1  
                                       _INT1PPS 000EA2                                         _INT2PPS 000EA3  
                             ?_MRF89XA_IsTxDone 0029                    ?_EUSART1_DefaultErrorHandler 0029  
                                       _SP1BRGH 000F9C              __end_of_IOCAF0_SetInterruptHandler 2B9E  
                    _IOCAF0_SetInterruptHandler 2B94                                         _SP1BRGL 000F9B  
                        i2_MRF89XA_ExchangeByte 2C20              __end_of_IOCAF3_SetInterruptHandler 2B8A  
                    _IOCAF3_SetInterruptHandler 2B80                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA              __end_of_IOCBF5_SetInterruptHandler 2B76  
                    _IOCBF5_SetInterruptHandler 2B6C                                         _OSCTUNE 000EDD  
                            ??_MRF89XA_IsTxDone 0036              __end_of_IOCCF4_SetInterruptHandler 2B62  
                    _IOCCF4_SetInterruptHandler 2B58                                         _SSP1ADD 000F93  
                                       _SSP2ADD 000E93                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                                       _SSP1BUF 000F92                                         _SSP2BUF 000E92  
                       __end_of_INT0_Custom_ISR 2A68                      MRF89XA_WriteConfig@Address 018D  
            __end_of_IOCCF7_SetInterruptHandler 2B44                      _IOCCF7_SetInterruptHandler 2B3A  
                                       _SSP1MSK 000F94                                         _B_State 0045  
                                Delay_Xus@delay 0180                ??_IOCCF3_DefaultInterruptHandler 0029  
               ?_IOCCF3_DefaultInterruptHandler 0029                               ?_MRF89XA_SendData 0037  
                            _MRF89XA_GetAddress 29E8                                         _G_State 0047  
                       ?_MRF89XA_ReadAllConfigs 0029                              ??_MRF89XA_SendData 0038  
             __size_of_INT0_SetInterruptHandler 000A                                         _R_State 0049  
                    __size_of_CLKREF_Initialize 000C                       ?_INT0_SetInterruptHandler 0180  
                           ?_MRF89XA_GetAddress 0180                                       ?_spi2_isr 0029  
                                       __Hparam 0000                ??_IOCCF6_DefaultInterruptHandler 0029  
               ?_IOCCF6_DefaultInterruptHandler 0029                                         __Lparam 0000  
                    ??_TMR2_SetInterruptHandler 0000                                 __size_of_SetLed 009A  
                    __CFG_RSTOSC$HFINTOSC_64MHZ 000000                                         _RunLoop 21E2  
                          __size_ofi2_Delay_Xms 004A                            __size_ofi2_Delay_Xus 0042  
                              _RGB_B_StartAfter 00A4                                   _RGB_B_Enabled 00A6  
                              _RGB_G_BlinkCount 0007                                    __psmallconst 0F00  
                                 _RGB_B_OffTime 00A8                                   _RGB_B_Counter 0005  
                           _EUSART1_is_rx_ready 2C54                                         __pcinit 238A  
                          MRF89XA_SendData@Data 0037                                         __ramtop 0F00  
                    i2MRF89XA_ExchangeByte@byte 002A                             _EUSART1_is_tx_ready 2C50  
                 __size_ofi2_MRF89XA_SendConfig 0056                                         __ptext0 182E  
                                       __ptext1 2B1C                                         __ptext2 2A80  
                                       __ptext3 2290                                         __ptext4 29B0  
                                       __ptext5 2C2A                                         __ptext6 1D4E  
                                       __ptext7 2656                                         __ptext8 2B26  
                                       __ptext9 2684                            ??_MRF89XA_GetAddress 0000  
                         _OSCILLATOR_Initialize 2A38                                       _T2CONbits 000FBD  
                                 _RGB_G_Enabled 00B0                                       _T4CONbits 000FB7  
                            _EUSART1_Initialize 2082                        ??_PIN_MANAGER_Initialize 0000  
             __size_of_TMR4_SetInterruptHandler 000A                                       _T2HLTbits 000FBE  
                                     _IOCAFbits 000F0A                                       _IOCBFbits 000F12  
                                     _IOCCFbits 000F1A                       ?_TMR4_SetInterruptHandler 0180  
                      __size_of_I2C_Master_Init 003A                                   _RGB_G_OffTime 00B2  
                                 _RGB_G_Counter 0009                                       _IOCANbits 000F0B  
                   i2MRF89XA_SendConfig@Address 0033                                       _IOCAPbits 000F0C  
                                     _IOCBNbits 000F13                                       _IOCBPbits 000F14  
                                     _IOCCNbits 000F1B                                       _IOCCPbits 000F1C  
                      __size_of_I2C_Master_Stop 000C                                       _T4HLTbits 000FB8  
                                    _spi2_close 000000                   ??_EUSART1_DefaultErrorHandler 0029  
                               _MRF89XA_SetMode 25E8                               __end_of_spi2_open 1E10  
                __end_of_MRF89XA_ReadAllConfigs 28AA                      __size_of_SYSTEM_Initialize 0054  
                                  _R_StartAfter 00D6                            end_of_initialization 23CE  
                          ?_EUSART1_is_rx_ready 0029                                       _T2RSTbits 000FC0  
                      _INT2_SetInterruptHandler 2B9E                  ??_TMR4_DefaultInterruptHandler 0029  
                           ?_EUSART1_Initialize 0029                  ??_INT2_DefaultInterruptHandler 0029  
                            _MRF89XA_ReadConfig 2A96                            ?_EUSART1_is_tx_ready 0029  
                                     _T4RSTbits 000FBA                                   _ext_rf_runcmd 1E10  
                   _EUSART1_OverrunErrorHandler 00DC                               __end_of_spiMaster 0F15  
                                    ??_spi2_isr 0029                       __size_of_I2C_Master_Start 000C  
                 MRF89XA_ReadAllConfigs@counter 0038                       __size_of_I2C_Master_Write 0042  
         __end_of_EUSART1_SetRxInterruptHandler 2BD0          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 2BC6                              _MRF89XA_Initialize 1B62  
                           ?_MRF89XA_ReadConfig 0029                           __end_ofi2_SetLedBlink 182E  
                                     _B_Enabled 00C4                                         postdec1 000FE5  
                                       postinc0 000FEE                           __size_of_EUSART1_Read 0042  
                                 _RGB_R_Enabled 00BA                                       _B_OffTime 00C6  
                                     _B_Counter 0011                               ??_spi_master_open 0000  
                           ?_MRF89XA_Initialize 0190                            ??_EUSART1_Initialize 0000  
                                 _RGB_R_OffTime 00BC                                   _RGB_R_Counter 000D  
                         __CFG_WDTCPS$WDTCPS_31 000000                        __size_of_I2C_SendCommand 0078  
                            _MRF89XA_SendConfig 217E                           _INT1_InterruptHandler 00FA  
                                     _PORTCbits 000F8F                                       _G_Enabled 00CE  
                       _IOCAF0_InterruptHandler 00F2                                       _G_OffTime 00D0  
                       _IOCCF4_InterruptHandler 00E6                                       _G_Counter 0015  
                                 _spi2_readByte 000000                            ??_MRF89XA_ReadConfig 0035  
                                     _TRISBbits 000F89                                       _TRISDbits 000F8B  
                           ?_MRF89XA_SendConfig 0189                    ??_IOCAF1_SetInterruptHandler 0000  
                  ??_IOCAF4_SetInterruptHandler 0000                                ?_INT0_Custom_ISR 0029  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0180  
                              __CFG_FEXTOSC$OFF 000000                    ??_IOCCF5_SetInterruptHandler 0000  
                         ??_EUSART1_is_rx_ready 0000                            ??_MRF89XA_Initialize 0000  
                   _spi2_exchangeByte$intlevel0 2A24                           I2C_SendCommand@Target 0036  
                         ??_EUSART1_is_tx_ready 0000                                  ?_ext_rf_runcmd 0029  
                                  _EUSART1_Read 24AE                                       _Delay_Xms 2338  
                             __size_of_INT0_ISR 000A                                       _Delay_Xus 2468  
                             __size_of_INT1_ISR 000A                               __size_of_INT2_ISR 000A  
                         I2C_SendCommand@result 0035            __size_of_EUSART1_DefaultErrorHandler 0006  
                          ??_MRF89XA_SendConfig 0000                                       _R_Enabled 001B  
                                __end_of_SetLed 1F56                                       _GetTarget 2A80  
                  __end_of_INTERRUPT_Initialize 2C50                                       _R_OffTime 001D  
                                     _R_Counter 0019            __end_of_TMR2_DefaultInterruptHandler 2C5C  
         __size_of_TMR2_DefaultInterruptHandler 0002                    _TMR2_DefaultInterruptHandler 2C5A  
          __end_of_INT0_DefaultInterruptHandler 2C76           __size_of_INT0_DefaultInterruptHandler 0002  
                  _INT0_DefaultInterruptHandler 2C74                                   __pidataCOMRAM 2AE0  
           __size_of_IOCAF1_SetInterruptHandler 000A                               __size_of_TMR2_ISR 000A  
                             __size_of_TMR4_ISR 0022             __size_of_IOCAF4_SetInterruptHandler 000A  
                        ?_OSCILLATOR_Initialize 0029                         __end_of_MRF89XA_SetMode 2620  
           __size_of_IOCCF5_SetInterruptHandler 000A                               __size_ofi2_SetLed 0098  
                         __end_of_INT0_CallBack 2990                             _I2C_BusCollisionISR 2C3A  
                            _spi2_configuration 0F15                             start_initialization 238A  
                                 ??_MASTER_open 0000                 __size_of_PIN_MANAGER_Initialize 016C  
                         __end_of_INT1_CallBack 2970   EUSART1_SetRxInterruptHandler@interruptHandler 0180  
 EUSART1_SetTxInterruptHandler@interruptHandler 0180                                _RGB_G_StartAfter 00AE  
                         __end_of_INT2_CallBack 2950                           __end_of_EUSART1_Write 25E8  
               MRF89XA_SetModulation@Modulation 018E                           i2SetLedBlink@ledIndex 0029  
                             ??_I2C_Master_Init 0000                               ??_I2C_Master_Stop 0029  
                   __end_of_MRF89XA_WriteConfig 2A1E                             i2_spi2_exchangeByte 2AC0  
                          ?_I2C_BusCollisionISR 0029                        __size_of_PIN_MANAGER_IOC 0054  
                                    ?_Delay_Xms 0180                                      ?_Delay_Xus 0180  
                  __end_of_MRF89XA_ExchangeByte 2AE0                                        ??_SetLed 0000  
                              __CFG_LPBOREN$OFF 000000                                    ?_SetLedBlink 0180  
                  __end_ofi2_MRF89XA_GetAddress 2A80                                ??_PMD_Initialize 0000  
                                    ?_GetTarget 0029                           _EUSART1_RxDataHandler 2990  
                          i2spi2_exchangeByte@b 0029                  ?_EUSART1_SetRxInterruptHandler 0180  
                                _G_BlinkCounter 00CA                                       _ToggleLed 1C72  
                    __end_of_EXT_INT_Initialize 2468                   ?_TMR2_DefaultInterruptHandler 0029  
                 ?_INT0_DefaultInterruptHandler 0029                ??_IOCAF0_DefaultInterruptHandler 0029  
               ?_IOCAF0_DefaultInterruptHandler 0029                  __size_of_MRF89XA_SetModulation 0024  
                       ?i2_MRF89XA_ExchangeByte 0029                   __end_of_MRF89XA_SetModulation 28CE  
                                _eusart1RxCount 0024                            ?i2_spi2_exchangeByte 0029  
                        __size_of_TMR2_CallBack 0020                        __size_of_DAC1_Initialize 000C  
                         TMR4_ISR@CountCallBack 0001                                     __pbssCOMRAM 0001  
             _EUSART1_RxDefaultInterruptHandler 00F4                __end_of_INT0_SetInterruptHandler 2BBC  
                            _RGB_G_BlinkCounter 00AC                   __size_of_EUSART1_Transmit_ISR 002C  
                   ?_IOCAF0_SetInterruptHandler 0180                                   __pcstackBANK0 0000  
                                 __pcstackBANK1 0180                             i2SetLedBlink@OnTime 002B  
                   ?_IOCAF3_SetInterruptHandler 0180                               ??_I2C_SendCommand 0035  
                      __size_of_TMR2_Initialize 002E                        __size_of_TMR2_Custom_ISR 0572  
                   ?_IOCBF5_SetInterruptHandler 0180                     ?_IOCCF4_SetInterruptHandler 0180  
                   ?_IOCCF7_SetInterruptHandler 0180                                 ??_ext_rf_runcmd 0039  
              ??_IOCAF3_DefaultInterruptHandler 0029                 ?_IOCAF3_DefaultInterruptHandler 0029  
                        __size_of_TMR4_CallBack 0020                 ??_EUSART1_SetTxInterruptHandler 0000  
              ??_EUSART1_SetFramingErrorHandler 0000                 ?_EUSART1_SetFramingErrorHandler 0180  
                  __size_of_EUSART1_Receive_ISR 0094                             __end_of_MASTER_open 2C32  
                         _INT2_InterruptHandler 00F8                        i2MRF89XA_GetAddress@Read 0029  
                         ??_I2C_BusCollisionISR 0029                       __size_of_MRF89XA_IsTxDone 0014  
                                     __pnvBANK0 00D8                                _I2C_Master_Start 2B10  
                    MRF89XA_ReadAllConfigs@cond 0037                                _I2C_Master_Write 2532  
                       _IOCAF1_InterruptHandler 00F0                       MRF89XA_SetModulation@mask 018F  
                       _IOCCF5_InterruptHandler 00E4                          _PIN_MANAGER_Initialize 19F6  
                   __end_of_I2C_Master_Send_ACK 2708          __end_of_IOCCF3_DefaultInterruptHandler 2C66  
       __size_of_IOCCF3_DefaultInterruptHandler 0002                  _IOCCF3_DefaultInterruptHandler 2C64  
                             __size_of_spi2_isr 000A                                        ?_RunLoop 0029  
                                     __pintcode 0008                       __size_of_MRF89XA_SendData 0036  
              __end_of_TMR4_SetInterruptHandler 2B30                                       __ptext100 2AAC  
                                     __ptext101 2884                                       __ptext110 2532  
                                     __ptext102 2A96                                       __ptext111 1660  
                                     __ptext103 223A                                       __ptext120 2C46  
                                     __ptext112 2B04                                       __ptext104 2C20  
                                     __ptext121 2990                                       __ptext113 2B10  
                                     __ptext105 2AC0                                       __ptext122 0000  
                                     __ptext114 26DE                                       __ptext106 24F0  
                                     __ptext115 2C3A                                       __ptext107 2A68  
                                     __ptext116 26B2                                       __ptext108 2106  
                                     __ptext117 1FEE                                       __ptext109 23D8  
                                     __ptext118 2C40                                       __ptext119 2C76  
                                    ?_ToggleLed 0029                  __end_ofi2_MRF89XA_ExchangeByte 2C2A  
                                      _DAC1CON0 000F33                                        _DAC1CON1 000F34  
                          I2C_Master_Write@data 0033                    ??_INTERRUPT_InterruptManager 003B  
                              i2SetLed@ledIndex 0029                           _spi2_interruptHandler 00A0  
                      MRF89XA_ExchangeByte@byte 0181                              I2C_SendCommand@CMD 0034  
                         ??i2_spi2_exchangeByte 0029                                ?_MRF89XA_SetMode 0029  
                                      _BAUD1CON 000F9F                ??_IOCBF5_DefaultInterruptHandler 0029  
               ?_IOCBF5_DefaultInterruptHandler 0029                                     __smallconst 0F00  
                    ??_INT2_SetInterruptHandler 0000          __end_of_IOCCF6_DefaultInterruptHandler 2C60  
       __size_of_IOCCF6_DefaultInterruptHandler 0002                  _IOCCF6_DefaultInterruptHandler 2C5E  
    __end_of_EUSART1_DefaultOverrunErrorHandler 2C46     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0029             ?_EUSART1_DefaultOverrunErrorHandler 0029  
            _EUSART1_DefaultOverrunErrorHandler 2C40                                 ext_rf_runcmd@dx 0039  
                          _EUSART1_ErrorHandler 00DA              __end_of_IOCAF1_SetInterruptHandler 2B94  
                    _IOCAF1_SetInterruptHandler 2B8A              __end_of_IOCAF4_SetInterruptHandler 2B80  
                    _IOCAF4_SetInterruptHandler 2B76                                    i2Delay_Xms@i 002E  
                                  i2Delay_Xus@i 002E                         _EUSART1_SetErrorHandler 2BE4  
                      __size_of_TMR4_Initialize 002E                   MRF89XA_SendData@TargetAddress 0038  
            __end_of_IOCCF5_SetInterruptHandler 2B58                      _IOCCF5_SetInterruptHandler 2B4E  
                  MRF89XA_Initialize@Modulation 0191                                    _RGB_B_OnTime 00AA  
                                      _T2CLKCON 000FBF                                        _T4CLKCON 000FB9  
                          _INTERRUPT_Initialize 2C4C                    __end_ofi2_MRF89XA_SendConfig 2290  
              ??_IOCCF4_DefaultInterruptHandler 0029                 ?_IOCCF4_DefaultInterruptHandler 0029  
                                  _RGB_G_OnTime 00B4                       MRF89XA_GetAddress@Address 0181  
                               _spi_master_open 29B0                                       _spi2_open 1D4E  
                                      _INT0_ISR 2C16                                        _INT1_ISR 2C0C  
                                      _INT2_ISR 2C02         EUSART1_SetErrorHandler@interruptHandler 0180  
                                      _LATCbits 000F85                                        _LATDbits 000F86  
                                      _LATEbits 000F87               __size_of_INT1_SetInterruptHandler 000A  
                     ?_INT1_SetInterruptHandler 0180                                   _TMR2_CallBack 2910  
                                      _PIE0bits 000EC2                                        _PIE3bits 000EC5  
                                      _PIE4bits 000EC6                                   ??i2_Delay_Xms 002D  
                                 ??i2_Delay_Xus 002D                                     ??_Delay_Xms 0184  
                                   ??_Delay_Xus 0184                                        i2u310_48 1CAA  
           __size_of_INTERRUPT_InterruptManager 00C0                                        i2u312_40 1CD0  
                                      i2u321_40 1D40                                        i2u313_48 1CD2  
                                      i2u306_40 1C84                                        i2u401_48 291E  
                                      i2u322_48 1D42                                        i2u315_40 1CF6  
                                      i2u307_48 1C86                                        i2u403_48 297E  
                                      i2u316_48 1CF8                                        i2u309_40 1CA8  
                                      i2u341_45 1FD4                                        i2u333_45 1F7E  
                                      i2u341_46 1FD6                                        i2u333_46 1F80  
                                      i2u318_40 1D1C                                        i2u405_48 295E  
                                      i2u422_48 286C                                        i2u430_48 27D4  
                                      i2u422_49 287E                                        i2u430_49 27E6  
                                      _PIR0bits 000ECA                                        i2u343_45 1FEA  
                                      i2u335_45 1F92                                        i2u343_46 1FEC  
                                      i2u335_46 1F94                                        i2u319_48 1D1E  
                                      i2u407_48 293E                                        i2u424_48 2846  
                                      i2u432_48 27AE                                        i2u440_48 2716  
                                      i2u353_40 0FE6                                        i2u424_49 2858  
                                      i2u432_49 27C0                                        i2u440_49 2728  
                                      i2u337_45 1FA8                                        i2u337_46 1FAA  
                                      i2u362_40 10CE                                        i2u290_48 26EE  
                                      i2u426_48 2820                                        i2u434_48 2788  
                                      i2u371_40 11B6                                        i2u426_49 2832  
                                      i2u434_49 279A                                        i2u339_45 1FBE  
                                      i2u339_46 1FC0                                        i2u380_40 129E  
                                      i2u428_48 27FA                                        i2u436_48 2762  
                                      i2u428_49 280C                                        i2u436_49 2774  
                                      _PIR3bits 000ECD                                        i2u294_40 2ABC  
                                      i2u606_47 23F0                                        i2u438_48 273C  
                                      i2u438_49 274E                                        _PIR4bits 000ECE  
                                      i2u447_48 28FE                                        i2u289_40 26EC  
                                  _B_BlinkCount 000F                                        i2u474_48 2016  
                                      i2u299_40 211C                                        i2u474_49 2028  
                                      i2u476_48 2040                                        i2u389_40 1386  
                                      i2u469_40 28E2                                        i2u476_49 2052  
                                      i2u398_40 146E                                        i2u478_48 2068  
                                      i2u496_48 0066                                        i2u499_48 007E  
                                     _spiMaster 0F01                          ?_EUSART1_RxDataHandler 0029  
                                      _B_OnTime 00C8                ??_IOCCF7_DefaultInterruptHandler 0029  
               ?_IOCCF7_DefaultInterruptHandler 0029                                     ??_GetTarget 0000  
                                      _SSP1CON1 000F96                                        _SSP1CON2 000F97  
                                      _SSP1CON3 000F98                                        _SSP2CON1 000E96  
                                      _SSP2CON2 000E97                                    _RGB_R_OnTime 00BE  
                                      _TMR2_ISR 2BF8                                        _TMR4_ISR 28CE  
                                 _TMR4_CallBack 28F0                                        _SSP1STAT 000F95  
                                      _SSP2STAT 000E95                               ??_PIN_MANAGER_IOC 0029  
                                      i2_SetLed 1F56                                        _G_OnTime 00D2  
                       __size_of_FVR_Initialize 0008                     __size_of_MRF89XA_GetAddress 001C  
                     MRF89XA_ReadConfig@Address 0035                  ??_TMR2_DefaultInterruptHandler 0029  
             __size_of_TMR2_SetInterruptHandler 000A                  ??_INT0_DefaultInterruptHandler 0029  
                     ?_TMR2_SetInterruptHandler 0180                            _MRF89XA_ExchangeByte 2AD2  
                                  GetTarget@ret 0181                                     _MASTER_open 2C2A  
                                      _R_OnTime 001F                            i2_MRF89XA_GetAddress 2A68  
                                     copy_data0 239E                           ?_INTERRUPT_Initialize 0029  
                             ??_DAC1_Initialize 0000                        _INT0_SetInterruptHandler 2BB2  
                              _RGB_R_BlinkCount 000B                              _spi2_exchangeBlock 000000  
                           SetLedBlink@ledIndex 0180                               ??_TMR2_Initialize 0000  
                                    ?_spi2_open 0029                           EUSART1_Read@readValue 0180  
                             ??_TMR2_Custom_ISR 002F                                  ?_TMR2_CallBack 0029  
         __end_of_EUSART1_SetTxInterruptHandler 2BC6          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 2BBC                                        __Hrparam 0000  
                        MRF89XA_SendConfig@Data 0189                                        __Lrparam 0000  
                          INT0_Custom_ISR@index 003A                              __CFG_BOREN$SBORDIS 000000  
                                ?_TMR4_CallBack 0029                                __size_of_RunLoop 0058  
                          __size_of_SetLedBlink 01D0                         ??_OSCILLATOR_Initialize 0000  
                                   ??_ToggleLed 002B                             __end_ofi2_Delay_Xms 2422  
                           __end_ofi2_Delay_Xus 2532                     __size_of_EUSART1_Initialize 0084  
                      _TMR4_SetInterruptHandler 2B26                                      _ANSELBbits 000F19  
                     ??_EUSART1_SetErrorHandler 0000             __end_of_EUSART1_DefaultErrorHandler 2C4C  
                   _EUSART1_DefaultErrorHandler 2C46                     __end_of_EUSART1_is_rx_ready 2C58  
                               _I2C_Master_Init 2574                         _IOCCF6_InterruptHandler 00E2  
                               _I2C_Master_Stop 2B04                           ?_MRF89XA_ExchangeByte 0029  
                   __end_of_EUSART1_is_tx_ready 2C54                     __size_of_MRF89XA_ReadConfig 0016  
                       __end_of_spi_master_open 29CC                                   i2SetLed@mode2 002D  
                                      __ptext10 2B30                                        __ptext11 1EBC  
                                      __ptext20 2B76                                        __ptext12 29CC  
                                      __ptext21 2B80                                        __ptext13 19F6  
                                      __ptext30 2BA8                                        __ptext22 2B8A  
                                      __ptext14 2B3A                                        __ptext31 2BB2  
                                      __ptext23 2B94                                        __ptext15 2B44  
                                      __ptext40 21E2                                        __ptext32 2082  
                                      __ptext24 2A38                                        __ptext16 2B4E  
                                      __ptext41 1490                                        __ptext33 2BBC  
                                      __ptext25 2C4C                                        __ptext17 2B58  
                                      __ptext50 217E                                        __ptext42 2C50  
                                      __ptext34 2BC6                                        __ptext26 2574  
                                      __ptext18 2B62                                        __ptext51 2AD2  
                                      __ptext43 2C54                                        __ptext35 2BD0  
                                      __ptext27 2C32                                        __ptext19 2B6C  
                                      __ptext60 2C58                                        __ptext52 2A1E  
                                      __ptext44 25AE                                        __ptext36 2BDA  
                                      __ptext28 2422                                        __ptext61 2BF8  
                                      __ptext53 2468                                        __ptext45 24AE  
                                      __ptext37 2BE4                                        __ptext29 2B9E  
                                      __ptext70 2C5E                                        __ptext62 2910  
                                      __ptext54 29E8                                        __ptext46 1B62  
                                      __ptext38 2AEC                                        __ptext71 2754  
                                      __ptext63 0F1E                                        __ptext55 2338  
                                      __ptext47 28AA                                        __ptext39 2AF8  
                                      __ptext80 2C68                                        __ptext72 2C60  
                                      __ptext64 2C5A                                        __ptext48 25E8  
                                      __ptext81 2812                                        __ptext73 277A  
                                      __ptext65 1F56                                        __ptext57 2BEE  
                                      __ptext49 2A04                                        __ptext90 2C0C  
                                      __ptext82 2C6A                                        __ptext74 2C62  
                                      __ptext66 22E4                                        __ptext58 28CE  
                                      __ptext91 2950                                        __ptext83 2838  
                                      __ptext75 27A0                                        __ptext67 2708  
                                      __ptext59 28F0                                        __ptext92 2C72  
                                      __ptext84 2C6C                                        __ptext76 2C64  
                                      __ptext68 2C5C                                        __ptext93 2C16  
                                      __ptext85 285E                                        __ptext77 27C6  
                                      __ptext69 272E                                        __ptext94 2970  
                                      __ptext86 2C6E                                        __ptext78 2C66  
                                      __ptext95 2A50                                        __ptext87 2C02  
                                      __ptext79 27EC                                        __ptext96 2C74  
                                      __ptext88 2930                                        __ptext97 1E10  
                                      __ptext89 2C70                                        __ptext98 1C72  
                                      __ptext99 2620                           ?i2_MRF89XA_GetAddress 0029  
                                  _SSP1CON1bits 000F96                                    _SSP1CON2bits 000F97  
                        __size_ofi2_SetLedBlink 01CE                                    _SSP1CON3bits 000F98  
                  ??_IOCCF3_SetInterruptHandler 0000                    ??_IOCCF6_SetInterruptHandler 0000  
                                  _SSP2CON1bits 000E96                                      _IOCAF0_ISR 285E  
                                    _IOCAF1_ISR 2838                                      _IOCAF3_ISR 2812  
                                    _IOCAF4_ISR 27EC                     __size_of_MRF89XA_Initialize 0110  
                                    _IOCBF5_ISR 27C6                                      _IOCCF3_ISR 27A0  
                                    _IOCCF4_ISR 277A                                      _IOCCF5_ISR 2754  
                                SetLed@ledIndex 0180                                      _IOCCF6_ISR 272E  
                                    _IOCCF7_ISR 2708                           SetLedBlink@BlinkCount 0188  
                             ??_TMR4_Initialize 0000                                   __size_of_main 01C8  
                                   _RGB_B_State 003F                                _MRF89XA_IsTxDone 2AAC  
                      __size_of_INT0_Custom_ISR 0018                                        _spi2_isr 2BEE  
                          __CFG_WDTCWS$WDTCWS_7 000000                                     _RGB_G_State 0041  
                            __CFG_BORV$VBOR_190 000000                              SetLedBlink@OffTime 0184  
                                    _RC1STAbits 000F9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0180  
                   __size_of_MRF89XA_SendConfig 0064                                _MRF89XA_SendData 2620  
                                   _RGB_R_State 0043                                        int$flags 004C  
                               _I2C_SendCommand 2106              __end_of_INTERRUPT_InterruptManager 00C8  
                    _INTERRUPT_InterruptManager 0008                                    _SSP1STATbits 000F95  
                   _EUSART1_FramingErrorHandler 00DE                             _EUSART1_Receive_ISR 1FEE  
                          i2_MRF89XA_SendConfig 223A            __end_of_INT1_DefaultInterruptHandler 2C74  
         __size_of_INT1_DefaultInterruptHandler 0002                    _INT1_DefaultInterruptHandler 2C72  
           __size_of_IOCCF3_SetInterruptHandler 000A             __size_of_IOCCF6_SetInterruptHandler 000A  
                      ??_MRF89XA_ReadAllConfigs 0036                               _spi2_exchangeByte 2A1E  
                      __end_of_I2C_Master_Start 2B1C                        __end_of_I2C_Master_Write 2574  
                                    _INTCONbits 000FF2                                      Delay_Xms@i 0185  
                                    Delay_Xus@i 0185                                      _FVRCONbits 000F31  
                            ?_spi2_exchangeByte 0029                                    _B_StartAfter 00C2  
                         MRF89XA_SendConfig@ret 018B                                    _G_BlinkCount 0013  
                        ??_INTERRUPT_Initialize 0000                              _EXT_INT_Initialize 2422  
                                      intlevel2 0000          __end_of_IOCAF0_DefaultInterruptHandler 2C70  
       __size_of_IOCAF0_DefaultInterruptHandler 0002                  _IOCAF0_DefaultInterruptHandler 2C6E  
                               ??_TMR2_CallBack 002F                                    i2SetLed@Mode 002B  
                           ??_spi2_exchangeByte 0000                            ?_EUSART1_Receive_ISR 0029  
                                   ??_spi2_open 0180                         ?_PIN_MANAGER_Initialize 0029  
                             __CFG_CLKOUTEN$OFF 000000                             ?_EXT_INT_Initialize 0029  
        __end_of_EUSART1_SetOverrunErrorHandler 2BDA         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2BD0                    __end_of_EUSART1_Transmit_ISR 26DE  
                                   i2_Delay_Xms 23D8                                     i2_Delay_Xus 24F0  
                               ??_TMR4_CallBack 0029                          __size_of_INT0_CallBack 0020  
                             SetLedBlink@OnTime 0182                                  _B_BlinkCounter 00C0  
        __end_of_IOCAF3_DefaultInterruptHandler 2C6C         __size_of_IOCAF3_DefaultInterruptHandler 0002  
                _IOCAF3_DefaultInterruptHandler 2C6A                                   i2_SetLedBlink 1660  
                        __size_of_INT1_CallBack 0020                    __size_of_MRF89XA_WriteConfig 001A  
EUSART1_SetFramingErrorHandler@interruptHandler 0180                  ?_EUSART1_SetTxInterruptHandler 0180  
                       __end_of_I2C_Master_Init 25AE                         __end_of_I2C_Master_Stop 2B10  
                              _RGB_R_StartAfter 00B8                           ?i2_MRF89XA_SendConfig 0032  
                        __size_of_INT2_CallBack 0020                          __size_of_EUSART1_Write 003A  
                            _eusart1RxLastError 0023                       __end_of_spi2_exchangeByte 2A38  
                            _RGB_B_BlinkCounter 00A2                                  _FVR_Initialize 2C32  
                          ??_EXT_INT_Initialize 0000                                      _SSP1DATPPS 000EB8  
                 ?_INT1_DefaultInterruptHandler 0029                ??_IOCAF1_DefaultInterruptHandler 0029  
               ?_IOCAF1_DefaultInterruptHandler 0029                                      _SSP2DATPPS 000E90  
                        ??_MRF89XA_ExchangeByte 0000                                      _SSP1CLKPPS 000EB7  
                                    _SSP2CLKPPS 000E8F                           _MRF89XA_SetModulation 28AA  
              __end_of_INT1_SetInterruptHandler 2BB2                     ?_IOCAF1_SetInterruptHandler 0180  
                        ??i2_MRF89XA_GetAddress 002A                     ?_IOCAF4_SetInterruptHandler 0180  
                     MRF89XA_SendConfig@Address 018A                                ?_spi_master_open 0029  
                   ?_IOCCF5_SetInterruptHandler 0180                                      _TX1STAbits 000F9E  
                   __end_of_I2C_BusCollisionISR 2C40                                     ?_IOCAF0_ISR 0029  
                                   ?_IOCAF1_ISR 0029                                     ?_IOCAF3_ISR 0029  
                                   ?_IOCAF4_ISR 0029                                     ?_IOCBF5_ISR 0029  
                                   ?_IOCCF3_ISR 0029                                     ?_IOCCF4_ISR 0029  
                         ??_EUSART1_Receive_ISR 0029                                     ?_IOCCF5_ISR 0029  
                __end_of_PIN_MANAGER_Initialize 1B62                                     ?_IOCCF6_ISR 0029  
                                   ?_IOCCF7_ISR 0029                           __end_of_ext_rf_runcmd 1EBC  
              ??_IOCAF4_DefaultInterruptHandler 0029                 ?_IOCAF4_DefaultInterruptHandler 0029  
        __end_of_IOCBF5_DefaultInterruptHandler 2C68         __size_of_IOCBF5_DefaultInterruptHandler 0002  
                _IOCBF5_DefaultInterruptHandler 2C66                             MRF89XA_IsTxDone@reg 0036  
                               _PIN_MANAGER_IOC 22E4                                  _spi2_readBlock 000000  
                         _TMR2_InterruptHandler 00FE                         ??_EUSART1_RxDataHandler 0029  
                       _IOCAF3_InterruptHandler 00EE                         _IOCBF5_InterruptHandler 00EA  
                     MRF89XA_Initialize@Address 0192                         __end_of_I2C_SendCommand 217E  
                       _IOCCF7_InterruptHandler 00E0                                  ?i2_SetLedBlink 0029  
